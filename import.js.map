{"version":3,"file":"import.js","sources":["src/element/autoQuery.ts","src/element/keyLight.ts","src/calc/calcSum.ts","src/addressBar/addressBarCurrent.ts","src/addressBar/addressBarFilePath.ts","src/addressBar/addressBarFrom.ts","src/addressBar/addressBarHash.ts","src/addressBar/addressBarHttp.ts","src/addressBar/addressBarHost.ts","src/addressBar/addressBarHead.ts","src/addressBar/addressBarName.ts","src/addressBar/addressBarPort.ts","src/addressBar/addressBarQuery.ts","src/type/typeArray.ts","src/ao/aoCleanKeyOne.ts","src/ao/aoChunk.ts","src/type/typeObject.ts","src/ao/aoCleanKeyAll.ts","src/ao/aoWhetherIn.ts","src/ao/aoDeleteEmpty.ts","src/ao/aoDeleteKey.ts","src/ao/aoDeleteValue.ts","src/ao/aoKeyName.ts","src/ao/aoHoldKey.ts","src/ao/aoHoldValue.ts","src/ao/aoRandom.ts","src/ao/aoRepeat.ts","src/ao/aoReverse.ts","src/array/arrayDiKaErJi.ts","src/array/arrayFlatten.ts","src/array/arrayHasOne.ts","src/array/arrayIntersection.ts","src/type/typeNumber.ts","src/array/arrayOrder.ts","src/array/arrayOrderByField.ts","src/array/arrayRatioReplace.ts","src/array/arrayToStringChar.ts","src/array/arrayUnion.ts","src/array/arrayWhetherIn.ts","src/browser/browserUserAgent.ts","src/browser/browserInfoObject.ts","src/browser/browserIsMobile.ts","src/browser/browserIsPc.ts","src/browser/browserName.ts","src/browser/browserWhetherInArray.ts","src/case/caseAllBig.ts","src/case/caseAllSmall.ts","src/case/caseFirstBig.ts","src/case/caseWordFirstBig.ts","src/class/classHas.ts","src/class/classAdd.ts","src/class/classRemove.ts","src/class/classToggle.ts","src/controlInput/controlInputNumberSpace.ts","src/replace/replaceAll.ts","src/replace/replaceOne.ts","src/hold/holdFirst.ts","src/controlInput/controlInputPrice.ts","src/type/typeDate.ts","src/type/typeString.ts","src/format/formatAllNumber.ts","src/time/timeNewDate.ts","src/time/timeText.ts","src/time/timeObject.ts","src/time/timeFormat.ts","src/date/dateApart.ts","src/some/someWhetherLeapYear.ts","src/some/someFebruaryDays.ts","src/some/someYearMonthDays.ts","src/date/dateApartMonth.ts","src/date/dateApartMonthList.ts","src/date/dateDifference.ts","src/date/dateMonthFoot.ts","src/date/dateMonthHead.ts","src/time/timeGetYear.ts","src/time/timeGetMonth.ts","src/date/dateMonthNext.ts","src/date/dateMonthPrev.ts","src/date/dateWeekSunday.ts","src/date/dateOneWeek.ts","src/date/dateOneMonth.ts","src/define/defineBooleanAry.ts","src/define/defineFace.ts","src/define/defineIsUseAry.ts","src/ensure/ensureFootHave.ts","src/ensure/ensureFootNone.ts","src/ensure/ensureHeadHave.ts","src/ensure/ensureHeadNone.ts","src/file/fileFullName.ts","src/file/fileBaseName.ts","src/file/fileSuffixName.ts","src/file/fileClassify.ts","src/file/fileUnit.ts","src/filter/filterBoolean.ts","src/filter/filterDate.ts","src/filter/filterDateHI.ts","src/filter/filterDatetime.ts","src/filter/filterIsUse.ts","src/format/formatAllCn.ts","src/format/formatDate.ts","src/format/formatDatetime.ts","src/format/formatDomain.ts","src/format/formatEmail.ts","src/format/formatExternal.ts","src/format/formatHexColor.ts","src/format/formatIdCard.ts","src/format/formatImageBase.ts","src/format/formatIp.ts","src/format/formatMobile.ts","src/format/formatPrice.ts","src/format/formatTelephone.ts","src/format/formatUrl.ts","src/format/formatUsername.ts","src/format/formatZip.ts","src/have/haveAssign.ts","src/have/haveCn.ts","src/hold/holdCn.ts","src/hold/holdLetter.ts","src/hold/holdNumber.ts","src/local/localRead.ts","src/local/localSave.ts","src/month/monthDifference.ts","src/number/numberAddComma.ts","src/number/numberAddZero.ts","src/replace/replaceByObject.ts","src/number/numberGet.ts","src/number/numberPriceBigWrite.ts","src/number/numberUnit.ts","src/object/objectDeleteElement.ts","src/object/objectHasChildren.ts","src/object/objectLength.ts","src/object/objectRenameKey.ts","src/some/someColorHexToRGB.ts","src/some/someColorRGBToHex.ts","src/some/someMaxZIndex.ts","src/some/somePluralize.ts","src/some/someRandomColor.ts","src/string/stringCut.ts","src/string/stringCutCn.ts","src/string/stringLoop.ts","src/string/stringRandom.ts","src/string/stringReverse.ts","src/string/stringToArrayChar.ts","src/string/stringToArrayNumber.ts","src/time/timestamp.ts","src/time/timeAgoCn.ts","src/time/timeAgoEn.ts","src/time/timeDifference.ts","src/time/timeGetDay.ts","src/time/timeGetWeek.ts","src/time/timeGetYearMonth.ts","src/time/timeIsEarly.ts","src/time/timeRelativeTime.ts","src/time/timeSecondBar.ts","src/time/timeShort.ts","src/time/timeStampIsMillisecond.ts","src/type/typeBoolean.ts","src/type/typeFunction.ts","src/type/typeRegexp.ts","src/type/typeEmpty.ts","src/type/typeFloat.ts","src/type/typeHTMLElement.ts","src/type/typeInt.ts","src/type/typeIntMinus.ts","src/type/typeIntPositive.ts","src/type/typeSymbol.ts","src/uniCode/uniCodeDecode.ts","src/uniCode/uniCodeEncode.ts","src/urlCode/urlCodeDecode.ts","src/urlCode/urlCodeEncode.ts","src/urlString/urlStringQueryObject.ts","src/urlString/urlStringQueryOne.ts","src/validate/validateAllCn.ts","src/validate/validateAllNumber.ts","src/validate/validateDate.ts","src/validate/validateDatetime.ts","src/validate/validateEmail.ts","src/validate/validateErrMsg.ts","src/validate/validateMobile.ts","src/validate/validatePrice.ts","src/validate/validateRequire.ts","src/validate/validateUsername.ts","src/week/weekAryCn.ts","src/week/weekAryEn.ts","src/week/weekGetCn.ts","src/week/weekGetEn.ts"],"sourcesContent":["/**\r\n * @example :fetch-suggestions=\"(q,c) => autoQuery(q,c,a)\"\r\n * @param queryString\r\n * @param queryCallback\r\n * @param queryArray\r\n */\r\nexport const autoQuery = (queryString: string, queryCallback: any, queryArray: any[]) => {\r\n  queryCallback(queryString ? queryArray.filter((state) => state.value.toUpperCase().match(queryString.toUpperCase())) : queryArray)\r\n}\r\n","/**\r\n * @description 关键字高亮\r\n * @param {Object} lightObject 对象\r\n * @param {String} lightKey 键\r\n * @param {String} lightValue 值\r\n * @param {String} [lightColor] 颜色\r\n * @returns {String}\r\n */\r\nexport const keyLight = (\r\n  lightObject: Record<string | number | symbol, any>,\r\n  lightKey: string,\r\n  lightValue: string,\r\n  lightColor: string = '#1980ff'\r\n) => {\r\n  return lightValue\r\n    ? lightObject[lightKey]\r\n      ? lightValue.replace(\r\n        new RegExp(lightObject[lightKey], 'ig'),\r\n        (val) => `<span style='color:${lightColor}'>${val}</span>`\r\n      )\r\n      : lightValue\r\n    : '--'\r\n}\r\n","/**\n * @description 相加\n * @param calcArray\n * @returns {Promise<Number>}\n */\nexport const calcSum = (calcArray: number[]): Promise<number> => {\n  return new Promise((resolve) => {\n    const result = calcArray.reduce((total, current) => {\n      const oneLen = (total.toString().split('.')[1] || '').length\n      const twoLen = (current.toString().split('.')[1] || '').length\n      const maxLen = oneLen > twoLen ? oneLen : twoLen\n      const number = +'1'.padStart(maxLen, '0')\n      return (+total * number + +current * number) / number\n    })\n    resolve(result)\n  })\n}\n\n","/**\r\n * @description 获取当前网址\r\n * @returns {string}\r\n */\r\nexport const addressBarCurrent = (): string => location.href\r\n","/**\r\n * @description 获取页面所在路径\r\n * @returns {string}\r\n */\r\nexport const addressBarFilePath = (): string => location.pathname\r\n","/**\r\n * @description 获取页面的来源\r\n * @returns {string}\r\n */\r\nexport const addressBarFrom = (): string => document.referrer\r\n","/**\r\n * @description 获取网址#号后的参数\r\n * @returns {string}\r\n */\r\nexport const addressBarHash = (): string => location.hash.slice(1)\r\n","/**\r\n * @description 获取http(s)\r\n * @returns {string}\r\n */\r\nexport const addressBarHttp = (): string =>\r\n  document.location.protocol === 'https:' ? 'https://' : 'http://'\r\n","/**\r\n * @description 获取域名:端口\r\n * @returns {string}\r\n */\r\nexport const addressBarHost = (): string => location.host\r\n","import { addressBarHttp } from './addressBarHttp'\r\nimport { addressBarHost } from './addressBarHost'\r\n/**\r\n * @description 获取http(s)://域名：端口\r\n * @returns {string}\r\n */\r\nexport const addressBarHead = (): string =>\r\n  `${addressBarHttp()} + ${addressBarHost()}`\r\n","/**\r\n * @description 获取域名\r\n * @returns {string}\r\n */\r\nexport const addressBarName = (): string => location.hostname\r\n","/**\r\n * @description 获取端口\r\n * @returns {string}\r\n */\r\nexport const addressBarPort = (): string => location.port\r\n","/**\r\n * @description 获取参数\r\n * @returns {string}\r\n */\r\nexport const addressBarQuery = (): string => location.search.substr(1)\r\n","/**\r\n * @description 是否array类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeArray = (typeValue: any) =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object array]'\r\n","/**\r\n * @description 清除键值-单层\r\n * @param {[]|{}} ao array或object\r\n * @returns {[]}\r\n */\r\nexport const aoCleanKeyOne = (ao: any[] | Record<string | number | symbol, any>): any[] => {\r\n  const result = []\r\n  for (const key in ao) {\r\n    result.push(ao[key])\r\n  }\r\n  return result\r\n}\r\n","import {typeArray} from '../type/typeArray'\r\nimport {aoCleanKeyOne} from './aoCleanKeyOne'\r\n\r\n/**\r\n * @description 切片存储在一个新数组\r\n * @param {[]|{}} ao array或object\r\n * @param {number} size 每个切片的大小\r\n * @returns {[]}\r\n */\r\nexport const aoChunk = (ao: any[] | Record<string | number | symbol, any>, size: number): any[] => {\r\n  const array = typeArray(ao) ? ao : aoCleanKeyOne(ao)\r\n  const length = array.length\r\n  size = ~~Math.abs(+size)\r\n  if (length < 1 || size < 1) {\r\n    return []\r\n  } else {\r\n    let index = 0\r\n    let resIndex = 0\r\n    const result = new Array(Math.ceil(length / size))\r\n    while (index < length) {\r\n      result[resIndex++] = array.slice(index, (index += size))\r\n    }\r\n    return result\r\n  }\r\n}\r\n","/**\r\n * @description 是否object类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeObject = (typeValue: any): boolean =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object object]'\r\n","import {typeArray} from '../type/typeArray'\r\nimport {typeObject} from '../type/typeObject'\r\n\r\n/**\r\n * @desc 清除键值-全部\r\n * @param {[]|{}} ao array或object\r\n * @returns {[]}\r\n */\r\nexport const aoCleanKeyAll = (ao: any[] | Record<string | number | symbol, any>): any[] => {\r\n  const result = []\r\n  let count = 0\r\n  for (const key in ao) {\r\n    result[count] =\r\n      typeArray(ao[key]) || typeObject(ao[key])\r\n        ? aoCleanKeyAll(ao[key])\r\n        : ao[key]\r\n    count++\r\n  }\r\n  return result\r\n}\r\n","import {aoCleanKeyOne} from './aoCleanKeyOne'\r\n\r\n/**\r\n * @description 是否值在ao中\r\n * @param {[]|{}} ao array或object\r\n * @param {*} aoSearch 要搜索的值\r\n * @param  {boolean} [aoMatchCase] 是否匹配大小写，true为匹配，false为不匹配，默认为不匹配\r\n * @returns {boolean}\r\n */\r\nexport const aoWhetherIn = (ao: any[] | Record<string | number | symbol, any>, aoSearch: any, aoMatchCase: boolean = false): boolean => {\r\n  const newArray = aoCleanKeyOne(ao) // 函数 some 不能循环 json 类型，统一转成数组\r\n  return newArray.some((key) => {\r\n    let a = JSON.stringify(key)\r\n    let b = JSON.stringify(aoSearch)\r\n    if (!aoMatchCase) {\r\n      a = a.toLowerCase()\r\n      b = b.toLowerCase()\r\n    }\r\n    return a === b\r\n  })\r\n}\r\n","import {typeArray} from '../type/typeArray'\r\nimport {aoWhetherIn} from './aoWhetherIn'\r\n\r\n/**\r\n * @description 删除空值以及指定的值\r\n * @param {[]|{}} ao array或object\r\n * @param {[]|{}} aoAssign 现在仅设置为不等于空字符，其它条件可额外增加，如：[null,undefined]\r\n * @returns {[]|{}}\r\n */\r\nexport const aoDeleteEmpty = (ao: any[] | Record<string | number | symbol, any>, aoAssign: any[] | string) => {\r\n  const aoAssignAry = (typeArray(aoAssign) ? aoAssign : [aoAssign]) as any[]\r\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao)\r\n    ? []\r\n    : {}\r\n  for (const key in ao) {\r\n    if (!(ao[key] === '' || aoWhetherIn(aoAssignAry, ao[key], false))) {\r\n      typeArray(ao) ? result.push(ao[key]) : (result[key] = ao[key])\r\n    }\r\n  }\r\n  return result\r\n}\r\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\n\n/**\n * @description 删除键\n * @param {[]|{}} ao array或object\n * @param {[]|string} aoKey 要删除的键，可字符或数组\n * @returns {[]|{}}\n */\nexport const aoDeleteKey = (ao: any[] | Record<string | number | symbol, any>, aoKey: string | number) => {\n  const aoKeyAry = (typeArray(aoKey) ? aoKey : [aoKey]) as any[]\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  for (const i in ao) {\n    if (!aoWhetherIn(aoKeyAry, i, false)) {\n      typeArray(ao) ? result.push(ao[i]) : (result[i] = ao[i])\n    }\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\r\nimport {aoWhetherIn} from './aoWhetherIn'\r\n\r\n/**\r\n * @description 删除值\r\n * @param {[]|{}} ao array或object\r\n * @param {*} aoValue 要删除的值\r\n * @returns {[]|{}}\r\n */\r\nexport const aoDeleteValue = (ao: any[] | Record<string | number | symbol, any>, aoValue: any) => {\r\n  const aoValueAry = (typeArray(aoValue) ? aoValue : [aoValue]) as any[]\r\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\r\n  for (const i in ao) {\r\n    if (!aoWhetherIn(aoValueAry, ao[i], true)) {\r\n      typeArray(ao) ? result.push(ao[i]) : (result[i] = ao[i])\r\n    }\r\n  }\r\n  return result\r\n}\r\n","/**\r\n * @description 键名\r\n * @param {[]|{}} ao array或object\r\n * @returns {[]}\r\n */\r\nexport const aoKeyName = (ao: any[] | Record<string | number | symbol, any>): any[] => {\r\n  const result = []\r\n  for (const key in ao) {\r\n    result.push(key)\r\n  }\r\n  return result\r\n}\r\n","import {typeArray} from '../type/typeArray'\r\nimport {aoWhetherIn} from './aoWhetherIn'\r\nimport {aoKeyName} from './aoKeyName'\r\n\r\n/**\r\n * @description 保留键，其它删除\r\n * @param {[]|{}} ao array或object\r\n * @param {[]|string} aoHold 要保留的键，可字符或数组\r\n * @returns {[]|{}}\r\n */\r\nexport const aoHoldKey = (ao: any[] | Record<string | number | symbol, any>, aoHold: any[] | string | number) => {\r\n  const aoHoldAry = (typeArray(aoHold) ? aoHold : [aoHold]) as any[]\r\n  const keyArray = aoKeyName(ao)\r\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\r\n  for (const key in aoHoldAry) {\r\n    if (aoWhetherIn(keyArray, aoHoldAry[key], false)) {\r\n      typeArray(ao) ? result.push(ao[aoHoldAry[key]]) : (result[aoHoldAry[key]] = ao[aoHoldAry[key]])\r\n    }\r\n  }\r\n  return result\r\n}\r\n","import {typeArray} from '../type/typeArray'\r\n\r\n/**\r\n * @description 保留值，其它删除\r\n * @param {[]|{}} ao array或object\r\n * @param {*} aoValue 要保留的值，可字符或数组\r\n * @returns {[]|{}}\r\n */\r\nexport const aoHoldValue = (ao: any[] | Record<string | number | symbol, any>, aoValue: any): any[] | Record<string | number | symbol, any> => {\r\n  aoValue = typeArray(aoValue) ? aoValue : [aoValue]\r\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\r\n  for (const k in aoValue) {\r\n    for (const e in ao) {\r\n      if (JSON.stringify(aoValue[k]) === JSON.stringify(ao[e])) {\r\n        typeArray(ao) ? result.push(ao[e]) : (result[e] = ao[e])\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n","import {aoCleanKeyOne} from './aoCleanKeyOne'\r\n\r\n/**\r\n * @description 随机取ao中number个值\r\n * @param {[]|{}} ao array或object\r\n * @param {number} number 取几个\r\n * @returns {[]}\r\n */\r\nexport const aoRandom = (ao: any[] | Record<string | number | symbol, any>, number: number): any[] => {\r\n  number = ~~Math.abs(number)\r\n  const array = aoCleanKeyOne(ao)\r\n  const result = []\r\n  for (let i = 0; i < number && array.length > 0; i++) {\r\n    const r = Math.floor(Math.random() * array.length)\r\n    result[i] = array[r]\r\n    array.splice(r, 1)\r\n  }\r\n  return result\r\n}\r\n","import {typeArray} from '../type/typeArray'\r\nimport {aoWhetherIn} from './aoWhetherIn'\r\n\r\n/**\r\n * @description 重复值\r\n * @param {[]|{}} ao array或object\r\n * @param {number} number 选项：1:不重复值的ao,2:不重复的键值,3:重复的键值\r\n * @returns {[]|{}}\r\n */\r\nexport const aoRepeat = (ao: any[] | Record<string | number | symbol, any>, number: number): any[] | Record<string | number | symbol, any> => {\r\n  number = ~~Math.abs(number)\r\n  const a: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\r\n  const b = []\r\n  const c = []\r\n  for (const key in ao) {\r\n    if (aoWhetherIn(a, ao[key], false)) {\r\n      c.push(key)\r\n    } else {\r\n      b.push(key)\r\n      typeArray(ao) ? a.push(ao[key]) : (a[key] = ao[key])\r\n    }\r\n  }\r\n  return +number === 1 ? a : +number === 2 ? b : c\r\n}\r\n","import { typeArray } from '../type/typeArray'\r\nimport { aoKeyName } from './aoKeyName'\r\n\r\n/**\r\n * @description 反序\r\n * @param {[]|{}} ao array或object\r\n * @returns {[]|{}}\r\n */\r\nexport const aoReverse = (ao: any[] | Record<string | number | symbol, any>) => {\r\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\r\n  const keyArray = aoKeyName(ao)\r\n  keyArray.reverse()\r\n  for (const key in keyArray) {\r\n    typeArray(ao)\r\n      ? result.push(ao[keyArray[key]])\r\n      : (result[keyArray[key]] = ao[keyArray[key]])\r\n  }\r\n  return result\r\n}\r\n","/**\n * @description 迪卡尔积\n * @example arrayDiKaErJi([1,2,3],[1,2,3],[1,2,3])\n * @returns {[]}\n */\nexport const arrayDiKaErJi = (...arrayAny: any[]): any[] =>\n  arrayAny.reduce(\n    (total: any, current: any) => {\n      const ret = [] as any[]\n      total.forEach((a: any) => {\n        current.forEach((b: any) => {\n          ret.push(a.concat([b]))\n        })\n      })\n      return ret\n    },\n    [[]]\n  )\n","/**\n * 将多层级的数组扁平化\n * @param {[]} arrayAny\n * @returns {[]}\n */\nexport const arrayFlatten = (arrayAny: any[]): any[] => {\n  while (arrayAny.some((item) => Array.isArray(item))) {\n    arrayAny = [].concat(...arrayAny)\n  }\n  return arrayAny\n}\n","/**\n * @description 判断要查询的数组是否至少有一个元素包含在目标数组中\n * @param {[]} arrayAny 需要查询的数组\n * @param {[]} arrayTar 目标数组\n */\nexport const arrayHasOne = (arrayAny: any[], arrayTar: any[]) => {\n  return arrayTar.some((value) => arrayAny.indexOf(value) > -1)\n}\n","/**\n * @param {[]} arrayAny1\n * @param {[]} arrayAny2\n * @description 得到两个数组的交集, 两个数组的元素为数值或字符串\n */\nexport const arrayIntersection = (arrayAny1: any[], arrayAny2: any[]) => {\n  const len = Math.min(arrayAny1.length, arrayAny2.length)\n  let i = -1\n  const res = []\n  while (++i < len) {\n    const item = arrayAny2[i]\n    if (arrayAny1.indexOf(item) > -1) {\n      res.push(item)\n    }\n  }\n  return res\n}\n","/**\r\n * @description 是否number类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeNumber = (typeValue: any): boolean =>\r\n  typeof typeValue === 'number' || (!isNaN(typeValue) && typeof typeValue === 'string')\r\n","import {typeNumber} from '../type/typeNumber'\n\n/**\n * @description 排序数组\n * @param {[]} arrayAny 要排序的数组\n * @param {boolean} [arrayOrder] 排序方式：(true)从小到大，(false)从大到小\n * @returns {[]}\n */\nexport const arrayOrder = (arrayAny: any[], arrayOrder: boolean): any[] => {\n  const ary = [...arrayAny]\n  ary.sort(function (a, b) {\n    a = typeNumber(a) ? +a : a\n    b = typeNumber(b) ? +b : b\n    return a > b ? 1 : -1\n  })\n  return arrayOrder ? ary : ary.reverse()\n}\n","import {aoReverse} from '../ao/aoReverse'\n\n/**\n * @description 根据字段进行arrayAny的排序\n * @param {[]} arrayAny 必须是[[],[],...]或[{},{},...]的形式\n * @param {number|string} arrayField 字段名字：如果是 arrayAny 时，请用 arrayAny 的下标\n * @param {boolean} [arrayOrder] 排序顺序：(true)从小到大，(false)从大到小\n * @returns {[]}\n * @example arrayOrderByField([[1, \"a\", 9], [2, \"b\", 8], [3, \"c\", 7], [4, \"d\", 6]], 1, false)\n * @example arrayOrderByField([{\"a\": 3}, {\"a\": 2}, {\"a\": 1}], \"a\")\n */\nexport const arrayOrderByField = (arrayAny: any[], arrayField: string | number, arrayOrder: boolean): any[] => {\n  const result = arrayAny.sort(function (a, b) {\n    const x = a[arrayField]\n    const y = b[arrayField]\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n  return arrayOrder ? result : (aoReverse(result) as any[])\n}\n","/**\n * @description 获取arrayAny的xy等比对换\n * @param {[]} arrayAny [[],[],...]\n * @returns {[]}\n * @example arrayAnyRatioReplace([[1,'a'],[2,'b'],[3,'c'],[4,'d']])\n */\nexport const arrayRatioReplace = (arrayAny: any[]): any[] => {\n  const result = []\n  let count = 0\n  for (let o = 0; o < length; o++) {\n    if (count < arrayAny[o].length) {\n      count = arrayAny[o].length\n    }\n  }\n  for (let t = 0; t < count; t++) {\n    const ary = []\n    for (let i = 0; i < length; i++) {\n      // eslint-disable-next-line no-void\n      arrayAny[i][t] === void 0 && (arrayAny[i][t] = '')\n      ary.push(arrayAny[i][t])\n    }\n    result.push(ary)\n  }\n  return result\n}\n","/**\n * @description 以assign分隔arrayAny组成新的string\n * @param {[]} arrayAny 要分隔的数组\n * @param {string} char\n * @returns {String}\n */\nexport const arrayToStringChar = (arrayAny: any[], char: string): string =>\n  arrayAny.join(String(char))\n","/**\n * @description 得到两个数组的并集\n * @param {[]} arrayAny1\n * @param {[]} arrayAny2\n */\nexport const arrayUnion = (arrayAny1: any[], arrayAny2: any[]) => {\n return Array.from(new Set([...arrayAny1, ...arrayAny2]))\n}\n","/**\n * @description 值是否在数组中\n * @param {[]} arrayAny 用来验证的列表\n * @param {*} value 要验证的值\n * @return {Boolean}\n */\nexport const arrayWhetherIn = (arrayAny: any[], value: any): boolean => {\n  for (let i = 0; i < arrayAny.length; i++) {\n    if (value === arrayAny[i]) {\n      return true\n    }\n  }\n  return false\n}\n","/**\r\n * @description 浏览器代理信息\r\n * @returns {String}\r\n */\r\nexport const browserUserAgent = (): string => navigator.userAgent.toLowerCase()\r\n","import { browserUserAgent } from './browserUserAgent'\r\n\r\n/**\r\n * @description 浏览器信息对象\r\n * @returns {{edge: Boolean, opera: Boolean, weiXin: Boolean, safari: Boolean, chrome: Boolean, android: Boolean, firefox: Boolean, ipad: Boolean, ie: Boolean, iphone: Boolean}}\r\n */\r\nexport const browserInfoObject = (): Record<string, boolean> => {\r\n  const userAgent = browserUserAgent()\r\n  return {\r\n    android: userAgent.indexOf('android'.toLowerCase()) >= 0,\r\n    iphone: userAgent.indexOf('iphone'.toLowerCase()) >= 0,\r\n    ipad: userAgent.indexOf('ipad'.toLowerCase()) >= 0,\r\n    ie: !!window.ActiveXObject || 'ActiveXObject' in window,\r\n    edge: userAgent.indexOf('edge'.toLowerCase()) >= 0,\r\n    safari: userAgent.indexOf('safari'.toLowerCase()) >= 0,\r\n    firefox: userAgent.indexOf('firefox'.toLowerCase()) >= 0,\r\n    chrome: userAgent.indexOf('chrome'.toLowerCase()) >= 0,\r\n    opera: userAgent.indexOf('opera'.toLowerCase()) >= 0,\r\n    weiXin: userAgent.indexOf('MicroMessenger'.toLowerCase()) >= 0\r\n  }\r\n}\r\n","import { browserUserAgent } from './browserUserAgent'\r\n/**\r\n * @description 浏览器是否手机浏览器\r\n * @returns {Boolean}\r\n */\r\nexport const browserIsMobile = (): boolean => /mobi/i.test(browserUserAgent())\r\n","import { browserIsMobile } from './browserIsMobile'\r\n/**\r\n * @description 浏览器是否电脑浏览器\r\n * @returns {Boolean}\r\n */\r\nexport const browserIsPc = (): boolean => !browserIsMobile()\r\n","/**\r\n * @returns {String} 当前浏览器名称\r\n */\r\nexport const browserName = (): string => {\r\n  const ua = window.navigator.userAgent\r\n  const isExplorer = (exp: string) => {\r\n    return ua.indexOf(exp) > -1\r\n  }\r\n  if (isExplorer('MSIE')) {\r\n    return 'IE'\r\n  } else if (isExplorer('Firefox')) {\r\n    return 'Firefox'\r\n  } else if (isExplorer('Chrome')) {\r\n    return 'Chrome'\r\n  } else if (isExplorer('Opera')) {\r\n    return 'Opera'\r\n  } else if (isExplorer('Safari')) {\r\n    return 'Safari'\r\n  } else {\r\n    return 'Unknown'\r\n  }\r\n}\r\n","import {browserUserAgent} from './browserUserAgent'\r\n\r\n/**\r\n * @description 浏览器是否在数组中\r\n * @param {Array} browserArray 要查询的数组\r\n * @returns {Boolean}\r\n */\r\nexport const browserWhetherInArray = (browserArray: string[]): boolean => {\r\n  return browserArray.some((value) => browserUserAgent().indexOf(value.toLowerCase()) > 0)\r\n}\r\n","/**\r\n * @description 全大写\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const caseAllBig = (string: string): string => {\r\n  return String(string).toUpperCase()\r\n}\r\n\r\n","/**\r\n * @description 全小写\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const caseAllSmall = (string: string): string => {\r\n  return String(string).toLowerCase()\r\n}\r\n\r\n","/**\r\n * @description 首字母大写，其它小写\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const caseFirstBig = (string: string): string => {\r\n  return String(string).charAt(0).toUpperCase() + String(string).slice(1).toLowerCase()\r\n}\r\n","/**\r\n * @description 单词首字母大写，其它小写\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const caseWordFirstBig = (string: string): string => {\r\n  const ary = String(string).split(' ')\r\n  for (let i = 0; i < ary.length; i++) {\r\n    ary[i] = ary[i].slice(0, 1).toUpperCase() + ary[i].slice(1).toLowerCase()\r\n  }\r\n  return ary.join(' ')\r\n}\r\n","/**\n * @description 是否有指定的class\n * @param {HTMLElement} HTMLElement\n * @param {string} className\n * @returns {Boolean}\n */\nexport const classHas = (HTMLElement: HTMLElement, className: string): boolean => {\n  return !!HTMLElement.className.match('(\\\\s|^)' + className + '(\\\\s|$)')\n}\n","import { classHas } from './classHas'\r\n\r\n/**\r\n * @description 添加class\r\n * @param {HTMLElement} HTMLElement\r\n * @param {String} className\r\n */\r\nexport const classAdd = (HTMLElement: HTMLElement, className: string): void => {\r\n  classHas(HTMLElement, className) ||\r\n    (function () {\r\n      const string = HTMLElement.className\r\n      const classNew = string + ' ' + className\r\n      HTMLElement.className = string.length > 0 ? classNew : className\r\n    })()\r\n}\r\n","import { classHas } from './classHas'\r\n\r\n/**\r\n * @description 移除class\r\n * @param {HTMLElement} HTMLElement\r\n * @param {String} className\r\n */\r\nexport const classRemove = (HTMLElement: HTMLElement, className: string): void => {\r\n  classHas(HTMLElement, className) &&\r\n    (function () {\r\n      const array = HTMLElement.className.split(' ')\r\n      const result: string[] = []\r\n      Object.keys(array).forEach((key) => {\r\n        array[+key] !== className && result.push(array[+key])\r\n      })\r\n      HTMLElement.className = result.join(' ')\r\n    })()\r\n}\r\n","import {classAdd} from './classAdd'\r\nimport {classRemove} from './classRemove'\r\n\r\n/**\r\n * @description 切换增减class\r\n * @param {HTMLElement} HTMLElement\r\n * @param {String} className\r\n */\r\nexport const classToggle = (HTMLElement: HTMLElement, className: string): void => {\r\n  HTMLElement.className.indexOf(className) === -1 ? classAdd(HTMLElement, className) : classRemove(HTMLElement, className)\r\n}\r\n","/**\r\n * @description 控制输入：每个number个字符中间加空格\r\n * @param controlValue\r\n * @param number\r\n * @returns {string}\r\n */\r\nexport const controlInputNumberSpace = (controlValue: string | number, number: number): string => {\r\n  const theValue = String(controlValue).replace(/\\s/g, '')\r\n  const array = []\r\n  const length = Math.ceil(theValue.length / number)\r\n  for (let i = 0; i < length; i++) {\r\n    array.push(theValue.substr(i * number, parseInt(String(number))))\r\n  }\r\n  return array.join(' ')\r\n}\r\n","/**\r\n * @description 替换全部\r\n * @param {Number|String} string\r\n * @param {Number|String} search\r\n * @param {Number|String} replace\r\n * @returns {String}\r\n */\r\nexport const replaceAll = (\r\n  string: string,\r\n  search: string,\r\n  replace: string\r\n): string => {\r\n  return String(string).split(String(search)).join(String(replace))\r\n}\r\n","/**\r\n * @description 只替换第一个\r\n * @param {Number|String} string\r\n * @param {Number|String} search\r\n * @param {Number|String} replace\r\n * @returns {String}\r\n */\r\nexport const replaceOne = (\r\n  string: string,\r\n  search: string,\r\n  replace: string\r\n): string => {\r\n  return String(string).replace(String(search), String(replace))\r\n}\r\n","import { replaceAll } from '../replace/replaceAll'\r\nimport { replaceOne } from '../replace/replaceOne'\r\n\r\n/**\r\n * @description 保留第一个指定的值\r\n * @param {string} string\r\n * @param {string} char\r\n * @returns {string}\r\n */\r\nexport const holdFirst = (\r\n  string: string,\r\n  char: string\r\n): string => {\r\n  const tempValue = '##@!@##@!@##'\r\n  const replaceFirstChar = replaceOne(String(string), String(char), tempValue)\r\n  const otherReplaceEmpty = replaceAll(replaceFirstChar, String(char), '')\r\n  return replaceOne(otherReplaceEmpty, tempValue, String(char))\r\n}\r\n","import {holdFirst} from '../hold/holdFirst'\r\nimport {typeNumber} from '../type/typeNumber'\r\n\r\n/**\r\n * @description 控制价格的输入\r\n * @param {number|string} controlPrice\r\n * @param {number} [number]\r\n * @returns {string}\r\n */\r\nexport const controlInputPrice = (controlPrice: string | number, number: number): string => {\r\n  let thePrice = holdFirst(holdFirst(String(controlPrice).replace(/[^\\d.-]/g, ''), '-'), '.')\r\n  if (thePrice.substr(0, 1) === '.') {\r\n    thePrice = '0.' + thePrice.substr(1)\r\n  }\r\n  if (thePrice.substr(0, 2) === '-.') {\r\n    thePrice = '-0.' + thePrice.substr(2)\r\n  }\r\n  number = typeNumber(number) ? ~~number : 2\r\n  const ary = thePrice.split('.')\r\n  const int = ary[0]\r\n  const float = ary[1] || null\r\n  return float && float.length > number ? int + '.' + float.substr(0, number) : thePrice\r\n}\r\n","/**\r\n * @description 是否date类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeDate = (typeValue: any) => typeValue instanceof Date && !isNaN(typeValue.getTime())\r\n","import { typeNumber } from './typeNumber'\r\n\r\n/**\r\n * @description 是否string类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeString = (typeValue: any): boolean =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object string]' ||\r\n  typeNumber(typeValue)\r\n","/**\r\n * @description 是否全数字格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatAllNumber = (string: string): boolean =>\r\n  /^[0-9]+$/.test(String(string))\r\n","import {typeDate} from '../type/typeDate'\r\nimport {typeNumber} from '../type/typeNumber'\r\nimport {typeString} from '../type/typeString'\r\nimport {formatAllNumber} from '../format/formatAllNumber'\r\n\r\n/**\r\n * @description 获取时间对象\r\n * @param {*} timeValue\r\n * @returns {Date|Null}\r\n */\r\nexport const timeNewDate = (timeValue: any = new Date()): Date => {\r\n  if (timeValue) {\r\n    let theNewDate\r\n    if (typeDate(timeValue)) {\r\n      theNewDate = timeValue\r\n    } else {\r\n      let theTime = timeValue\r\n      if (typeString(theTime)) {\r\n        theTime = formatAllNumber(String(theTime))\r\n          ? theTime\r\n          : String(theTime).replace(/[.|-]/gm, '/')\r\n      }\r\n      if (typeNumber(theTime) && String(theTime).length === 10) {\r\n        theTime *= 1000\r\n      }\r\n      theNewDate = typeNumber(theTime) ? new Date(+theTime) : new Date(String(theTime))\r\n    }\r\n    return typeDate(theNewDate) ? theNewDate : null\r\n  } else {\r\n    return new Date()\r\n  }\r\n}\r\n","// noinspection SpellCheckingInspection\r\n\r\nexport const H_YM = '{y}-{m}'\r\nexport const H_YM_ABBR = '{y}{m}'\r\nexport const H_DATE = '{y}-{m}-{d}'\r\nexport const H_DATE_ABBR = '{y}{m}{d}'\r\nexport const H_MH = '{y}-{m}-01'\r\nexport const H_DATETIME = '{y}-{m}-{d} {h}:{i}:{s}'\r\nexport const H_DATETIME_ABBR = '{y}{m}{d}{h}{i}{s}'\r\nexport const H_H_I = '{h}:{i}'\r\nexport const H_M_D_H_I = '{m}-{d} {h}:{i}'\r\nexport const H_Y_M_D_H_I = '{y}-{m}-{d} {h}:{i}'\r\nexport const T_YM = 'YYYY-MM'\r\nexport const T_YM_ABBR = 'YYYYMM'\r\nexport const T_DATE = 'YYYY-MM-DD'\r\nexport const T_DATE_ABBR = 'YYYYMMDD'\r\nexport const T_MH = 'YYYY-MM-01'\r\nexport const T_DATETIME = 'YYYY-MM-DD HH:mm:ss'\r\nexport const T_DATETIME_ABBR = 'YYYYMMDDHHmmss'\r\nexport const T_H_I = 'HH:mm'\r\nexport const T_M_D_H_I = 'MM-DD HH:mm'\r\nexport const T_Y_M_D_H_I = 'YYYY-MM-DD HH:mm'\r\n","import {timeNewDate} from './timeNewDate'\r\n\r\n/**\r\n * @description 获取时间对象\r\n * @param {*} [timeValue]\r\n * @returns {{s: Number, d: Number, w: Number, h: Number, y: Number, i: Number, m: Number}|Null}\r\n */\r\nexport const timeObject = (\r\n  timeValue: any = new Date()\r\n): Record<string | number | symbol, any> | null => {\r\n  const theNewDate = timeNewDate(timeValue)\r\n  return theNewDate !== null\r\n    ? {\r\n      y: theNewDate.getFullYear(),\r\n      m: theNewDate.getMonth() + 1,\r\n      d: theNewDate.getDate(),\r\n      h: theNewDate.getHours(),\r\n      i: theNewDate.getMinutes(),\r\n      s: theNewDate.getSeconds(),\r\n      w: theNewDate.getDay()\r\n    }\r\n    : null\r\n}\r\n","import {H_DATETIME} from './timeText'\r\nimport {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间格式化\r\n * @param {*} [timeValue]\r\n * @param {String} [format] 格式\r\n * @param {Boolean} [zero] 是否加零，默认加零\r\n * @returns {Null|String}\r\n */\r\nexport const timeFormat = (\r\n  timeValue: any = new Date(),\r\n  format: string = H_DATETIME,\r\n  zero: boolean = true\r\n): string | null => {\r\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\r\n  if (theObject !== null) {\r\n    return format.replace(/{([ymdhisw])+}/g, (result, key) => {\r\n      const timeValue = theObject[key]\r\n      return key === 'w'\r\n        ? ['日', '一', '二', '三', '四', '五', '六'][timeValue]\r\n        : zero\r\n          ? String(timeValue).padStart(2, '0')\r\n          : String(timeValue)\r\n    })\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeFormat} from '../time/timeFormat'\nimport {H_DATE} from '../time/timeText'\n\n/**\n * @description 计算日期number天后(前)的日期（正数为后，负数为前）\n * @param {*} dateValue 要计算的日期\n * @param {number} number number天后(前)\n * @returns {String|Null}\n */\nexport const dateApart = (dateValue: any, number: number): string | null => {\n  const theNewDate = timeNewDate(dateValue)\n  return theNewDate ? timeFormat(~~(+theNewDate / 1000) + number * 24 * 60 * 60, H_DATE, true) : null\n}\n","/**\r\n * @description 是否闰年\r\n * @param {Number} year\r\n * @returns {Boolean}\r\n */\r\nexport const someWhetherLeapYear = (year: number | string) =>\r\n  (+year % 4 === 0 && +year % 100 !== 0) || +year % 400 === 0\r\n","import { someWhetherLeapYear } from './someWhetherLeapYear'\r\n\r\n/**\r\n * @description 二月的天数\r\n * @param {Number} year\r\n * @returns {Number}\r\n */\r\nexport const someFebruaryDays = (year: number | string) =>\r\n  someWhetherLeapYear(~~String(year)) ? 29 : 28\r\n","import { someFebruaryDays } from './someFebruaryDays'\r\n\r\n/**\r\n * @description 某年某月的月天数\r\n * @param {Number} year\r\n * @param {Number} month\r\n * @returns {Number}\r\n */\r\nexport const someYearMonthDays = (\r\n  year: number | string,\r\n  month: number | string\r\n) => {\r\n  const monthDays = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][\r\n    ~~String(month) - 1\r\n  ]\r\n  return monthDays || someFebruaryDays(~~String(year))\r\n}\r\n","import {timeObject} from '../time/timeObject'\nimport {someYearMonthDays} from '../some/someYearMonthDays'\n\n/**\n * @description 获取number个月后（前）的日期，number可为正可为负\n * @param {*} [dateValue] 时间\n * @param {number} number 几个月后（前）\n * @returns {Null|String}\n */\nexport const dateApartMonth = (dateValue: any = new Date(), number: number): null | string => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    const totalMonths = +theObject.y * 12 + +theObject.m + +number\n    let day = theObject.d\n    let year = Math.floor(totalMonths / 12)\n    let month = totalMonths % 12\n    if (month === 0) {\n      year = year - 1\n      month = 12\n    }\n    const monthDays = someYearMonthDays(year, month)\n    day = day > monthDays ? monthDays : day\n    const Year = String(year).padStart(4, '0')\n    const Month = String(month).padStart(2, '0')\n    const Day = String(day).padStart(2, '0')\n    return `${Year}-${Month}-${Day}`\n  } else {\n    return null\n  }\n}\n","import {timeObject} from '../time/timeObject'\n\n/**\n * @description 获取一个时间至number个月前(后)的所有年月的数据列表\n * @param {number|string} number 几个月\n * @param {*} [dateValue] 时间\n * @returns {Array|Null}\n */\nexport const dateApartMonthList = (\n  number: number,\n  dateValue: any = new Date()\n): string[] | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    let y = +String(theObject.y).padStart(4, '0')\n    let m = +String(theObject.m).padStart(2, '0')\n    const array = []\n    const big = number > 0\n    number = Math.abs(number)\n    array.push(`${y}-${m}`)\n    for (let i = 0; i < +number; i++) {\n      if (big) {\n        m++\n        if (m >= 13) {\n          y += 1\n          m = 1\n        }\n      } else {\n        m--\n        if (m <= 0) {\n          y -= 1\n          m = 12\n        }\n      }\n      const Y = `${y}`.padStart(4, '0')\n      const M = `${m}`.padStart(2, '0')\n      array.push(`${Y}-${M}`)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","import { timeNewDate } from '../time/timeNewDate'\n\n/**\n * @description 两个日期时间相差多少天\n * @param {*} dateOne 日期一\n * @param {*} dateTwo 日期二\n * @param {beforeAll} abs 绝对值\n * @returns {Number|Null}\n */\nexport const dateDifference = (\n  dateOne: any,\n  dateTwo: any,\n  abs: boolean\n): number | null => {\n  const oneObject = timeNewDate(dateOne)\n  const twoObject = timeNewDate(dateTwo)\n  if (oneObject && twoObject) {\n    abs = abs || false\n    const result = ~~(\n      (oneObject.getTime() - twoObject.getTime()) /\n      (1000 * 24 * 60 * 60)\n    )\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import {timeObject} from '../time/timeObject'\r\n\r\n/**\r\n * @description 获取日期的月尾日期\r\n * @param {*} [dateValue]\r\n * @returns {String|Null}\r\n */\r\nexport const dateMonthFoot = (dateValue: any = new Date()): string | null => {\r\n  const theObject = timeObject(dateValue)\r\n  if (theObject !== null) {\r\n    const year = String(theObject.y).padStart(4, '0')\r\n    const month = String(theObject.m).padStart(2, '0')\r\n    const day = new Date(+year, +month, 0).getDate()\r\n    return `${year}-${month}-${day}`\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\r\nimport {timeFormat} from '../time/timeFormat'\r\nimport {H_MH} from '../time/timeText'\r\n\r\n/**\r\n * @description 获取日期的月头日期\r\n * @param {*} [dateValue]\r\n * @returns {String|Null}\r\n */\r\nexport const dateMonthHead = (dateValue: any = new Date()): string | null => {\r\n  const theObject = timeNewDate(dateValue)\r\n  return theObject ? timeFormat(theObject, H_MH, true) : null\r\n}\r\n","import {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间的年份\r\n * @param {*} [timeValue]\r\n * @returns {String|Null}\r\n */\r\nexport const timeGetYear = (timeValue: any = new Date()): string | null => {\r\n  const theTime = timeValue || new timeValue()\r\n  const theObject = timeObject(theTime)\r\n  return theObject !== null ? String(theObject.y).padStart(4, '0') : null\r\n}\r\n","import {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间的月份\r\n * @param {*} [timeValue]\r\n * @returns {String|Null}\r\n */\r\nexport const timeGetMonth = (timeValue: any = new Date()): string | null => {\r\n  const theTime = timeValue || new timeValue()\r\n  const theObject = timeObject(theTime)\r\n  return theObject !== null ? String(theObject.m).padStart(2, '0') : null\r\n}\r\n","import { timeNewDate } from '../time/timeNewDate'\r\nimport { timeGetYear } from '../time/timeGetYear'\r\nimport { timeGetMonth } from '../time/timeGetMonth'\r\nimport { dateApart } from './dateApart'\r\nimport { dateMonthFoot } from './dateMonthFoot'\r\n\r\n/**\r\n * @description 获取日期下月的年月\r\n * @param {*} [dateValue]\r\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\r\n * @returns {String|Array|Null}\r\n */\r\nexport const dateMonthNext = (\r\n  dateValue: any = new Date(),\r\n  isResultArray: boolean\r\n): string | string[] | null => {\r\n  const theObject = timeNewDate(dateValue)\r\n  if (theObject !== null) {\r\n    const next = dateApart(dateMonthFoot(dateValue), 1)\r\n    const year = timeGetYear(next) as string\r\n    const month = timeGetMonth(next) as string\r\n    isResultArray = isResultArray || false\r\n    return isResultArray ? [year, month] : `${year}-${month}`\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\r\nimport {timeGetYear} from '../time/timeGetYear'\r\nimport {timeGetMonth} from '../time/timeGetMonth'\r\nimport {dateApart} from './dateApart'\r\nimport {dateMonthHead} from './dateMonthHead'\r\n\r\n/**\r\n * @description 获取日期上月的年月\r\n * @param {*} [dateValue]\r\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\r\n * @returns {Array|String|Null}\r\n */\r\nexport const dateMonthPrev = (\r\n  dateValue: any = new Date(),\r\n  isResultArray: boolean\r\n): string | string[] | null => {\r\n  const theObject = timeNewDate(dateValue)\r\n  if (theObject) {\r\n    const apart = dateApart(dateMonthHead(dateValue), -1)\r\n    const year = timeGetYear(apart) as string\r\n    const month = timeGetMonth(apart) as string\r\n    isResultArray = isResultArray || false\r\n    return isResultArray ? [year, month] : `${year}-${month}`\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\r\nimport {dateApart} from './dateApart'\r\n\r\n/**\r\n * @description 日期的周日日期\r\n * @param {*} [dateValue]\r\n * @returns {String|Null}\r\n */\r\nexport const dateWeekSunday = (dateValue: any = new Date()): string | null => {\r\n  const theNewDate = timeNewDate(dateValue)\r\n  if (theNewDate !== null) {\r\n    const week = theNewDate.getDay()\r\n    const ary = [0, -1, -2, -3, -4, -5, -6]\r\n    return dateApart(theNewDate, ary[week])\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\r\nimport {dateApart} from './dateApart'\r\nimport {dateWeekSunday} from './dateWeekSunday'\r\n\r\n/**\r\n * @description 获取日期一周的日期\r\n * @param {*} [dateValue]\r\n * @returns {Array|Null}\r\n */\r\nexport const dateOneWeek = (dateValue: any = new Date()): string[] | null => {\r\n  const theObject = timeNewDate(dateValue)\r\n  if (theObject !== null) {\r\n    const array = []\r\n    const sunday = dateWeekSunday(dateValue)\r\n    for (let i = 0; i < 7; i++) {\r\n      const apart = dateApart(sunday, i) as string\r\n      array.push(apart)\r\n    }\r\n    return array\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from '../time/timeNewDate'\r\nimport {dateApart} from './dateApart'\r\nimport {dateMonthFoot} from './dateMonthFoot'\r\nimport {dateOneWeek} from './dateOneWeek'\r\n\r\n/**\r\n * @description 获取日期一月的日期\r\n * @param {*} [dateValue]\r\n * @returns {Array|Null}\r\n */\r\nexport const dateOneMonth = (dateValue: any = new Date()): any[] | null => {\r\n  const theObject = timeNewDate(dateValue)\r\n  if (theObject) {\r\n    const array = []\r\n    const monthFoot = dateMonthFoot(dateValue)\r\n    const oneWeek = dateOneWeek(monthFoot) as string[]\r\n    array.push(oneWeek)\r\n    for (let i = 0; i < 6; i++) {\r\n      const apart = dateApart(oneWeek[0], -(i * 7 + 1))\r\n      if (new Date(String(apart)).getMonth() + 1 !== theObject.getMonth() + 1) {\r\n        break\r\n      }\r\n      const theWeek = dateOneWeek(apart)\r\n      array.unshift(theWeek)\r\n    }\r\n    return array\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","export const defineBooleanAry = [\n  {value: 0, label: '否'},\n  {value: 1, label: '是'}\n]\n","// noinspection NonAsciiCharacters,HttpUrlsUsage\n\nexport const defineFace = {\n  '[微笑]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/5c/huanglianwx_thumb.gif',\n  '[嘻嘻]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/0b/tootha_thumb.gif',\n  '[哈哈]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6a/laugh.gif',\n  '[可爱]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/14/tza_thumb.gif',\n  '[可怜]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/af/kl_thumb.gif',\n  '[挖鼻]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/0b/wabi_thumb.gif',\n  '[吃惊]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/f4/cj_thumb.gif',\n  '[害羞]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/shamea_thumb.gif',\n  '[挤眼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/c3/zy_thumb.gif',\n  '[闭嘴]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/29/bz_thumb.gif',\n  '[鄙视]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/71/bs2_thumb.gif',\n  '[爱你]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6d/lovea_thumb.gif',\n  '[泪]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/9d/sada_thumb.gif',\n  '[偷笑]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/19/heia_thumb.gif',\n  '[亲亲]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/8f/qq_thumb.gif',\n  '[生病]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/b6/sb_thumb.gif',\n  '[太开心]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/58/mb_thumb.gif',\n  '[白眼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d9/landeln_thumb.gif',\n  '[右哼哼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/98/yhh_thumb.gif',\n  '[左哼哼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6d/zhh_thumb.gif',\n  '[嘘]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/a6/x_thumb.gif',\n  '[衰]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/af/cry.gif',\n  '[委屈]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/73/wq_thumb.gif',\n  '[吐]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/9e/t_thumb.gif',\n  '[哈欠]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/cc/haqianv2_thumb.gif',\n  '[抱抱]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/27/bba_thumb.gif',\n  '[怒]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/7c/angrya_thumb.gif',\n  '[疑问]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/5c/yw_thumb.gif',\n  '[馋嘴]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/a5/cza_thumb.gif',\n  '[拜拜]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/70/88_thumb.gif',\n  '[思考]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e9/sk_thumb.gif',\n  '[汗]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/24/sweata_thumb.gif',\n  '[困]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/kunv2_thumb.gif',\n  '[睡]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/96/huangliansj_thumb.gif',\n  '[钱]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/90/money_thumb.gif',\n  '[失望]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/0c/sw_thumb.gif',\n  '[酷]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/cool_thumb.gif',\n  '[色]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/20/huanglianse_thumb.gif',\n  '[哼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/49/hatea_thumb.gif',\n  '[鼓掌]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/36/gza_thumb.gif',\n  '[晕]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d9/dizzya_thumb.gif',\n  '[悲伤]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/1a/bs_thumb.gif',\n  '[抓狂]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/62/crazya_thumb.gif',\n  '[黑线]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/91/h_thumb.gif',\n  '[阴险]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6d/yx_thumb.gif',\n  '[怒骂]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/60/numav2_thumb.gif',\n  '[互粉]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/89/hufen_thumb.gif',\n  '[心]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/hearta_thumb.gif',\n  '[伤心]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/ea/unheart.gif',\n  '[猪头]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/58/pig.gif',\n  '[熊猫]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/panda_thumb.gif',\n  '[兔子]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/81/rabbit_thumb.gif',\n  '[ok]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d6/ok_thumb.gif',\n  '[耶]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d9/ye_thumb.gif',\n  '[good]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d8/good_thumb.gif',\n  '[NO]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/ae/buyao_org.gif',\n  '[赞]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d0/z2_thumb.gif',\n  '[来]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/come_thumb.gif',\n  '[弱]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d8/sad_thumb.gif',\n  '[草泥马]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/7a/shenshou_thumb.gif',\n  '[神马]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/60/horse2_thumb.gif',\n  '[囧]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/15/j_thumb.gif',\n  '[浮云]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/bc/fuyun_thumb.gif',\n  '[给力]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/1e/geiliv2_thumb.gif',\n  '[围观]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/f2/wg_thumb.gif',\n  '[威武]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/70/vw_thumb.gif',\n  '[奥特曼]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/bc/otm_thumb.gif',\n  '[礼物]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/c4/liwu_thumb.gif',\n  '[钟]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d3/clock_thumb.gif',\n  '[话筒]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/9f/huatongv2_thumb.gif',\n  '[蜡烛]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/d9/lazhuv2_thumb.gif',\n  '[蛋糕]': 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3a/cakev2_thumb.gif'\n}\n","export const defineIsUseAry = [\n  { value: '0', label: '禁用' },\n  { value: '1', label: '启用' }\n]\n","/**\r\n * @desc 保证字符串尾部含有指定字符\r\n * @param {number|string} ensureString\r\n * @param {number|string} ensureAssign\r\n * @returns {number|string}\r\n */\r\nexport const ensureFootHave = (ensureString: number | string, ensureAssign: number | string): string => {\r\n  const theString = String(ensureString)\r\n  const theAssign = String(ensureAssign)\r\n  return theString.substr(-theString.length) === theAssign ? theString : theString + theAssign\r\n}\r\n","/**\r\n * @desc 保证字符串尾部没有指定字符\r\n * @param {number|string} ensureString\r\n * @param {number|string} ensureAssign\r\n * @returns {number|string}\r\n */\r\nexport const ensureFootNone = (ensureString: number | string, ensureAssign: number | string): string => {\r\n  const theString = String(ensureString)\r\n  const theAssign = String(ensureAssign)\r\n  const strLen = theString.length\r\n  const theLen = theAssign.length\r\n  return theString.substr(-theLen) === theAssign ? ensureFootNone(theString.substr(0, strLen - theLen), theAssign) : theString\r\n}\r\n","/**\r\n * @desc 保证字符串头部含有指定字符串\r\n * @param {number|string} ensureString\r\n * @param {number|string} ensureAssign\r\n * @returns {number|string}\r\n */\r\nexport const ensureHeadHave = (ensureString: number | string, ensureAssign: number | string): string => {\r\n  const theString = String(ensureString)\r\n  const theAssign = String(ensureAssign)\r\n  return theString.substr(0, theAssign.length) === theAssign ? theString : theAssign + theString\r\n}\r\n","/**\r\n * @desc 保证字符串头部没有指定字符串\r\n * @param {number|string} ensureString\r\n * @param {number|string} ensureAssign\r\n * @returns {number|string}\r\n */\r\nexport const ensureHeadNone = (ensureString: number | string, ensureAssign: number | string): string => {\r\n  const theString = String(ensureString)\r\n  const theAssign = String(ensureAssign)\r\n  const length = theAssign.length\r\n  return theString.substr(0, length) === theAssign ? ensureHeadNone(theString.substr(length), theAssign) : theString\r\n}\r\n","/**\r\n * @description 从字符串中提取文件的文件全名\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const fileFullName = (string: string): string => {\r\n  const a = document.createElement('a')\r\n  a.href = string\r\n  return (a.pathname.match(/\\/([^/?#]+)$/i) || ['', ''])[1]\r\n}\r\n","import { fileFullName } from './fileFullName'\r\n\r\n/**\r\n * @description 从字符串中提取文件的文件名称\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const fileBaseName = (string: string): string =>\r\n  fileFullName(string).replace(/\\.[^.]+$/i, '')\r\n","import { fileFullName } from './fileFullName'\r\n/**\r\n * @description 从字符串中提取文件的后缀名称\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const fileSuffixName = (string: string): string =>\r\n  fileFullName(string).replace(/.+[.]([^.\\\\/]+)$/gi, '$1')\r\n","import { fileSuffixName } from './fileSuffixName'\r\n/**\r\n * @description 从字符串中提取文件的后缀名并进行分类\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const fileClassify = (string: string): string => {\r\n  const suffixName = fileSuffixName(string)\r\n  const array = [\r\n    { n: 'doc', v: ['doc', 'docx', 'dot', 'docx'] },\r\n    { n: 'txt', v: ['txt'] },\r\n    { n: 'xls', v: ['xls', 'xlsx'] },\r\n    { n: 'ppt', v: ['ppt', 'pptx'] },\r\n    { n: 'pdf', v: ['pdf'] },\r\n    { n: 'htm', v: ['htm', 'html'] },\r\n    { n: 'pic', v: ['png', 'jpg', 'jpeg', 'bmp', 'gif'] },\r\n    {\r\n      n: 'vid',\r\n      v: [\r\n        'avi',\r\n        'rm',\r\n        'mpg',\r\n        'mpeg',\r\n        'mpe',\r\n        'wmv',\r\n        'mp4',\r\n        'mkv',\r\n        'vob',\r\n        '3gp',\r\n        'mov'\r\n      ]\r\n    },\r\n    { n: 'aud', v: ['wav', 'mp3', 'wma', 'aif', 'cda', 'mid', 'caf', 'amr'] },\r\n    { n: 'app', v: ['exe', 'app', 'ipa', 'apk'] },\r\n    { n: 'zip', v: ['zip', 'rar'] }\r\n  ]\r\n  let result = 'other'\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i].v.includes(suffixName)) {\r\n      result = array[i].n\r\n      break\r\n    }\r\n  }\r\n  return result\r\n}\r\n","/**\r\n * @description 文件大小的单位\r\n * @param {Number} fileSize 文件大小\r\n * @param {Number} fixed 保留浮点位数\r\n * @returns {String}\r\n */\r\nexport const fileUnit = (fileSize: number, fixed: number): string => {\r\n  const array = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n  const k = 1024\r\n  const i = Math.floor(Math.log(fileSize) / Math.log(k))\r\n  return (fileSize / Math.pow(k, i)).toFixed(fixed) + array[i]\r\n}\r\n","/**\n * @description defineBooleanAry filter\n * @param {number|string} value\n * @returns {String}\n */\nexport const filterBoolean = (value: number | string): string => {\n  return +value === 1 ? '是' : '否'\n}\n","import {timeFormat} from '../time/timeFormat'\nimport {H_DATE} from '../time/timeText'\n/**\n * @description :2022-01-01\n * @param {*} time\n * @returns {String}\n */\nexport const filterDate = (time: any): string => {\n  return timeFormat(time, H_DATE) as string\n}\n","import {timeFormat} from '../time/timeFormat'\nimport {H_Y_M_D_H_I} from '../time/timeText'\n\n/**\n * @description :2022-01-01 01:01\n * @param {*} time\n * @returns {String}\n */\nexport const filterDateHI = (time: any): string => {\n  return timeFormat(time, H_Y_M_D_H_I) as string\n}\n","import {timeFormat} from '../time/timeFormat'\nimport {H_DATETIME} from '../time/timeText'\n\n/**\n * @description :2022-01-01 01:01:01\n * @param {*} time\n * @returns {String}\n */\nexport const filterDatetime = (time: any) => {\n  return timeFormat(time, H_DATETIME) as string\n}\n","/**\n * @description defineIsUseAry filter\n * @param {number|string} value\n * @returns {String}\n */\nexport const filterIsUse = (value: number | string): string => {\n  return +value === 1 ? '已启用' : '已禁用'\n}\n","/**\r\n * @description 是否全中文格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatAllCn = (string: string): boolean =>\r\n  /^[\\u4e00-\\u9fa5]+$/i.test(String(string))\r\n","import { someYearMonthDays } from '../some/someYearMonthDays'\r\n\r\n/**\r\n * @description 是否 date 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatDate = (string: string): boolean => {\r\n  if (/^(\\d{4})-(\\d{2})-(\\d{2})$/.test(String(string))) {\r\n    const [y, m, d] = string.split('-')\r\n    return +m > 0 && +m <= 12 && +d > 0 && +d <= someYearMonthDays(y, m)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n","import { formatDate } from './formatDate'\r\n\r\n/**\r\n * @description 是否 dateTime 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatDatetime = (string: string) => {\r\n  if (/^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/.test(String(string))) {\r\n    const [date, time] = string.split(' ')\r\n    const [h, m, s] = time.split('-')\r\n    return formatDate(date) && +h < 24 && +m < 60 && +s < 60\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n","/**\r\n * @description 是否 domain 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatDomain = (string: string): boolean =>\r\n  /^[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+$/.test(String(string))\r\n","/**\r\n * @description 是否 email格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatEmail = (string: string): boolean =>\r\n  /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/i.test(String(string))\r\n","/**\r\n * @description 是否外链格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatExternal = (string: string): boolean =>\r\n  /^(https?:|mailto:|tel:)/.test(String(string))\r\n","/**\r\n * @description 是否十六进制颜色的格式\r\n * @param {string} string\r\n * @returns {boolean}\r\n */\r\nexport const formatHexColor = (string: string) => {\r\n  const reg = /^#([0-9a-fA-F]{3}|[0-9a-fA-f]{6})$/\r\n  return reg.test(string)\r\n}\r\n","/**\r\n * @description 是否 idCard 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatIdCard = (string: string): boolean =>\r\n  /^[1-9](\\d{14}|\\d{16}[0-9x])$/i.test(String(string))\r\n","/**\r\n * @description 是否 imageBase 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatImageBase = (string: string): boolean =>\r\n  /^data:image\\/(bmp|png|gif|jpg|jpeg);base64,/.test(String(string))\r\n","/**\r\n * @description 是否 ip 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\n\r\nexport const formatIp = (string: string): boolean => {\r\n  if (/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/.test(String(string))) {\r\n    const [a, b, c, d] = string.split('.')\r\n    return +a < 256 && +b < 256 && +c < 256 && +d < 256\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n","/**\r\n * @description 是否 mobile 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatMobile = (string: string): boolean =>\r\n  /^(13|14|15|16|17|18)[0-9]{9}$/.test(String(string))\r\n","/**\r\n * @description 是否 price 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatPrice = (string: string): boolean =>\r\n  /^\\d+\\.?\\d{0,2}$/.test(String(string))\r\n","/**\r\n * @description 是否 telephone 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatTelephone = (string: string): boolean =>\r\n  /^[0-9-()]{5,18}$/.test(String(string))\r\n","/**\r\n * @description 是否 url 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatUrl = (string: string): boolean =>\r\n  /^((https?:)?\\/\\/)?[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+/.test(String(string))\r\n","/**\r\n * @description 是否 username 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatUsername = (string: string): boolean =>\r\n  /^[a-z]+[a-z0-9]+[-_.]*[a-z0-9]+$/i.test(String(string))\r\n","/**\r\n * @description 是否 zip 格式\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const formatZip = (string: string): boolean =>\r\n  /^\\d{6}$/.test(String(string))\r\n","/**\r\n * @description 字符串中是否含有指定的字符（串）\r\n * @param {String} string\r\n * @param {String} haveAssign\r\n * @returns {Boolean}\r\n */\r\nexport const haveAssign = (string: string, haveAssign: string): boolean => {\r\n  return String(string).indexOf(String(haveAssign)) >= 0\r\n}\r\n\r\n","/**\r\n * @description 字符串中是否含有中文\r\n * @param {String} string\r\n * @returns {Boolean}\r\n */\r\nexport const haveCn = (string: string): boolean => {\r\n  return /[\\u4e00-\\u9fa5]+/.test(String(string))\r\n}\r\n\r\n","/**\r\n * @description 保留中文\r\n * @param {Number|String} string\r\n * @returns {String}\r\n */\r\nexport const holdCn = (string: string): string => {\r\n  return String(string).replace(/[^\\u4e00-\\u9fa5]/g, '')\r\n}\r\n\r\n","/**\r\n * @description 保留字母\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const holdLetter = (string: string): string => {\r\n  return String(string).replace(/[^a-zA-Z]/g, '')\r\n}\r\n\r\n","/**\r\n * @description 保留数字\r\n * @param {string} string\r\n * @returns {string}\r\n */\r\nexport const holdNumber = (string: string): string => {\r\n  return String(string).replace(/[^0-9]/g, '')\r\n}\r\n\r\n","/**\r\n * @description 读取本地缓存\r\n * @param {string} localKey\r\n * @returns {*}\r\n */\r\nexport const localRead = (localKey: string): string => {\r\n  return localStorage.getItem(localKey) || ''\r\n}\r\n\r\n","/**\r\n * @description 存储数据\r\n * @param localKey\r\n * @param localValue\r\n */\r\nexport const localSave = (localKey: string, localValue: string): void => {\r\n  localStorage.setItem(localKey, localValue)\r\n}\r\n","import {timeObject} from '../time/timeObject'\r\n\r\n/**\r\n * @description 两个时间相差几个月\r\n * @param {*} timeOne 时间一\r\n * @param {*} timeTwo 时间二\r\n * @param {Boolean} [abs] 绝对值\r\n * @returns {Number}\r\n * **/\r\nexport const monthDifference = (timeOne: any, timeTwo: any, abs: boolean) => {\r\n  abs = abs || true\r\n  const oneObject = timeObject(timeOne)\r\n  const twoObject = timeObject(timeOne)\r\n  if (oneObject && twoObject) {\r\n    const oneCount = oneObject.y * 12 + oneObject.m\r\n    const twoCount = twoObject.y * 12 + twoObject.m\r\n    const result = oneCount - twoCount\r\n    return abs ? Math.abs(result) : result\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n","/**\r\n * @description 数字加逗号\r\n * @param {Number|String} number\r\n * @returns {String}\r\n */\r\nexport const numberAddComma = (number: number): string => {\r\n  return String(+number || 0).replace(/^-?\\d+/g, (m) => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\r\n}\r\n\r\n","/**\r\n * @description 数字位数不足前补零\r\n * @param {Number|String} number\r\n * @param {Number|String} length\r\n * @returns {String}\r\n */\r\nexport const numberAddZero = (number: number, length: number): string =>\r\n  String(~~Math.abs(number)).padStart(~~Math.abs(length), '0')\r\n","import {replaceAll} from './replaceAll'\r\n\r\n/**\r\n * @description 根据对象替换\r\n * @param {Number|String} string\r\n * @param {Object} replaceObject\r\n * @returns {String}\r\n */\r\nexport const replaceByObject = (\r\n  string: string,\r\n  replaceObject: Record<string | number | symbol, any>\r\n): number | string => {\r\n  Object.keys(replaceObject).forEach((key) => {\r\n    string = replaceAll(string, key, replaceObject[key])\r\n  })\r\n  return string\r\n}\r\n","import { replaceByObject } from '../replace/replaceByObject'\r\n\r\n/**\r\n * @description 去掉空格和逗号\r\n * @param {string} string\r\n * @returns {number}\r\n */\r\nexport const numberGet = (string: string): number =>\r\n  +replaceByObject(string, { ',': '', ' ': '' })\r\n","/**\r\n * @description 价格大写\r\n * @param {Number|String} number\r\n * @returns {String}\r\n */\r\nexport const numberPriceBigWrite = (number: number): string => {\r\n  const fraction = ['角', '分']\r\n  const digit = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']\r\n  const unit = [\r\n    ['元', '万', '亿'],\r\n    ['', '拾', '佰', '仟']\r\n  ]\r\n  const head = number < 0 ? '欠' : ''\r\n  number = Math.abs(+number)\r\n  let string = ''\r\n  for (let i = 0; i < fraction.length; i++) {\r\n    string += (\r\n      digit[Math.floor(number * 10 * Math.pow(10, i)) % 10] + fraction[i]\r\n    ).replace(/零./, '')\r\n  }\r\n  string = string || '整'\r\n  number = Math.floor(number)\r\n  for (let i = 0; i < unit[0].length && number > 0; i++) {\r\n    let dot = ''\r\n    for (let j = 0; j < unit[1].length && number > 0; j++) {\r\n      dot = digit[number % 10] + unit[1][j] + dot\r\n      number = Math.floor(number / 10)\r\n    }\r\n    string =\r\n      dot.replace(/(零.)*零$/, '').replace(/^$/, '零') + unit[0][i] + string\r\n  }\r\n  return (\r\n    head +\r\n    string\r\n      .replace(/(零.)*零元/, '元')\r\n      .replace(/(零.)+/g, '零')\r\n      .replace(/^整$/, '零元整')\r\n  )\r\n}\r\n","/**\r\n * @description 数字以单位表示\r\n * @param {Number} number\r\n * @param {Number} fixed 四舍五入\r\n * @returns {String}\r\n */\r\nexport const numberUnit = (number: number, fixed: number): string => {\r\n  const head = number < 0 ? '-' : ''\r\n  number = ~~Math.abs(number)\r\n  fixed = ~~Math.abs(fixed)\r\n  const result =\r\n    number < 1e3\r\n      ? number\r\n      : number >= 1e3 && number < 1e4\r\n        ? (number / 1e3).toFixed(fixed) + '千'\r\n        : number >= 1e4 && number < 1e8\r\n          ? (number / 1e4).toFixed(fixed) + '万'\r\n          : number >= 1e8\r\n            ? (number / 1e8).toFixed(fixed) + '亿'\r\n            : number\r\n  return head + result\r\n}\r\n","import { typeArray } from '../type/typeArray'\r\n\r\n/**\r\n * @description 删除object的元素\r\n * @param {Object} theObject\r\n * @param {Array|String} objectKey\r\n * @returns {Object}\r\n */\r\nexport const objectDeleteElement = (\r\n  theObject: Record<string | number | symbol, any>,\r\n  objectKey: string | string[]\r\n): Record<string | number | symbol, any> => {\r\n  const keyAry = (typeArray(objectKey) ? objectKey : [objectKey]) as string[]\r\n  keyAry.map((item) => delete theObject[item])\r\n  return theObject\r\n}\r\n","/**\r\n * @description 是否有字节点\r\n * @param {Object} theObject 要检查的对像\r\n * @param {String} [nodeName] 节点名称\r\n * @returns {Boolean}\r\n */\r\nexport const objectHasChildren = (\r\n  theObject: Record<string | number | symbol, any>,\r\n  nodeName: string\r\n): boolean => {\r\n  nodeName = nodeName || 'children'\r\n  return theObject[nodeName] && theObject[nodeName].length > 0\r\n}\r\n","/**\r\n * @description 获取object的长度\r\n * @param {Object} theObject\r\n * @returns {Number}\r\n */\r\nexport const objectLength = (\r\n  theObject: Record<string | number | symbol, any>\r\n): number => {\r\n  let len = 0\r\n  Object.keys(theObject).forEach(() => {\r\n    len++\r\n  })\r\n  return len\r\n}\r\n","/**\r\n * @description 重命名object的键名\r\n * @param {Object} theObject\r\n * @param {String} objectKey\r\n * @param {String} newKey\r\n * @returns {Object}\r\n */\r\nexport const objectRenameKey = (\r\n  theObject: Record<string | number | symbol, any>,\r\n  objectKey: string,\r\n  newKey: string\r\n): Record<string | number | symbol, any> => {\r\n  if (Object.keys(theObject).indexOf(objectKey) !== -1) {\r\n    theObject[newKey] = theObject[objectKey]\r\n    delete theObject[objectKey]\r\n  }\r\n  return theObject\r\n}\r\n","import { formatHexColor } from '../format/formatHexColor'\r\n\r\n/**\r\n * @description 十六进制颜色转RGB颜色\r\n * @param {string} hex\r\n * @param {number} [opacity]\r\n * @return {string}\r\n */\r\nexport const someColorHexToRGB = (hex: string, opacity = 1): string => {\r\n  let sHex = hex.toLowerCase()\r\n  if (formatHexColor(hex)) {\r\n    if (sHex.length === 4) {\r\n      let sColorNew = '#'\r\n      for (let i = 1; i < 4; i += 1) {\r\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1))\r\n      }\r\n      sHex = sColorNew\r\n    }\r\n    const sColorChange = []\r\n    for (let i = 1; i < 7; i += 2) {\r\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)))\r\n    }\r\n    return opacity\r\n      ? 'RGBA(' + sColorChange.join(',') + ',' + String(opacity) + ')'\r\n      : 'RGB(' + sColorChange.join(',') + ')'\r\n  }\r\n  return sHex\r\n}\r\n","/**\r\n * @description RGB颜色转十六进制颜色\r\n * @param {number} r\r\n * @param {number} g\r\n * @param {number} b\r\n * @return {string}\r\n */\r\nexport const someColorRGBToHex = (r: number, g: number, b: number): string => {\r\n  const hex = ((r << 16) | (g << 8) | b).toString(16)\r\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex\r\n}\r\n","/**\r\n * @description 最高的 z-index 值\r\n * @returns {Number}\r\n */\r\nexport const someMaxZIndex = (): number =>\r\n  ~~(new Date().getTime() / 1000).toFixed(0)\r\n","/**\r\n * @description 如果值复数，则显示复数标签\r\n * @param {Number} number\r\n * @param {String} unit\r\n * @returns {String}\r\n */\r\nexport const somePluralize = (number: number, unit: string) =>\r\n  number === 1 ? number + unit : number + unit + 's'\r\n","/**\r\n * @description 取随机颜色\r\n * @returns {String}\r\n */\r\nexport const someRandomColor = (): string => {\r\n  const array = [\r\n    '0',\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F'\r\n  ]\r\n  let string = ''\r\n  for (let i = 0; i < 6; i++) {\r\n    const id = Math.ceil(Math.random() * 15)\r\n    string += array[id]\r\n  }\r\n  return '#' + string\r\n}\r\n","/**\r\n * @description 字符串截取\r\n * @param {Number|String} string 要截取的字符串\r\n * @param {number} number 截取数量\r\n * @returns {String}\r\n */\r\nexport const stringCut = (string: string, number: number): string => {\r\n  number = ~~Math.abs(number)\r\n  const have = String(string).substr(0, number - 1) + '…'\r\n  const none = String(string).substr(0, number)\r\n  return string.length > number ? have : none\r\n}\r\n","import {haveCn} from '../have/haveCn'\r\nimport {stringCut} from './stringCut'\r\n\r\n/**\r\n * @description 字符串截取（中英文分别设置）\r\n * @param {Number|String} string 要截取的字符串\r\n * @param {Number} cnNumber 有中文要截取的数量\r\n * @param {Number} enNumber 无中文要截取的数量\r\n * @returns {String}\r\n */\r\nexport const stringCutCn = (string: string, cnNumber: number, enNumber: number): string => {\r\n  const theCnNumber = ~~Math.abs(cnNumber)\r\n  const theEnNumber = ~~Math.abs(enNumber)\r\n  return haveCn(string) ? stringCut(string, theCnNumber) : stringCut(string, theEnNumber)\r\n}\r\n","/**\r\n * @description 字符串循环\r\n * @param {Number|String} string 要循环的字符串\r\n * @param {Number} number 要循环的次数\r\n * @returns {String}\r\n */\r\nexport const stringLoop = (string: string, number: number): string => {\r\n  const theNumber = ~~String(number)\r\n  let result = ''\r\n  for (let i = 0; i < theNumber; i++) {\r\n    result += String(string)\r\n  }\r\n  return result\r\n}\r\n","/**\r\n * @description 随机 number 个字符\r\n * @param {Number} number 需要几个字符\r\n * @returns {String}\r\n */\r\nexport const stringRandom = (number: number): string => {\r\n  const theNumber = ~~Math.abs(number)\r\n  let string = ''\r\n  for (let i = 0; i < theNumber; i++) {\r\n    string += Math.random().toString(36).substr(2)\r\n  }\r\n  return string.substr(0, theNumber)\r\n}\r\n","/**\r\n * @description 字符串反序\r\n * @param {Number|String} string\r\n * @returns {String}\r\n */\r\nexport const stringReverse = (string: string): string => {\r\n  return String(string).split('').reverse().join('')\r\n}\r\n\r\n","/**\r\n * @description 以指定字符分隔字符串组成新的数组\r\n * @param {Number|String} string 要分隔的字符串\r\n * @param {Number|String} char 指定字符\r\n * @returns {Array}\r\n */\r\nexport const stringToArrayChar = (string: string, char: string): string[] => {\r\n  return String(string).split(String(char))\r\n}\r\n\r\n","/**\r\n * @description 以个数分隔字符串组成新的数组\r\n * @param {Number|String} string 要分隔的字符串\r\n * @param {Number|String} number 多少数量\r\n * @returns {Array}\r\n */\r\nexport const stringToArrayNumber = (string: string, number: number): string[] => {\r\n  const theString = String(string)\r\n  const theNumber = ~~Math.abs(number)\r\n  const array = []\r\n  const length = Math.ceil(theString.length / theNumber)\r\n  for (let i = 0; i < length; i++) {\r\n    array.push(theString.substr(i * theNumber, theNumber))\r\n  }\r\n  return array\r\n}\r\n","import {timeNewDate} from './timeNewDate'\r\n\r\n/**\r\n * @description 获取时间戳\r\n * @param {*} [timeValue]\r\n * @returns {Number|Null}\r\n */\r\nexport const timestamp = (timeValue: any = new Date()) => {\r\n  const theNewDate = timeValue ? timeNewDate(timeValue) : new Date()\r\n  return theNewDate ? ~~(theNewDate.getTime() / 1000).toFixed(0) : null\r\n}\r\n","import {H_DATETIME} from './timeText'\r\nimport {timeFormat} from './timeFormat'\r\nimport {timestamp} from './timestamp'\r\n\r\n/**\r\n * @description 多少时间前（中文）\r\n * @param {*} timeValue\r\n * @param {string} [format]\r\n * @param {boolean} [zero] 是否加零，默认加零\r\n * @returns {null|string}\r\n */\r\nexport const timeAgoCn = (\r\n  timeValue: any = new Date(),\r\n  format: string = H_DATETIME,\r\n  zero: boolean = true\r\n): string | null => {\r\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\r\n  if (theTimestamp !== null) {\r\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\r\n    const diff = nowTimestamp - theTimestamp\r\n    return diff < 60\r\n      ? '刚刚'\r\n      : diff < 3600\r\n        ? ~~(diff / 60) + '分钟前'\r\n        : diff < 86400\r\n          ? ~~(diff / 3600) + '小时前'\r\n          : diff < 691200\r\n            ? ~~(diff / 86400) + '天前'\r\n            : timeFormat(timeValue, format, zero)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {somePluralize} from '../some/somePluralize'\r\nimport {H_DATETIME} from './timeText'\r\nimport {timeFormat} from './timeFormat'\r\nimport {timestamp} from './timestamp'\r\n\r\n/**\r\n * @description 多少时间前（英文）\r\n * @param {*} timeValue\r\n * @param {string} [format]\r\n * @param {boolean} [zero] 是否加零，默认加零\r\n * @returns {null|string}\r\n */\r\nexport const timeAgoEn = (\r\n  timeValue: any = new Date(),\r\n  format: string = H_DATETIME,\r\n  zero: boolean = true\r\n): string | null => {\r\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\r\n  if (theTimestamp !== null) {\r\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\r\n    const diff = nowTimestamp - theTimestamp\r\n    return diff < 60\r\n      ? 'now'\r\n      : diff < 3600\r\n        ? somePluralize(~~(diff / 60), ' minute') + 'ago'\r\n        : diff < 86400\r\n          ? somePluralize(~~(diff / 3600), ' hour') + 'ago'\r\n          : diff < 691200\r\n            ? somePluralize(~~(diff / 86400), ' day') + 'ago'\r\n            : timeFormat(timeValue, format, zero)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeNewDate} from './timeNewDate'\r\n\r\n/**\r\n * @description 两个时间的时间差\r\n * @param {*} timeOne\r\n * @param {*} timeTwo\r\n * @param {Boolean} [abs] 绝对值\r\n * @returns {Number|Null}\r\n */\r\nexport const timeDifference = (\r\n  timeOne: any,\r\n  timeTwo: any,\r\n  abs: boolean = false\r\n): number | null => {\r\n  const oneNewDate = timeNewDate(timeOne)\r\n  const twoNewDate = timeNewDate(timeTwo)\r\n  if (oneNewDate !== null && twoNewDate !== null) {\r\n    const result = ~~((oneNewDate.getTime() - twoNewDate.getTime()) / 1000)\r\n    return abs ? Math.abs(result) : result\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间的日份\r\n * @param {*} [timeValue]\r\n * @returns {String|Null}\r\n */\r\nexport const timeGetDay = (timeValue: any = new Date()): string | null => {\r\n  const theTime = timeValue || new Date()\r\n  const theObject = timeObject(theTime)\r\n  return theObject !== null ? String(theObject.d).padStart(2, '0') : null\r\n}\r\n","import {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间的周几\r\n * @param {*} [timeValue]\r\n * @returns {String|Null}\r\n */\r\nexport const timeGetWeek = (timeValue: any = new Date()): number | null => {\r\n  const theTime = timeValue || new timeValue()\r\n  const theObject = timeObject(theTime)\r\n  return theObject !== null ? theObject?.w : null\r\n}\r\n","import {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 时间的年份\r\n * @param {*} [timeValue]\r\n * @param {boolean} isArray\r\n * @returns {string|null|string[]}\r\n */\r\nexport const timeGetYearMonth = (timeValue: any = new Date(), isArray: boolean = false): null | any[] | string => {\r\n  const theTime = timeValue || new timeValue()\r\n  const theObject = timeObject(theTime)\r\n  return theObject == null ?\r\n    null : isArray ?\r\n      [theObject.y, theObject.m] : `${String(theObject.y).padStart(4, '0')}-${String(theObject.m).padStart(2, '0')}`\r\n}\r\n","import { timeNewDate } from './timeNewDate'\r\n\r\n/**\r\n * @param {*} theTime 传入的时间\r\n * @param {*} [nowTime] 当前时间时间\r\n * @returns {Boolean|Null} 传入的时间是否早于当前时间\r\n */\r\nexport const timeIsEarly = (theTime: any, nowTime: any): boolean | null => {\r\n  const theNewDate = timeNewDate(theTime)\r\n  const nowNewDate = timeNewDate(nowTime) || new Date()\r\n  if (theNewDate !== null && nowNewDate !== null) {\r\n    const theTimeStamp = theNewDate.getTime()\r\n    const nowTimeStamp = nowNewDate.getTime()\r\n    return theTimeStamp < nowTimeStamp\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import { H_DATETIME, H_M_D_H_I } from './timeText'\r\nimport { timeFormat } from './timeFormat'\r\nimport { timeIsEarly } from './timeIsEarly'\r\nimport { timestamp } from './timestamp'\r\n\r\n/**\r\n * @param {*} timeValue 时间\r\n * @returns {String} 相对时间字符串\r\n */\r\nexport const timeRelativeTime = (timeValue: any = new Date()): string | null => {\r\n  const theTimeStamp = timestamp(timeValue)\r\n  if (theTimeStamp) {\r\n    const nowTimeStamp = Math.floor(Date.now() / 1000) // 获取当前时间时间戳\r\n    const isEarly = timeIsEarly(theTimeStamp, nowTimeStamp) // 判断传入时间戳是否早于当前时间戳\r\n    let diff = nowTimeStamp - theTimeStamp // 获取两个时间戳差值\r\n    if (!isEarly) {\r\n      // 如果isEarly为false则差值取反\r\n      diff = -diff\r\n    }\r\n    const dirStr = isEarly ? '前' : '后'\r\n    let resStr\r\n    if (diff <= 59) {\r\n      // 少于等于59秒\r\n      resStr = diff + '秒' + dirStr\r\n    } else if (diff > 59 && diff <= 3599) {\r\n      // 多于59秒，少于等于59分钟59秒\r\n      resStr = Math.floor(diff / 60) + '分钟' + dirStr\r\n    } else if (diff > 3599 && diff <= 86399) {\r\n      // 多于59分钟59秒，少于等于23小时59分钟59秒\r\n      resStr = Math.floor(diff / 3600) + '小时' + dirStr\r\n    } else if (diff > 86399 && diff <= 2623859) {\r\n      // 多于23小时59分钟59秒，少于等于29天59分钟59秒\r\n      resStr = Math.floor(diff / 86400) + '天' + dirStr\r\n    } else if (diff > 2623859 && diff <= 31567859 && isEarly) {\r\n      // 多于29天59分钟59秒，少于364天23小时59分钟59秒，且传入的时间戳早于当前\r\n      resStr = timeFormat(theTimeStamp, H_M_D_H_I, true)\r\n    } else {\r\n      resStr = timeFormat(theTimeStamp, H_DATETIME, true)\r\n    }\r\n    return resStr\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","/**\r\n * @description 秒牌\r\n * @param {number} seconds 秒数\r\n * @returns {string}\r\n */\r\nexport const timeSecondBar = (seconds: number) => {\r\n  let showMinutes = 0\r\n  let showHours = 0\r\n  let showDays = 0\r\n  const showSeconds = ~~(+seconds % 60)\r\n  if (seconds > 59) {\r\n    showMinutes = ~~(+seconds / 60)\r\n  }\r\n  if (showMinutes > 59) {\r\n    showHours = ~~(showMinutes / 60)\r\n  }\r\n  showMinutes = ~~(showMinutes % 60)\r\n  if (showHours > 59) {\r\n    showDays = ~~(showHours / 24)\r\n  }\r\n  showHours = ~~(showHours % 24)\r\n  const showHoursStr = String(showHours).padStart(2, '0')\r\n  const showMinutesStr = String(showMinutes).padStart(2, '0')\r\n  const showSecondsStr = String(showSeconds).padStart(2, '0')\r\n  const last = `${showHoursStr}:${showMinutesStr}:${showSecondsStr}`\r\n  return showDays === 0 ? last : `${showDays}.${last}`\r\n}\r\n","import {H_H_I, H_Y_M_D_H_I} from './timeText'\r\nimport {timeFormat} from './timeFormat'\r\nimport {timeDifference} from './timeDifference'\r\nimport {timeObject} from './timeObject'\r\n\r\n/**\r\n * @description 短时间\r\n * @param {*} timeValue\r\n * @returns {Null|String}\r\n */\r\nexport const timeShort = (timeValue: any = new Date()) => {\r\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\r\n  if (theObject !== null) {\r\n    const nowObject = timeObject(new Date())\r\n    const dateOne = `${theObject?.y}-${theObject?.m}-${theObject?.d}`\r\n    const dateTwo = `${nowObject?.y}-${nowObject?.m}-${nowObject?.d}`\r\n    const diff = +(timeDifference(dateOne, dateTwo, false) as number)\r\n    const oneDaySeconds = 86400 // 一天秒数\r\n    return diff === oneDaySeconds * 2\r\n      ? '后天 ' + timeFormat(timeValue, H_H_I, true)\r\n      : diff === oneDaySeconds\r\n        ? '明天 ' + timeFormat(timeValue, H_H_I, true)\r\n        : diff === 0\r\n          ? timeFormat(timeValue, H_H_I, true)\r\n          : diff === -oneDaySeconds\r\n            ? '昨天 ' + timeFormat(timeValue, H_H_I, true)\r\n            : diff === -oneDaySeconds * 2\r\n              ? '前天 ' + timeFormat(timeValue, H_H_I, true)\r\n              : theObject.y === nowObject?.y\r\n                ? timeFormat(timeValue, H_H_I, true)\r\n                : timeFormat(timeValue, H_Y_M_D_H_I, true)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","/**\r\n * @description 判断时间戳格式是否是毫秒\r\n * @param {Number} timestamp\r\n * @returns {Boolean}\r\n */\r\nexport const timeStampIsMillisecond = (timestamp: number) => String(timestamp).length > 10\r\n","/**\r\n * @description 是否boolean类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeBoolean = (typeValue: any) =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object boolean]'\r\n","/**\r\n * @description 是否function类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeFunction = (typeValue: unknown): boolean =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object function]'\r\n","/**\r\n * @description 是否regexp类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeRegexp = (typeValue: any): boolean =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object regexp]'\r\n","import { typeFunction } from './typeFunction'\r\nimport { typeRegexp } from './typeRegexp'\r\n/**\r\n * @description 是否empty类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeEmpty = (typeValue: any): boolean =>\r\n  !typeFunction(typeValue) &&\r\n  !typeRegexp(typeValue) &&\r\n  (typeValue == null ||\r\n    typeValue === 'undefined' ||\r\n    typeValue.length === 0 ||\r\n    JSON.stringify(typeValue) === '{}')\r\n","import { typeNumber } from './typeNumber'\r\n/**\r\n * @description 是否float类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeFloat = (typeValue: any): boolean =>\r\n  typeNumber(typeValue) && typeValue % 1 !== 0\r\n","/**\r\n * @description 是否HTMLElement类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeHTMLElement = (typeValue: any): boolean => {\r\n  const d = document.createElement('div')\r\n  try {\r\n    d.appendChild(typeValue.cloneNode(true))\r\n    return typeValue.nodeType === 1\r\n  } catch (e) {\r\n    return typeValue === window || typeValue === document\r\n  }\r\n}\r\n","import { typeNumber } from './typeNumber'\r\n/**\r\n * @description 是否int类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeInt = (typeValue: any): boolean =>\r\n  typeNumber(typeValue) && typeValue % 1 === 0\r\n","import { typeInt } from './typeInt'\r\n/**\r\n * @description 是否intMinus类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeIntMinus = (typeValue: any): boolean => typeInt(typeValue) && typeValue < 0\r\n","import { typeInt } from './typeInt'\r\n/**\r\n * @description  是否intPositive类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeIntPositive = (typeValue: any): boolean =>\r\n  typeInt(typeValue) && typeValue > 0\r\n","/**\r\n * @description 是否symbol类型\r\n * @param {*} typeValue\r\n * @returns {Boolean}\r\n */\r\nexport const typeSymbol = (typeValue: any): boolean =>\r\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object symbol]'\r\n","/**\r\n * @description uniCode解码\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const uniCodeDecode = (string: string): string =>\r\n  decodeURI(string.replace(/\\\\/g, '%'))\r\n","/**\r\n * @description uniCode编码\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const uniCodeEncode = (string: string): string => {\r\n  const array = []\r\n  for (let i = 0; i < string.length; i++) {\r\n    array[i] = ('00' + string.charCodeAt(i).toString(16)).slice(-4)\r\n  }\r\n  return '\\\\u' + array.join('\\\\u')\r\n}\r\n","/**\r\n * @description urlCode解码\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const urlCodeDecode = (string: string): string =>\r\n  decodeURIComponent(string)\r\n","/**\r\n * @description urlCode编码\r\n * @param {String} string\r\n * @returns {String}\r\n */\r\nexport const urlCodeEncode = (string: string): string =>\r\n  encodeURIComponent(string)\r\n","/**\r\n * @description 获取网址字符串中的参数，并组成参数对象\r\n * @param {String} urlString 网址字符串\r\n * @returns {Object} 参数对象\r\n */\r\nexport const urlStringQueryObject = (\r\n  urlString: string\r\n): Record<string | number | symbol, any> => {\r\n  const search = urlString.substring(urlString.lastIndexOf('?') + 1)\r\n  const json: Record<string | number | symbol, any> = {}\r\n  search.replace(/([^?&=]+)=([^?&=]*)/g, (result, $1, $2) => {\r\n    const name = decodeURIComponent($1)\r\n    let value = decodeURIComponent($2)\r\n    value = String(value)\r\n    json[name] = value\r\n    return result\r\n  })\r\n  return json\r\n}\r\n","import { urlStringQueryObject } from './urlStringQueryObject'\r\n\r\n/**\r\n * @description 获取网址字符串中的一个参数\r\n * @param {String} urlString 网址字符串\r\n * @param {String} name 参数名称\r\n * @returns {*|null}\r\n */\r\nexport const urlStringQueryOne = (\r\n  urlString: string,\r\n  name: string\r\n): string | null => {\r\n  const object = urlStringQueryObject(urlString)\r\n  return name && typeof object[name] !== 'undefined' ? object[name] : null\r\n}\r\n","import { formatAllCn } from '../format/formatAllCn'\r\n\r\n/**\r\n * @desc 验证是否全中文\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {Number} [min]\r\n * @param {Number} [max]\r\n */\r\nexport const validateAllCn = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field = '未知',\r\n  min = 2,\r\n  max = 10\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须填写`))\r\n  } else {\r\n    if (formatAllCn(validateValue)) {\r\n      if (validateValue.length < min || validateValue.length > max) {\r\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback(new Error(`${field}必须是全中文`))\r\n    }\r\n  }\r\n}\r\n","import { formatAllNumber } from '../format/formatAllNumber'\r\n\r\n/**\r\n * @desc 验证是否数字格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {String} [action]\r\n */\r\nexport const validateAllNumber = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field = '未知',\r\n  action = '填写'\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (formatAllNumber(validateValue)) {\r\n      callback()\r\n    } else {\r\n      callback(new Error(`${field}格式不正确`))\r\n    }\r\n  }\r\n}\r\n","import { formatDate } from '../format/formatDate'\r\n/**\r\n * @desc 验证是否date格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {String} [action]\r\n */\r\nexport const validateDate = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field = '未知',\r\n  action = '填写'\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (formatDate(validateValue)) {\r\n      callback()\r\n    } else {\r\n      callback(new Error(`${field}格式不正确`))\r\n    }\r\n  }\r\n}\r\n","import { formatDatetime } from '../format/formatDatetime'\r\n\r\n/**\r\n * @desc 验证是否dateTime格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {String} [action]\r\n */\r\nexport const validateDatetime = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field = '未知',\r\n  action = '填写'\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (formatDatetime(validateValue)) {\r\n      callback()\r\n    } else {\r\n      callback(new Error(`${field}格式不正确`))\r\n    }\r\n  }\r\n}\r\n","import { formatEmail } from '../format/formatEmail'\r\n\r\n/**\r\n * @desc 验证是否电子邮箱格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {Number} [min]\r\n * @param {Number} [max]\r\n */\r\nexport const validateEmail = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  min = 5,\r\n  max = 30\r\n) => {\r\n  const field = '电子邮箱'\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须填写`))\r\n  } else {\r\n    if (formatEmail(validateValue)) {\r\n      if (validateValue.length <= min || validateValue.length >= max) {\r\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback(new Error(`请填写正确的${field}`))\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @desc 验证后的错误信息\r\n * @param {*} fields\r\n */\r\nexport const validateErrMsg = (fields: Record<string | number | symbol, any>) =>\r\n  fields[Object.keys(fields)[0]][0].message\r\n","import { formatMobile } from '../format/formatMobile'\r\n/**\r\n * @desc 验证是否手机号码格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} action\r\n */\r\nexport const validateMobile = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  action = '填写'\r\n) => {\r\n  const field = '手机号码'\r\n  const number = 11\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (formatMobile(validateValue)) {\r\n      if (validateValue.length !== number) {\r\n        callback(new Error(`${field}为${number}个字符`))\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback(new Error(`请${action}正确的${field}`))\r\n    }\r\n  }\r\n}\r\n","import { formatPrice } from '../format/formatPrice'\r\n\r\n/**\r\n * @desc 验证是否价格格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {String} [action]\r\n * @param {Number} [min]\r\n * @param {Number} [max]\r\n */\r\nexport const validatePrice = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field = '价格',\r\n  action = '填写',\r\n  min = 1,\r\n  max = 10\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (formatPrice(validateValue)) {\r\n      if (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max)) {\r\n        callback(\r\n          new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\r\n        )\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback(new Error(`${field}只能是数字（最多2位小数）`))\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @desc 验证是否已填\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {String} field\r\n * @param {String} [action]\r\n * @param {Number} [min]\r\n * @param {Number} [max]\r\n */\r\nexport const validateRequire = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  field: string,\r\n  action = '填写',\r\n  min: number,\r\n  max: number\r\n) => {\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须${action}`))\r\n  } else {\r\n    if (\r\n      min &&\r\n      max &&\r\n      (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max))\r\n    ) {\r\n      callback(\r\n        new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\r\n      )\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n}\r\n","import { formatUsername } from '../format/formatUsername'\r\n\r\n/**\r\n * @desc 验证是否用户名格式\r\n * @param {*} rule\r\n * @param {String} validateValue\r\n * @param {*} callback\r\n * @param {Number} [min]\r\n * @param {Number} [max]\r\n */\r\nexport const validateUsername = (\r\n  rule: any,\r\n  validateValue: string,\r\n  callback: any,\r\n  min = 5,\r\n  max = 20\r\n) => {\r\n  const field = '用户名'\r\n  if (!validateValue || validateValue.length === 0) {\r\n    callback(new Error(`${field}必须填写`))\r\n  } else {\r\n    if (formatUsername(validateValue)) {\r\n      if (validateValue.length < min || validateValue.length > max) {\r\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback(\r\n        new Error(\r\n          `${field}必须是以字母为开头，由字母、数字、减号、点、下划线组成`\r\n        )\r\n      )\r\n    }\r\n  }\r\n}\r\n","/**\r\n * 周天至周六（中文）\r\n * @return {string[]}\r\n */\r\nexport const weekAryCn: string[] = ['日', '一', '二', '三', '四', '五', '六']\r\n","/**\r\n * 周天至周六（英文）\r\n * @return {string[]}\r\n */\r\nexport const weekAryEn: string[] = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n]\r\n","import {timeObject} from '../time/timeObject'\r\nimport {timeGetWeek} from '../time/timeGetWeek'\r\nimport {weekAryCn} from './weekAryCn'\r\n\r\n/**\r\n * @description 根据时间计算周几的中文\r\n * @param {*} timeValue 时间\r\n * @param {boolean} [isWeek] 是否使用周\r\n * @returns {Null|String}\r\n */\r\nexport const weekGetCn = (timeValue: any = new Date(), isWeek = false) => {\r\n  const theObject = timeObject(timeValue)\r\n  if (theObject !== null) {\r\n    const number = timeGetWeek(timeValue)\r\n    if (number !== null && number < weekAryCn.length && number >= 0) {\r\n      const week = isWeek ? '周' : '星期'\r\n      return `${week}${weekAryCn[number]}`\r\n    } else {\r\n      return null\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import {timeObject} from '../time/timeObject'\r\nimport {timeGetWeek} from '../time/timeGetWeek'\r\nimport {weekAryEn} from './weekAryEn'\r\n\r\n/**\r\n * @description 根据时间计算周几的英文\r\n * @param {*} timeValue 时间\r\n * @returns {Null|String}\r\n */\r\nexport const weekGetEn = (timeValue: any = new Date()) => {\r\n  const theObject = timeObject(timeValue)\r\n  if (theObject !== null) {\r\n    const number = timeGetWeek(timeValue)\r\n    if (number !== null && number < weekAryEn.length && number >= 0) {\r\n      return weekAryEn[number]\r\n    } else {\r\n      return null\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n"],"names":["autoQuery","queryString","queryCallback","queryArray","filter","state","value","toUpperCase","match","keyLight","lightObject","lightKey","lightValue","lightColor","replace","RegExp","val","calcSum","calcArray","Promise","resolve","reduce","total","current","oneLen","toString","split","length","twoLen","number","padStart","addressBarCurrent","location","href","addressBarFilePath","pathname","addressBarFrom","document","referrer","addressBarHash","hash","slice","addressBarHttp","protocol","addressBarHost","host","addressBarHead","addressBarName","hostname","addressBarPort","port","addressBarQuery","search","substr","typeArray","typeValue","Object","prototype","call","toLowerCase","aoCleanKeyOne","ao","result","key","push","aoChunk","size","array","Math","abs","index","resIndex","Array","ceil","typeObject","aoCleanKeyAll","count","aoWhetherIn","aoSearch","aoMatchCase","some","a","JSON","stringify","b","aoDeleteEmpty","aoAssign","aoAssignAry","aoDeleteKey","aoKey","aoKeyAry","i","aoDeleteValue","aoValue","aoValueAry","aoKeyName","aoHoldKey","aoHold","aoHoldAry","keyArray","aoHoldValue","k","e","aoRandom","r","floor","random","splice","aoRepeat","c","aoReverse","reverse","arrayDiKaErJi","arrayAny","ret","forEach","concat","arrayFlatten","item","isArray","arrayHasOne","arrayTar","indexOf","arrayIntersection","arrayAny1","arrayAny2","len","min","res","typeNumber","isNaN","arrayOrder","ary","sort","arrayOrderByField","arrayField","x","y","arrayRatioReplace","o","t","arrayToStringChar","char","join","String","arrayUnion","from","Set","arrayWhetherIn","browserUserAgent","navigator","userAgent","browserInfoObject","android","iphone","ipad","ie","window","ActiveXObject","edge","safari","firefox","chrome","opera","weiXin","browserIsMobile","test","browserIsPc","browserName","ua","isExplorer","exp","browserWhetherInArray","browserArray","caseAllBig","string","caseAllSmall","caseFirstBig","charAt","caseWordFirstBig","classHas","HTMLElement","className","classAdd","classNew","classRemove","keys","classToggle","controlInputNumberSpace","controlValue","theValue","parseInt","replaceAll","replaceOne","holdFirst","tempValue","replaceFirstChar","otherReplaceEmpty","controlInputPrice","controlPrice","thePrice","int","float","typeDate","Date","getTime","typeString","formatAllNumber","timeNewDate","timeValue","theNewDate","theTime","H_YM","H_YM_ABBR","H_DATE","H_DATE_ABBR","H_MH","H_DATETIME","H_DATETIME_ABBR","H_H_I","H_M_D_H_I","H_Y_M_D_H_I","T_YM","T_YM_ABBR","T_DATE","T_DATE_ABBR","T_MH","T_DATETIME","T_DATETIME_ABBR","T_H_I","T_M_D_H_I","T_Y_M_D_H_I","timeObject","getFullYear","m","getMonth","d","getDate","h","getHours","getMinutes","s","getSeconds","w","getDay","timeFormat","format","zero","theObject","dateApart","dateValue","someWhetherLeapYear","year","someFebruaryDays","someYearMonthDays","month","dateApartMonth","totalMonths","day","monthDays","dateApartMonthList","big","Y","M","dateDifference","dateOne","dateTwo","oneObject","twoObject","dateMonthFoot","dateMonthHead","timeGetYear","timeGetMonth","dateMonthNext","isResultArray","next","dateMonthPrev","apart","dateWeekSunday","week","dateOneWeek","sunday","dateOneMonth","monthFoot","oneWeek","theWeek","unshift","defineBooleanAry","label","defineFace","defineIsUseAry","ensureFootHave","ensureString","ensureAssign","theString","theAssign","ensureFootNone","strLen","theLen","ensureHeadHave","ensureHeadNone","fileFullName","createElement","fileBaseName","fileSuffixName","fileClassify","suffixName","n","v","includes","fileUnit","fileSize","fixed","log","pow","toFixed","filterBoolean","filterDate","time","filterDateHI","filterDatetime","filterIsUse","formatAllCn","formatDate","formatDatetime","date","formatDomain","formatEmail","formatExternal","formatHexColor","formatIdCard","formatImageBase","formatIp","formatMobile","formatPrice","formatTelephone","formatUrl","formatUsername","formatZip","haveAssign","haveCn","holdCn","holdLetter","holdNumber","localRead","localKey","localStorage","getItem","localSave","localValue","setItem","monthDifference","timeOne","timeTwo","numberAddComma","numberAddZero","replaceByObject","replaceObject","numberGet","numberPriceBigWrite","fraction","digit","unit","head","dot","j","numberUnit","objectDeleteElement","objectKey","map","objectHasChildren","nodeName","objectLength","objectRenameKey","newKey","someColorHexToRGB","hex","opacity","sHex","sColorNew","sColorChange","someColorRGBToHex","g","someMaxZIndex","somePluralize","someRandomColor","stringCut","have","none","stringCutCn","cnNumber","enNumber","theCnNumber","theEnNumber","stringLoop","theNumber","stringRandom","stringReverse","stringToArrayChar","stringToArrayNumber","timestamp","timeAgoCn","theTimestamp","diff","now","timeAgoEn","timeDifference","oneNewDate","twoNewDate","timeGetDay","timeGetWeek","timeGetYearMonth","timeIsEarly","nowTime","nowNewDate","timeRelativeTime","theTimeStamp","nowTimeStamp","isEarly","dirStr","resStr","timeSecondBar","seconds","showMinutes","showHours","showDays","showSeconds","last","timeShort","nowObject","oneDaySeconds","timeStampIsMillisecond","typeBoolean","typeFunction","typeRegexp","typeEmpty","typeFloat","typeHTMLElement","appendChild","cloneNode","nodeType","typeInt","typeIntMinus","typeIntPositive","typeSymbol","uniCodeDecode","decodeURI","uniCodeEncode","charCodeAt","urlCodeDecode","decodeURIComponent","urlCodeEncode","encodeURIComponent","urlStringQueryObject","urlString","substring","lastIndexOf","json","$1","$2","name","urlStringQueryOne","object","validateAllCn","rule","validateValue","callback","field","max","Error","validateAllNumber","action","validateDate","validateDatetime","validateEmail","validateErrMsg","fields","message","validateMobile","validatePrice","validateRequire","validateUsername","weekAryCn","weekAryEn","weekGetCn","isWeek","weekGetEn"],"mappings":"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"}