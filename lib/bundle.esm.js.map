{"version":3,"file":"bundle.esm.js","sources":["../src/addressBar/addressBarCurrent.ts","../src/addressBar/addressBarFilePath.ts","../src/addressBar/addressBarFrom.ts","../src/addressBar/addressBarHash.ts","../src/addressBar/addressBarHttp.ts","../src/addressBar/addressBarHost.ts","../src/addressBar/addressBarHead.ts","../src/addressBar/addressBarName.ts","../src/addressBar/addressBarPort.ts","../src/addressBar/addressBarQuery.ts","../src/type/typeDate.ts","../src/type/typeNumber.ts","../src/type/typeString.ts","../src/format/formatAllNumber.ts","../src/time/timeNewDate.ts","../src/time/timeText.ts","../src/time/timeObject.ts","../src/time/timeFormat.ts","../src/date/dateApart.ts","../src/some/someWhetherLeapYear.ts","../src/some/someFebruaryDays.ts","../src/some/someYearMonthDays.ts","../src/date/dateApartMonth.ts","../src/date/dateApartMonthList.ts","../src/date/dateDifference.ts","../src/date/dateMonthFoot.ts","../src/date/dateMonthHead.ts","../src/time/timeGetYear.ts","../src/time/timeGetMonth.ts","../src/date/dateMonthNext.ts","../src/date/dateMonthPrev.ts","../src/date/dateWeekSunday.ts","../src/date/dateOneWeek.ts","../src/date/dateOneMonth.ts","../src/format/formatAllCn.ts","../src/format/formatDate.ts","../src/format/formatDatetime.ts","../src/format/formatDomain.ts","../src/format/formatEmail.ts","../src/format/formatExternal.ts","../src/format/formatHexColor.ts","../src/format/formatIdCard.ts","../src/format/formatImageBase.ts","../src/format/formatIp.ts","../src/format/formatMobile.ts","../src/format/formatPrice.ts","../src/format/formatTelephone.ts","../src/format/formatUrl.ts","../src/format/formatUsername.ts","../src/format/formatZip.ts","../src/some/someColorHexToRGB.ts","../src/some/someColorRGBToHex.ts","../src/some/someMaxZIndex.ts","../src/some/somePluralize.ts","../src/some/someRandomColor.ts","../src/time/timestamp.ts","../src/time/timeAgoCn.ts","../src/time/timeAgoEn.ts","../src/time/timeDifference.ts","../src/time/timeGetDay.ts","../src/time/timeGetWeek.ts","../src/time/timeGetYearMonth.ts","../src/time/timeIsEarly.ts","../src/time/timeRelativeTime.ts","../src/time/timeSecondBar.ts","../src/time/timeShort.ts","../src/time/timeStampIsMillisecond.ts","../src/type/typeArray.ts","../src/type/typeBoolean.ts","../src/type/typeFunction.ts","../src/type/typeRegexp.ts","../src/type/typeEmpty.ts","../src/type/typeFloat.ts","../src/type/typeHTMLElement.ts","../src/type/typeInt.ts","../src/type/typeIntMinus.ts","../src/type/typeIntPositive.ts","../src/type/typeObject.ts","../src/type/typeSymbol.ts","../src/uniCode/uniCodeDecode.ts","../src/uniCode/uniCodeEncode.ts","../src/validate/validateAllCn.ts","../src/validate/validateAllNumber.ts","../src/validate/validateDate.ts","../src/validate/validateDatetime.ts","../src/validate/validateEmail.ts","../src/validate/validateErrMsg.ts","../src/validate/validateMobile.ts","../src/validate/validatePrice.ts","../src/validate/validateRequire.ts","../src/validate/validateUsername.ts"],"sourcesContent":["/**\n * @description 获取当前网址\n * @returns {string}\n */\nexport const addressBarCurrent = (): string => location.href\n","/**\n * @description 获取页面所在路径\n * @returns {string}\n */\nexport const addressBarFilePath = (): string => location.pathname\n","/**\n * @description 获取页面的来源\n * @returns {string}\n */\nexport const addressBarFrom = (): string => document.referrer\n","/**\n * @description 获取网址#号后的参数\n * @returns {string}\n */\nexport const addressBarHash = (): string => location.hash.slice(1)\n","/**\n * @description 获取http(s)\n * @returns {string}\n */\nexport const addressBarHttp = (): string =>\n  document.location.protocol === 'https:' ? 'https://' : 'http://'\n","/**\n * @description 获取域名:端口\n * @returns {string}\n */\nexport const addressBarHost = (): string => location.host\n","import { addressBarHttp } from './addressBarHttp'\nimport { addressBarHost } from './addressBarHost'\n/**\n * @description 获取http(s)://域名：端口\n * @returns {string}\n */\nexport const addressBarHead = (): string =>\n  `${addressBarHttp()} + ${addressBarHost()}`\n","/**\n * @description 获取域名\n * @returns {string}\n */\nexport const addressBarName = (): string => location.hostname\n","/**\n * @description 获取端口\n * @returns {string}\n */\nexport const addressBarPort = (): string => location.port\n","/**\n * @description 获取参数\n * @returns {string}\n */\nexport const addressBarQuery = (): string => location.search.substr(1)\n","/**\n * @description 是否date类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeDate = (typeValue: any) => typeValue instanceof Date && !isNaN(typeValue.getTime())\n","/**\n * @description 是否number类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeNumber = (typeValue: any): boolean =>\n  typeof typeValue === 'number' || (!isNaN(typeValue) && typeof typeValue === 'string')\n","import { typeNumber } from './typeNumber'\n\n/**\n * @description 是否string类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeString = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object string]' ||\n  typeNumber(typeValue)\n","/**\n * @description 是否全数字格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllNumber = (string: string): boolean =>\n  /^[0-9]+$/.test(String(string))\n","import {typeDate} from '../type/typeDate'\nimport {typeNumber} from '../type/typeNumber'\nimport {typeString} from '../type/typeString'\nimport {formatAllNumber} from '../format/formatAllNumber'\n\n/**\n * @description 获取时间对象\n * @param {*} timeValue\n * @returns {Date|Null}\n */\nexport const timeNewDate = (timeValue: any = new Date()): Date => {\n  if (timeValue) {\n    let theNewDate\n    if (typeDate(timeValue)) {\n      theNewDate = timeValue\n    } else {\n      let theTime = timeValue\n      if (typeString(theTime)) {\n        theTime = formatAllNumber(String(theTime))\n          ? theTime\n          : String(theTime).replace(/[.|-]/gm, '/')\n      }\n      if (typeNumber(theTime) && String(theTime).length === 10) {\n        theTime *= 1000\n      }\n      theNewDate = typeNumber(theTime) ? new Date(+theTime) : new Date(String(theTime))\n    }\n    return typeDate(theNewDate) ? theNewDate : null\n  } else {\n    return new Date()\n  }\n}\n","// noinspection SpellCheckingInspection\n\nexport const H_YM = '{y}-{m}'\nexport const H_YM_ABBR = '{y}{m}'\nexport const H_DATE = '{y}-{m}-{d}'\nexport const H_DATE_ABBR = '{y}{m}{d}'\nexport const H_MH = '{y}-{m}-01'\nexport const H_DATETIME = '{y}-{m}-{d} {h}:{i}:{s}'\nexport const H_DATETIME_ABBR = '{y}{m}{d}{h}{i}{s}'\nexport const H_H_I = '{h}:{i}'\nexport const H_M_D_H_I = '{m}-{d} {h}:{i}'\nexport const H_Y_M_D_H_I = '{y}-{m}-{d} {h}:{i}'\nexport const T_YM = 'YYYY-MM'\nexport const T_YM_ABBR = 'YYYYMM'\nexport const T_DATE = 'YYYY-MM-DD'\nexport const T_DATE_ABBR = 'YYYYMMDD'\nexport const T_MH = 'YYYY-MM-01'\nexport const T_DATETIME = 'YYYY-MM-DD HH:mm:ss'\nexport const T_DATETIME_ABBR = 'YYYYMMDDHHmmss'\nexport const T_H_I = 'HH:mm'\nexport const T_M_D_H_I = 'MM-DD HH:mm'\nexport const T_Y_M_D_H_I = 'YYYY-MM-DD HH:mm'\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间对象\n * @param {*} [timeValue]\n * @returns {{s: Number, d: Number, w: Number, h: Number, y: Number, i: Number, m: Number}|Null}\n */\nexport const timeObject = (\n  timeValue: any = new Date()\n): Record<string | number | symbol, any> | null => {\n  const theNewDate = timeNewDate(timeValue)\n  return theNewDate !== null\n    ? {\n      y: theNewDate.getFullYear(),\n      m: theNewDate.getMonth() + 1,\n      d: theNewDate.getDate(),\n      h: theNewDate.getHours(),\n      i: theNewDate.getMinutes(),\n      s: theNewDate.getSeconds(),\n      w: theNewDate.getDay()\n    }\n    : null\n}\n","import {H_DATETIME} from './timeText'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 时间格式化\n * @param {*} [timeValue]\n * @param {String} [format] 格式\n * @param {Boolean} [zero] 是否加零，默认加零\n * @returns {Null|String}\n */\nexport const timeFormat = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    return format.replace(/{([ymdhisw])+}/g, (result, key) => {\n      const timeValue = theObject[key]\n      return key === 'w'\n        ? ['日', '一', '二', '三', '四', '五', '六'][timeValue]\n        : zero\n          ? String(timeValue).padStart(2, '0')\n          : String(timeValue)\n    })\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeFormat} from '../time/timeFormat'\nimport {H_DATE} from '../time/timeText'\n\n/**\n * @description 计算日期number天后(前)的日期（正数为后，负数为前）\n * @param {*} dateValue 要计算的日期\n * @param {Number} number number天后(前)\n * @returns {String|Null}\n */\nexport const dateApart = (dateValue: any, number: number): string | null => {\n  const theNewDate = timeNewDate(dateValue)\n  return theNewDate\n    ? timeFormat(~~(+theNewDate / 1000) + number * 24 * 60 * 60, H_DATE, true)\n    : null\n}\n","/**\n * @description 是否闰年\n * @param {Number} year\n * @returns {Boolean}\n */\nexport const someWhetherLeapYear = (year: number | string) =>\n  (+year % 4 === 0 && +year % 100 !== 0) || +year % 400 === 0\n","import { someWhetherLeapYear } from './someWhetherLeapYear'\n\n/**\n * @description 二月的天数\n * @param {Number} year\n * @returns {Number}\n */\nexport const someFebruaryDays = (year: number | string) =>\n  someWhetherLeapYear(~~String(year)) ? 29 : 28\n","import { someFebruaryDays } from './someFebruaryDays'\n\n/**\n * @description 某年某月的月天数\n * @param {Number} year\n * @param {Number} month\n * @returns {Number}\n */\nexport const someYearMonthDays = (\n  year: number | string,\n  month: number | string\n) => {\n  const monthDays = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][\n    ~~String(month) - 1\n  ]\n  return monthDays || someFebruaryDays(~~String(year))\n}\n","import {timeObject} from '../time/timeObject'\nimport {someYearMonthDays} from '../some/someYearMonthDays'\n\n/**\n * @description 获取number个月后（前）的日期，number可为正可为负\n * @param {*} [dateValue] 时间\n * @param {Number} number 几个月后（前）\n * @returns {Null|String}\n */\nexport const dateApartMonth = (dateValue: any = new Date(), number: number): string | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    const totalMonths = +theObject.y * 12 + +theObject.m + +number\n    let day = theObject.d\n    let year = Math.floor(totalMonths / 12)\n    let month = totalMonths % 12\n    if (month === 0) {\n      year = year - 1\n      month = 12\n    }\n    const monthDays = someYearMonthDays(year, month)\n    day = day > monthDays ? monthDays : day\n    const Year = String(year).padStart(4, '0')\n    const Month = String(month).padStart(2, '0')\n    const Day = String(day).padStart(2, '0')\n    return `${Year}-${Month}-${Day}`\n  } else {\n    return null\n  }\n}\n","import { timeObject } from '../time/timeObject'\n\n/**\n * @description 获取一个时间至number个月前(后)的所有年月的数据列表\n * @param {*} [dateValue] 时间\n * @param {Number|String} number\n * @returns {Array|Null}\n */\nexport const dateApartMonthList = (\n  dateValue: any = new Date(),\n  number: number\n): string[] | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    let y = +String(theObject.y).padStart(4, '0')\n    let m = +String(theObject.m).padStart(2, '0')\n    const array = []\n    const big = number > 0\n    number = Math.abs(number)\n    array.push(`${y}-${m}`)\n    for (let i = 0; i < +number; i++) {\n      if (big) {\n        m++\n        if (m >= 13) {\n          y += 1\n          m = 1\n        }\n      } else {\n        m--\n        if (m <= 0) {\n          y -= 1\n          m = 12\n        }\n      }\n      const Y = `${y}`.padStart(4, '0')\n      const M = `${m}`.padStart(2, '0')\n      array.push(`${Y}-${M}`)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","import { timeNewDate } from '../time/timeNewDate'\n\n/**\n * @description 两个日期时间相差多少天\n * @param {*} dateOne 日期一\n * @param {*} dateTwo 日期二\n * @param {Boolean} abs 绝对值\n * @returns {Number|Null}\n */\nexport const dateDifference = (\n  dateOne: any,\n  dateTwo: any,\n  abs: boolean\n): number | null => {\n  const oneObject = timeNewDate(dateOne)\n  const twoObject = timeNewDate(dateTwo)\n  if (oneObject && twoObject) {\n    abs = abs || false\n    const result = ~~(\n      (oneObject.getTime() - twoObject.getTime()) /\n      (1000 * 24 * 60 * 60)\n    )\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import {timeObject} from '../time/timeObject'\n\n/**\n * @description 获取日期的月尾日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateMonthFoot = (dateValue: any = new Date()): string | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject !== null) {\n    const year = String(theObject.y).padStart(4, '0')\n    const month = String(theObject.m).padStart(2, '0')\n    const day = new Date(+year, +month, 0).getDate()\n    return `${year}-${month}-${day}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeFormat} from '../time/timeFormat'\nimport {H_MH} from '../time/timeText'\n\n/**\n * @description 获取日期的月头日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateMonthHead = (dateValue: any = new Date()): string | null => {\n  const theObject = timeNewDate(dateValue)\n  return theObject ? timeFormat(theObject, H_MH, true) : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetYear = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.y).padStart(4, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的月份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetMonth = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.m).padStart(2, '0') : null\n}\n","import { timeNewDate } from '../time/timeNewDate'\nimport { timeGetYear } from '../time/timeGetYear'\nimport { timeGetMonth } from '../time/timeGetMonth'\nimport { dateApart } from './dateApart'\nimport { dateMonthFoot } from './dateMonthFoot'\n\n/**\n * @description 获取日期下月的年月\n * @param {*} [dateValue]\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\n * @returns {String|Array|Null}\n */\nexport const dateMonthNext = (\n  dateValue: any = new Date(),\n  isResultArray: boolean\n): string | string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject !== null) {\n    const next = dateApart(dateMonthFoot(dateValue), 1)\n    const year = timeGetYear(next) as string\n    const month = timeGetMonth(next) as string\n    isResultArray = isResultArray || false\n    return isResultArray ? [year, month] : `${year}-${month}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeGetYear} from '../time/timeGetYear'\nimport {timeGetMonth} from '../time/timeGetMonth'\nimport {dateApart} from './dateApart'\nimport {dateMonthHead} from './dateMonthHead'\n\n/**\n * @description 获取日期上月的年月\n * @param {*} [dateValue]\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\n * @returns {Array|String|Null}\n */\nexport const dateMonthPrev = (\n  dateValue: any = new Date(),\n  isResultArray: boolean\n): string | string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject) {\n    const apart = dateApart(dateMonthHead(dateValue), -1)\n    const year = timeGetYear(apart) as string\n    const month = timeGetMonth(apart) as string\n    isResultArray = isResultArray || false\n    return isResultArray ? [year, month] : `${year}-${month}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\n\n/**\n * @description 日期的周日日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateWeekSunday = (dateValue: any = new Date()): string | null => {\n  const theNewDate = timeNewDate(dateValue)\n  if (theNewDate !== null) {\n    const week = theNewDate.getDay()\n    const ary = [0, -1, -2, -3, -4, -5, -6]\n    return dateApart(theNewDate, ary[week])\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\nimport {dateWeekSunday} from './dateWeekSunday'\n\n/**\n * @description 获取日期一周的日期\n * @param {*} [dateValue]\n * @returns {Array|Null}\n */\nexport const dateOneWeek = (dateValue: any = new Date()): string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject !== null) {\n    const array = []\n    const sunday = dateWeekSunday(dateValue)\n    for (let i = 0; i < 7; i++) {\n      const apart = dateApart(sunday, i) as string\n      array.push(apart)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\nimport {dateMonthFoot} from './dateMonthFoot'\nimport {dateOneWeek} from './dateOneWeek'\n\n/**\n * @description 获取日期一月的日期\n * @param {*} [dateValue]\n * @returns {Array|Null}\n */\nexport const dateOneMonth = (dateValue: any = new Date()): any[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject) {\n    const array = []\n    const monthFoot = dateMonthFoot(dateValue)\n    const oneWeek = dateOneWeek(monthFoot) as string[]\n    array.push(oneWeek)\n    for (let i = 0; i < 6; i++) {\n      const apart = dateApart(oneWeek[0], -(i * 7 + 1))\n      if (new Date(String(apart)).getMonth() + 1 !== theObject.getMonth() + 1) {\n        break\n      }\n      const theWeek = dateOneWeek(apart)\n      array.unshift(theWeek)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","/**\n * @description 是否全中文格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllCn = (string: string): boolean =>\n  /^[\\u4e00-\\u9fa5]+$/i.test(String(string))\n","import { someYearMonthDays } from '../some/someYearMonthDays'\n\n/**\n * @description 是否 date 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDate = (string: string): boolean => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2})$/.test(String(string))) {\n    const [y, m, d] = string.split('-')\n    return +m > 0 && +m <= 12 && +d > 0 && +d <= someYearMonthDays(y, m)\n  } else {\n    return false\n  }\n}\n","import { formatDate } from './formatDate'\n\n/**\n * @description 是否 dateTime 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDatetime = (string: string) => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/.test(String(string))) {\n    const [date, time] = string.split(' ')\n    const [h, m, s] = time.split('-')\n    return formatDate(date) && +h < 24 && +m < 60 && +s < 60\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 domain 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDomain = (string: string): boolean =>\n  /^[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+$/.test(String(string))\n","/**\n * @description 是否 email格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatEmail = (string: string): boolean =>\n  /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/i.test(String(string))\n","/**\n * @description 是否外链格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatExternal = (string: string): boolean =>\n  /^(https?:|mailto:|tel:)/.test(String(string))\n","/**\n * @description 是否十六进制颜色的格式\n * @param {string} string\n * @returns {boolean}\n */\nexport const formatHexColor = (string: string) => {\n  const reg = /^#([0-9a-fA-F]{3}|[0-9a-fA-f]{6})$/\n  return reg.test(string)\n}\n","/**\n * @description 是否 idCard 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatIdCard = (string: string): boolean =>\n  /^[1-9](\\d{14}|\\d{16}[0-9x])$/i.test(String(string))\n","/**\n * @description 是否 imageBase 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatImageBase = (string: string): boolean =>\n  /^data:image\\/(bmp|png|gif|jpg|jpeg);base64,/.test(String(string))\n","/**\n * @description 是否 ip 格式\n * @param {String} string\n * @returns {Boolean}\n */\n\nexport const formatIp = (string: string): boolean => {\n  if (/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/.test(String(string))) {\n    const [a, b, c, d] = string.split('.')\n    return +a < 256 && +b < 256 && +c < 256 && +d < 256\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 mobile 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatMobile = (string: string): boolean =>\n  /^(13|14|15|16|17|18)[0-9]{9}$/.test(String(string))\n","/**\n * @description 是否 price 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatPrice = (string: string): boolean =>\n  /^\\d+\\.?\\d{0,2}$/.test(String(string))\n","/**\n * @description 是否 telephone 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatTelephone = (string: string): boolean =>\n  /^[0-9-()]{5,18}$/.test(String(string))\n","/**\n * @description 是否 url 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUrl = (string: string): boolean =>\n  /^((https?:)?\\/\\/)?[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+/.test(String(string))\n","/**\n * @description 是否 username 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUsername = (string: string): boolean =>\n  /^[a-z]+[a-z0-9]+[-_.]*[a-z0-9]+$/i.test(String(string))\n","/**\n * @description 是否 zip 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatZip = (string: string): boolean =>\n  /^\\d{6}$/.test(String(string))\n","import { formatHexColor } from '../format/formatHexColor'\n\n/**\n * @description 十六进制颜色转RGB颜色\n * @param {string} hex\n * @param {number} [opacity]\n * @return {string}\n */\nexport const someColorHexToRGB = (hex: string, opacity = 1): string => {\n  let sHex = hex.toLowerCase()\n  if (formatHexColor(hex)) {\n    if (sHex.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1))\n      }\n      sHex = sColorNew\n    }\n    const sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)))\n    }\n    return opacity\n      ? 'RGBA(' + sColorChange.join(',') + ',' + String(opacity) + ')'\n      : 'RGB(' + sColorChange.join(',') + ')'\n  }\n  return sHex\n}\n","/**\n * @description RGB颜色转十六进制颜色\n * @param {number} r\n * @param {number} g\n * @param {number} b\n * @return {string}\n */\nexport const someColorRGBToHex = (r: number, g: number, b: number): string => {\n  const hex = ((r << 16) | (g << 8) | b).toString(16)\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex\n}\n","/**\n * @description 最高的 z-index 值\n * @returns {Number}\n */\nexport const someMaxZIndex = (): number =>\n  ~~(new Date().getTime() / 1000).toFixed(0)\n","/**\n * @description 如果值复数，则显示复数标签\n * @param {Number} number\n * @param {String} unit\n * @returns {String}\n */\nexport const somePluralize = (number: number, unit: string) =>\n  number === 1 ? number + unit : number + unit + 's'\n","/**\n * @description 取随机颜色\n * @returns {String}\n */\nexport const someRandomColor = (): string => {\n  const array = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F'\n  ]\n  let string = ''\n  for (let i = 0; i < 6; i++) {\n    const id = Math.ceil(Math.random() * 15)\n    string += array[id]\n  }\n  return '#' + string\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间戳\n * @param {*} [timeValue]\n * @returns {Number|Null}\n */\nexport const timestamp = (timeValue: any = new Date()) => {\n  const theNewDate = timeValue ? timeNewDate(timeValue) : new Date()\n  return theNewDate ? ~~(theNewDate.getTime() / 1000).toFixed(0) : null\n}\n","import {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（中文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoCn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? '刚刚'\n      : diff < 3600\n        ? ~~(diff / 60) + '分钟前'\n        : diff < 86400\n          ? ~~(diff / 3600) + '小时前'\n          : diff < 691200\n            ? ~~(diff / 86400) + '天前'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {somePluralize} from '../some/somePluralize'\nimport {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（英文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoEn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? 'now'\n      : diff < 3600\n        ? somePluralize(~~(diff / 60), ' minute') + 'ago'\n        : diff < 86400\n          ? somePluralize(~~(diff / 3600), ' hour') + 'ago'\n          : diff < 691200\n            ? somePluralize(~~(diff / 86400), ' day') + 'ago'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 两个时间的时间差\n * @param {*} timeOne\n * @param {*} timeTwo\n * @param {Boolean} [abs] 绝对值\n * @returns {Number|Null}\n */\nexport const timeDifference = (\n  timeOne: any,\n  timeTwo: any,\n  abs: boolean = false\n): number | null => {\n  const oneNewDate = timeNewDate(timeOne)\n  const twoNewDate = timeNewDate(timeTwo)\n  if (oneNewDate !== null && twoNewDate !== null) {\n    const result = ~~((oneNewDate.getTime() - twoNewDate.getTime()) / 1000)\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的日份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetDay = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new Date()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.d).padStart(2, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的周几\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetWeek = (timeValue: any = new Date()): number | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? theObject?.w : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @param {boolean} isArray\n * @returns {string|null|string[]}\n */\nexport const timeGetYearMonth = (timeValue: any = new Date(), isArray: boolean = false): null | any[] | string => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject == null ?\n    null : isArray ?\n      [theObject.y, theObject.m] : `${String(theObject.y).padStart(4, '0')}-${String(theObject.m).padStart(2, '0')}`\n}\n","import { timeNewDate } from './timeNewDate'\n\n/**\n * @param {*} theTime 传入的时间\n * @param {*} [nowTime] 当前时间时间\n * @returns {Boolean|Null} 传入的时间是否早于当前时间\n */\nexport const timeIsEarly = (theTime: any, nowTime: any): boolean | null => {\n  const theNewDate = timeNewDate(theTime)\n  const nowNewDate = timeNewDate(nowTime) || new Date()\n  if (theNewDate !== null && nowNewDate !== null) {\n    const theTimeStamp = theNewDate.getTime()\n    const nowTimeStamp = nowNewDate.getTime()\n    return theTimeStamp < nowTimeStamp\n  } else {\n    return null\n  }\n}\n","import { H_DATETIME, H_M_D_H_I } from './timeText'\nimport { timeFormat } from './timeFormat'\nimport { timeIsEarly } from './timeIsEarly'\nimport { timestamp } from './timestamp'\n\n/**\n * @param {*} timeValue 时间\n * @returns {String} 相对时间字符串\n */\nexport const timeRelativeTime = (timeValue: any = new Date()): string | null => {\n  const theTimeStamp = timestamp(timeValue)\n  if (theTimeStamp) {\n    const nowTimeStamp = Math.floor(Date.now() / 1000) // 获取当前时间时间戳\n    const isEarly = timeIsEarly(theTimeStamp, nowTimeStamp) // 判断传入时间戳是否早于当前时间戳\n    let diff = nowTimeStamp - theTimeStamp // 获取两个时间戳差值\n    if (!isEarly) {\n      // 如果isEarly为false则差值取反\n      diff = -diff\n    }\n    const dirStr = isEarly ? '前' : '后'\n    let resStr\n    if (diff <= 59) {\n      // 少于等于59秒\n      resStr = diff + '秒' + dirStr\n    } else if (diff > 59 && diff <= 3599) {\n      // 多于59秒，少于等于59分钟59秒\n      resStr = Math.floor(diff / 60) + '分钟' + dirStr\n    } else if (diff > 3599 && diff <= 86399) {\n      // 多于59分钟59秒，少于等于23小时59分钟59秒\n      resStr = Math.floor(diff / 3600) + '小时' + dirStr\n    } else if (diff > 86399 && diff <= 2623859) {\n      // 多于23小时59分钟59秒，少于等于29天59分钟59秒\n      resStr = Math.floor(diff / 86400) + '天' + dirStr\n    } else if (diff > 2623859 && diff <= 31567859 && isEarly) {\n      // 多于29天59分钟59秒，少于364天23小时59分钟59秒，且传入的时间戳早于当前\n      resStr = timeFormat(theTimeStamp, H_M_D_H_I, true)\n    } else {\n      resStr = timeFormat(theTimeStamp, H_DATETIME, true)\n    }\n    return resStr\n  } else {\n    return null\n  }\n}\n","/**\n * @description 秒牌\n * @param {number} seconds 秒数\n * @returns {string}\n */\nexport const timeSecondBar = (seconds: number) => {\n  let showMinutes = 0\n  let showHours = 0\n  let showDays = 0\n  const showSeconds = ~~(+seconds % 60)\n  if (seconds > 59) {\n    showMinutes = ~~(+seconds / 60)\n  }\n  if (showMinutes > 59) {\n    showHours = ~~(showMinutes / 60)\n  }\n  showMinutes = ~~(showMinutes % 60)\n  if (showHours > 59) {\n    showDays = ~~(showHours / 24)\n  }\n  showHours = ~~(showHours % 24)\n  const showHoursStr = String(showHours).padStart(2, '0')\n  const showMinutesStr = String(showMinutes).padStart(2, '0')\n  const showSecondsStr = String(showSeconds).padStart(2, '0')\n  const last = `${showHoursStr}:${showMinutesStr}:${showSecondsStr}`\n  return showDays === 0 ? last : `${showDays}.${last}`\n}\n","import {H_H_I, H_Y_M_D_H_I} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timeDifference} from './timeDifference'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 短时间\n * @param {*} timeValue\n * @returns {Null|String}\n */\nexport const timeShort = (timeValue: any = new Date()) => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    const nowObject = timeObject(new Date())\n    const dateOne = `${theObject?.y}-${theObject?.m}-${theObject?.d}`\n    const dateTwo = `${nowObject?.y}-${nowObject?.m}-${nowObject?.d}`\n    const diff = +(timeDifference(dateOne, dateTwo, false) as number)\n    const oneDaySeconds = 86400 // 一天秒数\n    return diff === oneDaySeconds * 2\n      ? '后天 ' + timeFormat(timeValue, H_H_I, true)\n      : diff === oneDaySeconds\n        ? '明天 ' + timeFormat(timeValue, H_H_I, true)\n        : diff === 0\n          ? timeFormat(timeValue, H_H_I, true)\n          : diff === -oneDaySeconds\n            ? '昨天 ' + timeFormat(timeValue, H_H_I, true)\n            : diff === -oneDaySeconds * 2\n              ? '前天 ' + timeFormat(timeValue, H_H_I, true)\n              : theObject.y === nowObject?.y\n                ? timeFormat(timeValue, H_H_I, true)\n                : timeFormat(timeValue, H_Y_M_D_H_I, true)\n  } else {\n    return null\n  }\n}\n","/**\n * @description 判断时间戳格式是否是毫秒\n * @param {Number} timestamp\n * @returns {Boolean}\n */\nexport const timeStampIsMillisecond = (timestamp: number) => String(timestamp).length > 10\n","/**\n * @description 是否array类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeArray = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object array]'\n","/**\n * @description 是否boolean类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeBoolean = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object boolean]'\n","/**\n * @description 是否function类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFunction = (typeValue: unknown): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object function]'\n","/**\n * @description 是否regexp类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeRegexp = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object regexp]'\n","import { typeFunction } from './typeFunction'\nimport { typeRegexp } from './typeRegexp'\n/**\n * @description 是否empty类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeEmpty = (typeValue: any): boolean =>\n  !typeFunction(typeValue) &&\n  !typeRegexp(typeValue) &&\n  (typeValue == null ||\n    typeValue === 'undefined' ||\n    typeValue.length === 0 ||\n    JSON.stringify(typeValue) === '{}')\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否float类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFloat = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 !== 0\n","/**\n * @description 是否HTMLElement类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeHTMLElement = (typeValue: any): boolean => {\n  const d = document.createElement('div')\n  try {\n    d.appendChild(typeValue.cloneNode(true))\n    return typeValue.nodeType === 1\n  } catch (e) {\n    return typeValue === window || typeValue === document\n  }\n}\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否int类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeInt = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 === 0\n","import { typeInt } from './typeInt'\n/**\n * @description 是否intMinus类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntMinus = (typeValue: any): boolean => typeInt(typeValue) && typeValue < 0\n","import { typeInt } from './typeInt'\n/**\n * @description  是否intPositive类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntPositive = (typeValue: any): boolean =>\n  typeInt(typeValue) && typeValue > 0\n","/**\n * @description 是否object类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeObject = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object object]'\n","/**\n * @description 是否symbol类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeSymbol = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object symbol]'\n","/**\n * @description uniCode解码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeDecode = (string: string): string =>\n  decodeURI(string.replace(/\\\\/g, '%'))\n","/**\n * @description uniCode编码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeEncode = (string: string): string => {\n  const array = []\n  for (let i = 0; i < string.length; i++) {\n    array[i] = ('00' + string.charCodeAt(i).toString(16)).slice(-4)\n  }\n  return '\\\\u' + array.join('\\\\u')\n}\n","import { formatAllCn } from '../format/formatAllCn'\n\n/**\n * @desc 验证是否全中文\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateAllCn = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  min = 2,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatAllCn(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}必须是全中文`))\n    }\n  }\n}\n","import { formatAllNumber } from '../format/formatAllNumber'\n\n/**\n * @desc 验证是否数字格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateAllNumber = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatAllNumber(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDate } from '../format/formatDate'\n/**\n * @desc 验证是否date格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDate = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDate(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDatetime } from '../format/formatDatetime'\n\n/**\n * @desc 验证是否dateTime格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDatetime = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDatetime(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatEmail } from '../format/formatEmail'\n\n/**\n * @desc 验证是否电子邮箱格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateEmail = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 30\n) => {\n  const field = '电子邮箱'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatEmail(validateValue)) {\n      if (validateValue.length <= min || validateValue.length >= max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请填写正确的${field}`))\n    }\n  }\n}\n","/**\n * @desc 验证后的错误信息\n * @param {*} fields\n */\nexport const validateErrMsg = (fields: Record<string | number | symbol, any>) =>\n  fields[Object.keys(fields)[0]][0].message\n","import { formatMobile } from '../format/formatMobile'\n/**\n * @desc 验证是否手机号码格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} action\n */\nexport const validateMobile = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  action = '填写'\n) => {\n  const field = '手机号码'\n  const number = 11\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatMobile(validateValue)) {\n      if (validateValue.length !== number) {\n        callback(new Error(`${field}为${number}个字符`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请${action}正确的${field}`))\n    }\n  }\n}\n","import { formatPrice } from '../format/formatPrice'\n\n/**\n * @desc 验证是否价格格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validatePrice = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '价格',\n  action = '填写',\n  min = 1,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatPrice(validateValue)) {\n      if (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max)) {\n        callback(\n          new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n        )\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}只能是数字（最多2位小数）`))\n    }\n  }\n}\n","/**\n * @desc 验证是否已填\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateRequire = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field: string,\n  action = '填写',\n  min: number,\n  max: number\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (\n      min &&\n      max &&\n      (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max))\n    ) {\n      callback(\n        new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n      )\n    } else {\n      callback()\n    }\n  }\n}\n","import { formatUsername } from '../format/formatUsername'\n\n/**\n * @desc 验证是否用户名格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateUsername = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 20\n) => {\n  const field = '用户名'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatUsername(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(\n        new Error(\n          `${field}必须是以字母为开头，由字母、数字、减号、点、下划线组成`\n        )\n      )\n    }\n  }\n}\n"],"names":["addressBarCurrent","location","href","addressBarFilePath","pathname","addressBarFrom","document","referrer","addressBarHash","hash","slice","addressBarHttp","protocol","addressBarHost","host","addressBarHead","addressBarName","hostname","addressBarPort","port","addressBarQuery","search","substr","typeDate","typeValue","Date","isNaN","getTime","typeNumber","typeString","Object","prototype","toString","call","toLowerCase","formatAllNumber","string","test","String","timeNewDate","timeValue","theNewDate","theTime","replace","length","H_YM","H_YM_ABBR","H_DATE","H_DATE_ABBR","H_MH","H_DATETIME","H_DATETIME_ABBR","H_H_I","H_M_D_H_I","H_Y_M_D_H_I","T_YM","T_YM_ABBR","T_DATE","T_DATE_ABBR","T_MH","T_DATETIME","T_DATETIME_ABBR","T_H_I","T_M_D_H_I","T_Y_M_D_H_I","timeObject","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","w","getDay","timeFormat","format","zero","theObject","result","key","padStart","dateApart","dateValue","number","someWhetherLeapYear","year","someFebruaryDays","someYearMonthDays","month","dateApartMonth","totalMonths","day","Math","floor","monthDays","dateApartMonthList","array","big","abs","push","Y","M","dateDifference","dateOne","dateTwo","oneObject","twoObject","dateMonthFoot","dateMonthHead","timeGetYear","timeGetMonth","dateMonthNext","isResultArray","next","dateMonthPrev","apart","dateWeekSunday","week","dateOneWeek","sunday","dateOneMonth","monthFoot","oneWeek","theWeek","unshift","formatAllCn","formatDate","split","formatDatetime","date","time","formatDomain","formatEmail","formatExternal","formatHexColor","formatIdCard","formatImageBase","formatIp","a","b","c","formatMobile","formatPrice","formatTelephone","formatUrl","formatUsername","formatZip","someColorHexToRGB","hex","opacity","sHex","sColorNew","concat","sColorChange","parseInt","join","someColorRGBToHex","r","g","Array","someMaxZIndex","toFixed","somePluralize","unit","someRandomColor","ceil","random","timestamp","timeAgoCn","theTimestamp","diff","now","timeAgoEn","timeDifference","timeOne","timeTwo","oneNewDate","twoNewDate","timeGetDay","timeGetWeek","timeGetYearMonth","isArray","timeIsEarly","nowTime","nowNewDate","timeRelativeTime","theTimeStamp","nowTimeStamp","isEarly","dirStr","resStr","timeSecondBar","seconds","showMinutes","showHours","showDays","showSeconds","last","timeShort","nowObject","oneDaySeconds","timeStampIsMillisecond","typeArray","typeBoolean","typeFunction","typeRegexp","typeEmpty","JSON","stringify","typeFloat","typeHTMLElement","createElement","appendChild","cloneNode","nodeType","e","window","typeInt","typeIntMinus","typeIntPositive","typeObject","typeSymbol","uniCodeDecode","decodeURI","uniCodeEncode","charCodeAt","validateAllCn","rule","validateValue","callback","field","min","max","Error","validateAllNumber","action","validateDate","validateDatetime","validateEmail","validateErrMsg","fields","keys","message","validateMobile","validatePrice","validateRequire","validateUsername"],"mappings":"AAIa,MAAAA,EAAoB,IAAcC,SAASC,KCA3CC,EAAqB,IAAcF,SAASG,SCA5CC,EAAiB,IAAcC,SAASC,SCAxCC,EAAiB,IAAcP,SAASQ,KAAKC,MAAM,GCAnDC,EAAiB,IACG,WAA/BL,SAASL,SAASW,SAAwB,WAAa,UCD5CC,EAAiB,IAAcZ,SAASa,KCExCC,EAAiB,IAC5B,GAAGJ,SAAsBE,MCHdG,EAAiB,IAAcf,SAASgB,SCAxCC,EAAiB,IAAcjB,SAASkB,KCAxCC,EAAkB,IAAcnB,SAASoB,OAAOC,OAAO,GCCvDC,EAAYC,GAAmBA,aAAqBC,OAASC,MAAMF,EAAUG,WCA7EC,EAAcJ,GACJ,iBAAdA,IAA4BE,MAAMF,IAAmC,iBAAdA,ECCnDK,EAAcL,GACmC,oBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,eAC1CN,EAAWJ,GCJAW,EAAmBC,GAC9B,WAAWC,KAAKC,OAAOF,ICIZG,EAAc,CAACC,EAAiB,IAAIf,QAC/C,GAAIe,EAAW,CACb,IAAIC,EACJ,GAAIlB,EAASiB,GACXC,EAAaD,MACR,CACL,IAAIE,EAAUF,EACVX,EAAWa,KACbA,EAAUP,EAAgBG,OAAOI,IAC7BA,EACAJ,OAAOI,GAASC,QAAQ,UAAW,MAErCf,EAAWc,IAAuC,KAA3BJ,OAAOI,GAASE,SACzCF,GAAW,KAEbD,EAAab,EAAWc,GAAW,IAAIjB,MAAMiB,GAAW,IAAIjB,KAAKa,OAAOI,IAE1E,OAAOnB,EAASkB,GAAcA,EAAa,KAE3C,OAAO,IAAIhB,MC3BFoB,EAAO,UACPC,EAAY,SACZC,EAAS,cACTC,EAAc,YACdC,EAAO,aACPC,EAAa,0BACbC,EAAkB,qBAClBC,EAAQ,UACRC,EAAY,kBACZC,EAAc,sBACdC,EAAO,UACPC,EAAY,SACZC,EAAS,aACTC,EAAc,WACdC,EAAO,aACPC,EAAa,sBACbC,EAAkB,iBAClBC,EAAQ,QACRC,EAAY,cACZC,EAAc,mBCddC,EAAa,CACxBzB,EAAiB,IAAIf,QAErB,MAAMgB,EAAaF,EAAYC,GAC/B,OAAsB,OAAfC,EACH,CACAyB,EAAGzB,EAAW0B,cACdC,EAAG3B,EAAW4B,WAAa,EAC3BC,EAAG7B,EAAW8B,UACdC,EAAG/B,EAAWgC,WACdC,EAAGjC,EAAWkC,aACdC,EAAGnC,EAAWoC,aACdC,EAAGrC,EAAWsC,UAEd,MCXOC,EAAa,CACxBxC,EAAiB,IAAIf,KACrBwD,EAAiB/B,EACjBgC,GAAgB,KAEhB,MAAMC,EAAwBlB,EAAZzB,GAA+C,IAAIf,MACrE,OAAkB,OAAd0D,EACKF,EAAOtC,QAAQ,mBAAmB,CAACyC,EAAQC,KAChD,MAAM7C,EAAY2C,EAAUE,GAC5B,MAAe,MAARA,EACH,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK7C,GACpC0C,EACE5C,OAAOE,GAAW8C,SAAS,EAAG,KAC9BhD,OAAOE,MAGR,MChBE+C,EAAY,CAACC,EAAgBC,KACxC,MAAMhD,EAAaF,EAAYiD,GAC/B,OAAO/C,EACHuC,MAAevC,EAAa,KAAiB,GAATgD,EAAc,GAAK,GHTvC,eGSmD,GACnE,MCTOC,EAAuBC,IAChCA,EAAO,GAAM,IAAMA,EAAO,KAAQ,IAAOA,EAAO,KAAQ,ECC/CC,EAAoBD,GAC/BD,IAAsBpD,OAAOqD,IAAS,GAAK,GCAhCE,EAAoB,CAC/BF,EACAG,IAEkB,CAAC,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC7DxD,OAAOwD,GAAS,IAEAF,IAAmBtD,OAAOqD,ICNnCI,EAAiB,CAACP,EAAiB,IAAI/D,KAAQgE,KAC1D,MAAMN,EAAYlB,EAAWuB,GAC7B,GAAIL,EAAW,CACb,MAAMa,EAA6B,IAAdb,EAAUjB,IAAUiB,EAAUf,IAAKqB,EACxD,IAAIQ,EAAMd,EAAUb,EAChBqB,EAAOO,KAAKC,MAAMH,EAAc,IAChCF,EAAQE,EAAc,GACZ,IAAVF,IACFH,GAAc,EACdG,EAAQ,IAEV,MAAMM,EAAYP,EAAkBF,EAAMG,GAC1CG,EAAMA,EAAMG,EAAYA,EAAYH,EAIpC,MAAO,GAHM3D,OAAOqD,GAAML,SAAS,EAAG,QACxBhD,OAAOwD,GAAOR,SAAS,EAAG,QAC5BhD,OAAO2D,GAAKX,SAAS,EAAG,OAGpC,OAAO,MCnBEe,EAAqB,CAChCb,EAAiB,IAAI/D,KACrBgE,KAEA,MAAMN,EAAYlB,EAAWuB,GAC7B,GAAIL,EAAW,CACb,IAAIjB,GAAK5B,OAAO6C,EAAUjB,GAAGoB,SAAS,EAAG,KACrClB,GAAK9B,OAAO6C,EAAUf,GAAGkB,SAAS,EAAG,KACzC,MAAMgB,EAAQ,GACRC,EAAMd,EAAS,EACrBA,EAASS,KAAKM,IAAIf,GAClBa,EAAMG,KAAK,GAAGvC,KAAKE,KACnB,IAAK,IAAIM,EAAI,EAAGA,GAAKe,EAAQf,IAAK,CAC5B6B,GACFnC,IACIA,GAAK,KACPF,GAAK,EACLE,EAAI,KAGNA,IACIA,GAAK,IACPF,GAAK,EACLE,EAAI,KAGR,MAAMsC,EAAI,GAAGxC,IAAIoB,SAAS,EAAG,KACvBqB,EAAI,GAAGvC,IAAIkB,SAAS,EAAG,KAC7BgB,EAAMG,KAAK,GAAGC,KAAKC,KAErB,OAAOL,EAEP,OAAO,MC/BEM,EAAiB,CAC5BC,EACAC,EACAN,KAEA,MAAMO,EAAYxE,EAAYsE,GACxBG,EAAYzE,EAAYuE,GAC9B,GAAIC,GAAaC,EAAW,CAC1BR,EAAMA,IAAO,EACb,MAAMpB,MACH2B,EAAUpF,UAAYqF,EAAUrF,WAChC,OAEH,OAAO6E,EAAMN,KAAKM,IAAIpB,GAAUA,EAEhC,OAAO,MCjBE6B,EAAgB,CAACzB,EAAiB,IAAI/D,QACjD,MAAM0D,EAAYlB,EAAWuB,GAC7B,GAAkB,OAAdL,EAAoB,CACtB,MAAMQ,EAAOrD,OAAO6C,EAAUjB,GAAGoB,SAAS,EAAG,KACvCQ,EAAQxD,OAAO6C,EAAUf,GAAGkB,SAAS,EAAG,KAE9C,MAAO,GAAGK,KAAQG,KADN,IAAIrE,MAAMkE,GAAOG,EAAO,GAAGvB,YAGvC,OAAO,MCNE2C,EAAgB,CAAC1B,EAAiB,IAAI/D,QACjD,MAAM0D,EAAY5C,EAAYiD,GAC9B,OAAOL,EAAYH,EAAWG,EXLZ,cWK6B,GAAQ,MCJ5CgC,EAAc,CAAC3E,EAAiB,IAAIf,QAC/C,MAAMiB,EAAUF,GAAa,IAAIA,EAC3B2C,EAAYlB,EAAWvB,GAC7B,OAAqB,OAAdyC,EAAqB7C,OAAO6C,EAAUjB,GAAGoB,SAAS,EAAG,KAAO,MCHxD8B,EAAe,CAAC5E,EAAiB,IAAIf,QAChD,MAAMiB,EAAUF,GAAa,IAAIA,EAC3B2C,EAAYlB,EAAWvB,GAC7B,OAAqB,OAAdyC,EAAqB7C,OAAO6C,EAAUf,GAAGkB,SAAS,EAAG,KAAO,MCExD+B,EAAgB,CAC3B7B,EAAiB,IAAI/D,KACrB6F,KAGA,GAAkB,OADA/E,EAAYiD,GACN,CACtB,MAAM+B,EAAOhC,EAAU0B,EAAczB,GAAY,GAC3CG,EAAOwB,EAAYI,GACnBzB,EAAQsB,EAAaG,GAE3B,OADAD,EAAgBA,IAAiB,GACV,CAAC3B,EAAMG,GAAS,GAAGH,KAAQG,IAElD,OAAO,MCZE0B,EAAgB,CAC3BhC,EAAiB,IAAI/D,KACrB6F,KAGA,GADkB/E,EAAYiD,GACf,CACb,MAAMiC,EAAQlC,EAAU2B,EAAc1B,IAAa,GAC7CG,EAAOwB,EAAYM,GACnB3B,EAAQsB,EAAaK,GAE3B,OADAH,EAAgBA,IAAiB,GACV,CAAC3B,EAAMG,GAAS,GAAGH,KAAQG,IAElD,OAAO,MChBE4B,EAAiB,CAAClC,EAAiB,IAAI/D,QAClD,MAAMgB,EAAaF,EAAYiD,GAC/B,GAAmB,OAAf/C,EAAqB,CACvB,MAAMkF,EAAOlF,EAAWsC,SAExB,OAAOQ,EAAU9C,EADL,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACJkF,IAEjC,OAAO,MCNEC,EAAc,CAACpC,EAAiB,IAAI/D,QAE/C,GAAkB,OADAc,EAAYiD,GACN,CACtB,MAAMc,EAAQ,GACRuB,EAASH,EAAelC,GAC9B,IAAK,IAAId,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM+C,EAAQlC,EAAUsC,EAAQnD,GAChC4B,EAAMG,KAAKgB,GAEb,OAAOnB,EAEP,OAAO,MCVEwB,EAAe,CAACtC,EAAiB,IAAI/D,QAChD,MAAM0D,EAAY5C,EAAYiD,GAC9B,GAAIL,EAAW,CACb,MAAMmB,EAAQ,GACRyB,EAAYd,EAAczB,GAC1BwC,EAAUJ,EAAYG,GAC5BzB,EAAMG,KAAKuB,GACX,IAAK,IAAItD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM+C,EAAQlC,EAAUyC,EAAQ,KAAU,EAAJtD,EAAQ,IAC9C,GAAI,IAAIjD,KAAKa,OAAOmF,IAAQpD,WAAa,IAAMc,EAAUd,WAAa,EACpE,MAEF,MAAM4D,EAAUL,EAAYH,GAC5BnB,EAAM4B,QAAQD,GAEhB,OAAO3B,EAEP,OAAO,MCtBE6B,EAAe/F,GAC1B,sBAAsBC,KAAKC,OAAOF,ICCvBgG,GAAchG,IACzB,GAAI,4BAA4BC,KAAKC,OAAOF,IAAU,CACpD,MAAO8B,EAAGE,EAAGE,GAAKlC,EAAOiG,MAAM,KAC/B,OAAQjE,EAAI,IAAMA,GAAK,KAAOE,EAAI,IAAMA,GAAKuB,EAAkB3B,EAAGE,GAElE,OAAO,GCLEkE,GAAkBlG,IAC7B,GAAI,oDAAoDC,KAAKC,OAAOF,IAAU,CAC5E,MAAOmG,EAAMC,GAAQpG,EAAOiG,MAAM,MAC3B7D,EAAGJ,EAAGQ,GAAK4D,EAAKH,MAAM,KAC7B,OAAOD,GAAWG,KAAU/D,EAAI,KAAOJ,EAAI,KAAOQ,EAAI,GAEtD,OAAO,GCRE6D,GAAgBrG,GAC3B,2CAA2CC,KAAKC,OAAOF,ICD5CsG,GAAetG,GAC1B,2DAA2DC,KAAKC,OAAOF,ICD5DuG,GAAkBvG,GAC7B,0BAA0BC,KAAKC,OAAOF,ICD3BwG,GAAkBxG,GACjB,qCACDC,KAAKD,GCFLyG,GAAgBzG,GAC3B,gCAAgCC,KAAKC,OAAOF,ICDjC0G,GAAmB1G,GAC9B,8CAA8CC,KAAKC,OAAOF,ICA/C2G,GAAY3G,IACvB,GAAI,+BAA+BC,KAAKC,OAAOF,IAAU,CACvD,MAAO4G,EAAGC,EAAGC,EAAG5E,GAAKlC,EAAOiG,MAAM,KAClC,OAAQW,EAAI,MAAQC,EAAI,MAAQC,EAAI,MAAQ5E,EAAI,IAEhD,OAAO,GCNE6E,GAAgB/G,GAC3B,gCAAgCC,KAAKC,OAAOF,ICDjCgH,GAAehH,GAC1B,kBAAkBC,KAAKC,OAAOF,ICDnBiH,GAAmBjH,GAC9B,mBAAmBC,KAAKC,OAAOF,ICDpBkH,GAAalH,GACxB,2DAA2DC,KAAKC,OAAOF,ICD5DmH,GAAkBnH,GAC7B,oCAAoCC,KAAKC,OAAOF,ICDrCoH,GAAapH,GACxB,UAAUC,KAAKC,OAAOF,ICEXqH,GAAoB,CAACC,EAAaC,EAAU,KACvD,IAAIC,EAAOF,EAAIxH,cACf,GAAI0G,GAAec,GAAM,CACvB,GAAoB,IAAhBE,EAAKhH,OAAc,CACrB,IAAIiH,EAAY,IAChB,IAAK,IAAInF,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BmF,GAAaD,EAAKlJ,MAAMgE,EAAGA,EAAI,GAAGoF,OAAOF,EAAKlJ,MAAMgE,EAAGA,EAAI,IAE7DkF,EAAOC,EAET,MAAME,EAAe,GACrB,IAAK,IAAIrF,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BqF,EAAatD,KAAKuD,SAAS,KAAOJ,EAAKlJ,MAAMgE,EAAGA,EAAI,KAEtD,OAAOiF,EACH,QAAUI,EAAaE,KAAK,KAAO,IAAM3H,OAAOqH,GAAW,IAC3D,OAASI,EAAaE,KAAK,KAAO,IAExC,OAAOL,GCnBIM,GAAoB,CAACC,EAAWC,EAAWnB,KACtD,MAAMS,GAAQS,GAAK,GAAOC,GAAK,EAAKnB,GAAGjH,SAAS,IAChD,MAAO,IAAM,IAAIqI,MAAMnE,KAAKM,IAAIkD,EAAI9G,OAAS,IAAIqH,KAAK,KAAOP,GCLlDY,GAAgB,QACxB,IAAI7I,MAAOE,UAAY,KAAM4I,QAAQ,GCC7BC,GAAgB,CAAC/E,EAAgBgF,IACjC,IAAXhF,EAAeA,EAASgF,EAAOhF,EAASgF,EAAO,ICHpCC,GAAkB,KAC7B,MAAMpE,EAAQ,CACZ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF,IAAIlE,EAAS,GACb,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BtC,GAAUkE,EADCJ,KAAKyE,KAAqB,GAAhBzE,KAAK0E,WAG5B,MAAO,IAAMxI,GCrBFyI,GAAY,CAACrI,EAAiB,IAAIf,QAC7C,MAAMgB,EAAaD,EAAYD,EAAYC,GAAa,IAAIf,KAC5D,OAAOgB,KAAgBA,EAAWd,UAAY,KAAM4I,QAAQ,GAAK,MCEtDO,GAAY,CACvBtI,EAAiB,IAAIf,KACrBwD,EAAiB/B,EACjBgC,GAAgB,KAEhB,MAAM6F,EAAeF,GAAUrI,GAC/B,GAAqB,OAAjBuI,EAAuB,CACzB,MACMC,KADkBvJ,KAAKwJ,MAAQ,KACTF,EAC5B,OAAOC,EAAO,GACV,KACAA,EAAO,QACFA,EAAO,IAAM,MAChBA,EAAO,SACFA,EAAO,MAAQ,MAClBA,EAAO,UACFA,EAAO,OAAS,KACnBhG,EAAWxC,EAAWyC,EAAQC,GAExC,OAAO,MClBEgG,GAAY,CACvB1I,EAAiB,IAAIf,KACrBwD,EAAiB/B,EACjBgC,GAAgB,KAEhB,MAAM6F,EAAeF,GAAUrI,GAC/B,GAAqB,OAAjBuI,EAAuB,CACzB,MACMC,KADkBvJ,KAAKwJ,MAAQ,KACTF,EAC5B,OAAOC,EAAO,GACV,MACAA,EAAO,KACLR,MAAiBQ,EAAO,IAAK,WAAa,MAC1CA,EAAO,MACLR,MAAiBQ,EAAO,MAAO,SAAW,MAC1CA,EAAO,OACLR,MAAiBQ,EAAO,OAAQ,QAAU,MAC1ChG,EAAWxC,EAAWyC,EAAQC,GAExC,OAAO,MCtBEiG,GAAiB,CAC5BC,EACAC,EACA7E,GAAe,KAEf,MAAM8E,EAAa/I,EAAY6I,GACzBG,EAAahJ,EAAY8I,GAC/B,GAAmB,OAAfC,GAAsC,OAAfC,EAAqB,CAC9C,MAAMnG,MAAakG,EAAW3J,UAAY4J,EAAW5J,WAAa,KAClE,OAAO6E,EAAMN,KAAKM,IAAIpB,GAAUA,EAEhC,OAAO,MCbEoG,GAAa,CAAChJ,EAAiB,IAAIf,QAC9C,MAAMiB,EAAUF,GAAa,IAAIf,KAC3B0D,EAAYlB,EAAWvB,GAC7B,OAAqB,OAAdyC,EAAqB7C,OAAO6C,EAAUb,GAAGgB,SAAS,EAAG,KAAO,MCHxDmG,GAAc,CAACjJ,EAAiB,IAAIf,QAC/C,MAAMiB,EAAUF,GAAa,IAAIA,EAC3B2C,EAAYlB,EAAWvB,GAC7B,OAAqB,OAAdyC,EAAqBA,MAAAA,OAAS,EAATA,EAAWL,EAAI,MCFhC4G,GAAmB,CAAClJ,EAAiB,IAAIf,KAAQkK,GAAmB,KAC/E,MAAMjJ,EAAUF,GAAa,IAAIA,EAC3B2C,EAAYlB,EAAWvB,GAC7B,OAAoB,MAAbyC,EACL,KAAOwG,EACL,CAACxG,EAAUjB,EAAGiB,EAAUf,GAAK,GAAG9B,OAAO6C,EAAUjB,GAAGoB,SAAS,EAAG,QAAQhD,OAAO6C,EAAUf,GAAGkB,SAAS,EAAG,QCNjGsG,GAAc,CAAClJ,EAAcmJ,KACxC,MAAMpJ,EAAaF,EAAYG,GACzBoJ,EAAavJ,EAAYsJ,IAAY,IAAIpK,KAC/C,GAAmB,OAAfgB,GAAsC,OAAfqJ,EAAqB,CAG9C,OAFqBrJ,EAAWd,UACXmK,EAAWnK,UAGhC,OAAO,MCNEoK,GAAmB,CAACvJ,EAAiB,IAAIf,QACpD,MAAMuK,EAAenB,GAAUrI,GAC/B,GAAIwJ,EAAc,CAChB,MAAMC,EAAe/F,KAAKC,MAAM1E,KAAKwJ,MAAQ,KACvCiB,EAAUN,GAAYI,EAAcC,GAC1C,IAAIjB,EAAOiB,EAAeD,EACrBE,IAEHlB,GAAQA,GAEV,MAAMmB,EAASD,EAAU,IAAM,IAC/B,IAAIE,EAmBJ,OAhBEA,EAFEpB,GAAQ,GAEDA,EAAO,IAAMmB,EACbnB,EAAO,IAAMA,GAAQ,KAErB9E,KAAKC,MAAM6E,EAAO,IAAM,KAAOmB,EAC/BnB,EAAO,MAAQA,GAAQ,MAEvB9E,KAAKC,MAAM6E,EAAO,MAAQ,KAAOmB,EACjCnB,EAAO,OAASA,GAAQ,QAExB9E,KAAKC,MAAM6E,EAAO,OAAS,IAAMmB,EAGjCnH,EAAWgH,EAFXhB,EAAO,SAAWA,GAAQ,UAAYkB,EhDvB5B,kBgD2BehJ,GAFW,GAIxCkJ,EAEP,OAAO,MCpCEC,GAAiBC,IAC5B,IAAIC,EAAc,EACdC,EAAY,EACZC,EAAW,EACf,MAAMC,MAAkBJ,EAAU,IAC9BA,EAAU,KACZC,MAAkBD,EAAU,KAE1BC,EAAc,KAChBC,KAAeD,EAAc,KAE/BA,KAAiBA,EAAc,IAC3BC,EAAY,KACdC,KAAcD,EAAY,KAE5BA,KAAeA,EAAY,IAC3B,MAGMG,EAAO,GAHQrK,OAAOkK,GAAWlH,SAAS,EAAG,QAC5BhD,OAAOiK,GAAajH,SAAS,EAAG,QAChChD,OAAOoK,GAAapH,SAAS,EAAG,OAEvD,OAAoB,IAAbmH,EAAiBE,EAAO,GAAGF,KAAYE,KCfnCC,GAAY,CAACpK,EAAiB,IAAIf,QAC7C,MAAM0D,EAAwBlB,EAAZzB,GAA+C,IAAIf,MACrE,GAAkB,OAAd0D,EAAoB,CACtB,MAAM0H,EAAY5I,EAAW,IAAIxC,MAC3BoF,EAAU,GAAG1B,MAAAA,OAAS,EAATA,EAAWjB,KAAKiB,MAAAA,OAAS,EAATA,EAAWf,KAAKe,MAAAA,OAAS,EAATA,EAAWb,IACxDwC,EAAU,GAAG+F,MAAAA,OAAS,EAATA,EAAW3I,KAAK2I,MAAAA,OAAS,EAATA,EAAWzI,KAAKyI,MAAAA,OAAS,EAATA,EAAWvI,IACxD0G,GAASG,GAAetE,EAASC,GAAS,GAC1CgG,EAAgB,MACtB,OAAO9B,IAAyB,EAAhB8B,EACZ,MAAQ9H,EAAWxC,EAAWY,GAAO,GACrC4H,IAAS8B,EACP,MAAQ9H,EAAWxC,EAAWY,GAAO,GAC5B,IAAT4H,EACEhG,EAAWxC,EAAWY,GAAO,GAC7B4H,KAAU8B,EACR,MAAQ9H,EAAWxC,EAAWY,GAAO,GACrC4H,IAA0B,GAAhB8B,EACR,MAAQ9H,EAAWxC,EAAWY,GAAO,GACrC+B,EAAUjB,KAAM2I,MAAAA,OAAA,EAAAA,EAAW3I,GACzBc,EAAWxC,EAAWY,GAAO,GAC7B4B,EAAWxC,ElDnBF,uBkDmB0B,GAEjD,OAAO,MC3BEuK,GAA0BlC,GAAsBvI,OAAOuI,GAAWjI,OAAS,GCA3EoK,GAAaxL,GACoC,mBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCD/B+K,GAAezL,GACkC,qBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCD/BgL,GAAgB1L,GACiC,sBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCD/BiL,GAAc3L,GACmC,oBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCC/BkL,GAAa5L,KACvB0L,GAAa1L,IACb2L,GAAW3L,IACE,MAAbA,GACe,cAAdA,GACqB,IAArBA,EAAUoB,QACoB,OAA9ByK,KAAKC,UAAU9L,ICPN+L,GAAa/L,GACxBI,EAAWJ,IAAcA,EAAY,GAAM,ECFhCgM,GAAmBhM,IAC9B,MAAM8C,EAAIhE,SAASmN,cAAc,OACjC,IAEE,OADAnJ,EAAEoJ,YAAYlM,EAAUmM,WAAU,IACJ,IAAvBnM,EAAUoM,SACjB,MAAOC,GACP,OAAOrM,IAAcsM,QAAUtM,IAAclB,WCLpCyN,GAAWvM,GACtBI,EAAWJ,IAAcA,EAAY,GAAM,ECDhCwM,GAAgBxM,GAA4BuM,GAAQvM,IAAcA,EAAY,ECA9EyM,GAAmBzM,GAC9BuM,GAAQvM,IAAcA,EAAY,ECFvB0M,GAAc1M,GACmC,oBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCD/BiM,GAAc3M,GACmC,oBAA5DM,OAAOC,UAAUC,SAASC,KAAKT,GAAWU,cCD/BkM,GAAiBhM,GAC5BiM,UAAUjM,EAAOO,QAAQ,MAAO,MCDrB2L,GAAiBlM,IAC5B,MAAMkE,EAAQ,GACd,IAAK,IAAI5B,EAAI,EAAGA,EAAItC,EAAOQ,OAAQ8B,IACjC4B,EAAM5B,IAAM,KAAOtC,EAAOmM,WAAW7J,GAAG1C,SAAS,KAAKtB,OAAO,GAE/D,MAAO,MAAQ4F,EAAM2D,KAAK,QCCfuE,GAAgB,CAC3BC,EACAC,EACAC,EACAC,EAAQ,KACRC,EAAM,EACNC,EAAM,MAEDJ,GAA0C,IAAzBA,EAAc9L,OAG9BuF,EAAYuG,GACVA,EAAc9L,OAASiM,GAAOH,EAAc9L,OAASkM,EACvDH,EAAS,IAAII,MAAM,GAAGH,KAASC,KAAOC,WAEtCH,IAGFA,EAAS,IAAII,MAAM,GAAGH,YATxBD,EAAS,IAAII,MAAM,GAAGH,WCVbI,GAAoB,CAC/BP,EACAC,EACAC,EACAC,EAAQ,KACRK,EAAS,QAEJP,GAA0C,IAAzBA,EAAc9L,OAG9BT,EAAgBuM,GAClBC,IAEAA,EAAS,IAAII,MAAM,GAAGH,WALxBD,EAAS,IAAII,MAAM,GAAGH,MAAUK,OCTvBC,GAAe,CAC1BT,EACAC,EACAC,EACAC,EAAQ,KACRK,EAAS,QAEJP,GAA0C,IAAzBA,EAAc9L,OAG9BwF,GAAWsG,GACbC,IAEAA,EAAS,IAAII,MAAM,GAAGH,WALxBD,EAAS,IAAII,MAAM,GAAGH,MAAUK,OCPvBE,GAAmB,CAC9BV,EACAC,EACAC,EACAC,EAAQ,KACRK,EAAS,QAEJP,GAA0C,IAAzBA,EAAc9L,OAG9B0F,GAAeoG,GACjBC,IAEAA,EAAS,IAAII,MAAM,GAAGH,WALxBD,EAAS,IAAII,MAAM,GAAGH,MAAUK,OCRvBG,GAAgB,CAC3BX,EACAC,EACAC,EACAE,EAAM,EACNC,EAAM,MAGDJ,GAA0C,IAAzBA,EAAc9L,OAG9B8F,GAAYgG,GACVA,EAAc9L,QAAUiM,GAAOH,EAAc9L,QAAUkM,EACzDH,EAAS,IAAII,MAAM,QAAYF,KAAOC,WAEtCH,IAGFA,EAAS,IAAII,MAAM,eATrBJ,EAAS,IAAII,MAAM,cCfVM,GAAkBC,GAC7BA,EAAOxN,OAAOyN,KAAKD,GAAQ,IAAI,GAAGE,QCGvBC,GAAiB,CAC5BhB,EACAC,EACAC,EACAM,EAAS,QAIJP,GAA0C,IAAzBA,EAAc9L,OAG9BuG,GAAauF,GAJJ,KAKPA,EAAc9L,OAChB+L,EAAS,IAAII,MAAM,eAEnBJ,IAGFA,EAAS,IAAII,MAAM,IAAIE,aATzBN,EAAS,IAAII,MAAM,SAAaE,OCLvBS,GAAgB,CAC3BjB,EACAC,EACAC,EACAC,EAAQ,KACRK,EAAS,KACTJ,EAAM,EACNC,EAAM,MAEDJ,GAA0C,IAAzBA,EAAc9L,OAG9BwG,GAAYsF,GACVA,EAAc9L,SAAWsD,KAAKM,IAAIqI,IAAQH,EAAc9L,SAAWsD,KAAKM,IAAIsI,GAC9EH,EACE,IAAII,MAAM,GAAGH,OAAW1I,KAAKM,IAAIqI,QAAU3I,KAAKM,IAAIsI,YAGtDH,IAGFA,EAAS,IAAII,MAAM,GAAGH,mBAXxBD,EAAS,IAAII,MAAM,GAAGH,MAAUK,OCZvBU,GAAkB,CAC7BlB,EACAC,EACAC,EACAC,EACAK,EAAS,KACTJ,EACAC,KAEKJ,GAA0C,IAAzBA,EAAc9L,OAIhCiM,GACAC,IACCJ,EAAc9L,SAAWsD,KAAKM,IAAIqI,IAAQH,EAAc9L,SAAWsD,KAAKM,IAAIsI,IAE7EH,EACE,IAAII,MAAM,GAAGH,OAAW1I,KAAKM,IAAIqI,QAAU3I,KAAKM,IAAIsI,YAGtDH,IAXFA,EAAS,IAAII,MAAM,GAAGH,MAAUK,OCVvBW,GAAmB,CAC9BnB,EACAC,EACAC,EACAE,EAAM,EACNC,EAAM,MAGDJ,GAA0C,IAAzBA,EAAc9L,OAG9B2G,GAAemF,GACbA,EAAc9L,OAASiM,GAAOH,EAAc9L,OAASkM,EACvDH,EAAS,IAAII,MAAM,OAAYF,KAAOC,WAEtCH,IAGFA,EACE,IAAII,MACF,mCAXNJ,EAAS,IAAII,MAAM"}