{"version":3,"file":"bundle.cjs.js","sources":["../src/addressBar/addressBarCurrent.ts","../src/addressBar/addressBarHttp.ts","../src/addressBar/addressBarHost.ts","../src/format/formatAllCn.ts","../src/format/formatAllNumber.ts","../src/some/someWhetherLeapYear.ts","../src/some/someFebruaryDays.ts","../src/some/someYearMonthDays.ts","../src/format/formatDate.ts","../src/format/formatDatetime.ts","../src/format/formatEmail.ts","../src/format/formatHexColor.ts","../src/format/formatMobile.ts","../src/format/formatPrice.ts","../src/format/formatUsername.ts","../src/some/somePluralize.ts","../src/time/timeText.ts","../src/type/typeDate.ts","../src/type/typeNumber.ts","../src/type/typeString.ts","../src/time/timeNewDate.ts","../src/time/timeObject.ts","../src/time/timeFormat.ts","../src/time/timestamp.ts","../src/time/timeDifference.ts","../src/time/timeIsEarly.ts","../src/type/typeFunction.ts","../src/type/typeRegexp.ts","../src/type/typeInt.ts","../src/addressBar/addressBarFilePath.ts","../src/addressBar/addressBarFrom.ts","../src/addressBar/addressBarHash.ts","../src/addressBar/addressBarHead.ts","../src/addressBar/addressBarName.ts","../src/addressBar/addressBarPort.ts","../src/addressBar/addressBarQuery.ts","../src/format/formatDomain.ts","../src/format/formatExternal.ts","../src/format/formatIdCard.ts","../src/format/formatImageBase.ts","../src/format/formatIp.ts","../src/format/formatTelephone.ts","../src/format/formatUrl.ts","../src/format/formatZip.ts","../src/some/someColorHexToRGB.ts","../src/some/someColorRGBToHex.ts","../src/some/someMaxZIndex.ts","../src/some/someRandomColor.ts","../src/time/timeAgoCn.ts","../src/time/timeAgoEn.ts","../src/time/timeGetDay.ts","../src/time/timeGetMonth.ts","../src/time/timeGetWeek.ts","../src/time/timeGetYear.ts","../src/time/timeGetYearMonth.ts","../src/time/timeRelativeTime.ts","../src/time/timeSecondBar.ts","../src/time/timeShort.ts","../src/time/timeStampIsMillisecond.ts","../src/type/typeArray.ts","../src/type/typeBoolean.ts","../src/type/typeEmpty.ts","../src/type/typeFloat.ts","../src/type/typeHTMLElement.ts","../src/type/typeIntMinus.ts","../src/type/typeIntPositive.ts","../src/type/typeObject.ts","../src/type/typeSymbol.ts","../src/uniCode/uniCodeDecode.ts","../src/uniCode/uniCodeEncode.ts","../src/validate/validateAllCn.ts","../src/validate/validateAllNumber.ts","../src/validate/validateDate.ts","../src/validate/validateDatetime.ts","../src/validate/validateEmail.ts","../src/validate/validateErrMsg.ts","../src/validate/validateMobile.ts","../src/validate/validatePrice.ts","../src/validate/validateRequire.ts","../src/validate/validateUsername.ts"],"sourcesContent":["/**\n * @description 获取当前网址\n * @returns {string}\n */\nexport const addressBarCurrent = (): string => location.href\n","/**\n * @description 获取http(s)\n * @returns {string}\n */\nexport const addressBarHttp = (): string =>\n  document.location.protocol === 'https:' ? 'https://' : 'http://'\n","/**\n * @description 获取域名:端口\n * @returns {string}\n */\nexport const addressBarHost = (): string => location.host\n","/**\n * @description 是否全中文格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllCn = (string: string): boolean =>\n  /^[\\u4e00-\\u9fa5]+$/i.test(String(string))\n","/**\n * @description 是否全数字格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllNumber = (string: string): boolean =>\n  /^[0-9]+$/.test(String(string))\n","/**\n * @description 是否闰年\n * @param {Number} year\n * @returns {Boolean}\n */\nexport const someWhetherLeapYear = (year: number | string) =>\n  (+year % 4 === 0 && +year % 100 !== 0) || +year % 400 === 0\n","import { someWhetherLeapYear } from './someWhetherLeapYear'\n\n/**\n * @description 二月的天数\n * @param {Number} year\n * @returns {Number}\n */\nexport const someFebruaryDays = (year: number | string) =>\n  someWhetherLeapYear(~~String(year)) ? 29 : 28\n","import { someFebruaryDays } from './someFebruaryDays'\n\n/**\n * @description 某年某月的月天数\n * @param {Number} year\n * @param {Number} month\n * @returns {Number}\n */\nexport const someYearMonthDays = (\n  year: number | string,\n  month: number | string\n) => {\n  const monthDays = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][\n    ~~String(month) - 1\n  ]\n  return monthDays || someFebruaryDays(~~String(year))\n}\n","import { someYearMonthDays } from '../some/someYearMonthDays'\n\n/**\n * @description 是否 date 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDate = (string: string): boolean => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2})$/.test(String(string))) {\n    const [y, m, d] = string.split('-')\n    return +m > 0 && +m <= 12 && +d > 0 && +d <= someYearMonthDays(y, m)\n  } else {\n    return false\n  }\n}\n","import { formatDate } from './formatDate'\n\n/**\n * @description 是否 dateTime 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDatetime = (string: string) => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/.test(String(string))) {\n    const [date, time] = string.split(' ')\n    const [h, m, s] = time.split('-')\n    return formatDate(date) && +h < 24 && +m < 60 && +s < 60\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 email格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatEmail = (string: string): boolean =>\n  /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/i.test(String(string))\n","/**\n * @description 是否十六进制颜色的格式\n * @param {string} string\n * @returns {boolean}\n */\nexport const formatHexColor = (string: string) => {\n  const reg = /^#([0-9a-fA-F]{3}|[0-9a-fA-f]{6})$/\n  return reg.test(string)\n}\n","/**\n * @description 是否 mobile 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatMobile = (string: string): boolean =>\n  /^(13|14|15|16|17|18)[0-9]{9}$/.test(String(string))\n","/**\n * @description 是否 price 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatPrice = (string: string): boolean =>\n  /^\\d+\\.?\\d{0,2}$/.test(String(string))\n","/**\n * @description 是否 username 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUsername = (string: string): boolean =>\n  /^[a-z]+[a-z0-9]+[-_.]*[a-z0-9]+$/i.test(String(string))\n","/**\n * @description 如果值复数，则显示复数标签\n * @param {Number} number\n * @param {String} unit\n * @returns {String}\n */\nexport const somePluralize = (number: number, unit: string) =>\n  number === 1 ? number + unit : number + unit + 's'\n","// noinspection SpellCheckingInspection\n\nexport const H_YM = '{y}-{m}'\nexport const H_YM_ABBR = '{y}{m}'\nexport const H_DATE = '{y}-{m}-{d}'\nexport const H_DATE_ABBR = '{y}{m}{d}'\nexport const H_MH = '{y}-{m}-01'\nexport const H_DATETIME = '{y}-{m}-{d} {h}:{i}:{s}'\nexport const H_DATETIME_ABBR = '{y}{m}{d}{h}{i}{s}'\nexport const H_H_I = '{h}:{i}'\nexport const H_M_D_H_I = '{m}-{d} {h}:{i}'\nexport const H_Y_M_D_H_I = '{y}-{m}-{d} {h}:{i}'\nexport const T_YM = 'YYYY-MM'\nexport const T_YM_ABBR = 'YYYYMM'\nexport const T_DATE = 'YYYY-MM-DD'\nexport const T_DATE_ABBR = 'YYYYMMDD'\nexport const T_MH = 'YYYY-MM-01'\nexport const T_DATETIME = 'YYYY-MM-DD HH:mm:ss'\nexport const T_DATETIME_ABBR = 'YYYYMMDDHHmmss'\nexport const T_H_I = 'HH:mm'\nexport const T_M_D_H_I = 'MM-DD HH:mm'\nexport const T_Y_M_D_H_I = 'YYYY-MM-DD HH:mm'\n","/**\n * @description 是否date类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeDate = (typeValue: any) => typeValue instanceof Date && !isNaN(typeValue.getTime())\n","/**\n * @description 是否number类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeNumber = (typeValue: any): boolean =>\n  typeof typeValue === 'number' || (!isNaN(typeValue) && typeof typeValue === 'string')\n","import { typeNumber } from './typeNumber'\n\n/**\n * @description 是否string类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeString = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object string]' ||\n  typeNumber(typeValue)\n","import {typeDate} from '../type/typeDate'\nimport {typeNumber} from '../type/typeNumber'\nimport {typeString} from '../type/typeString'\nimport {formatAllNumber} from '../format/formatAllNumber'\n\n/**\n * @description 获取时间对象\n * @param {*} timeValue\n * @returns {Date|Null}\n */\nexport const timeNewDate = (timeValue: any = new Date()): Date => {\n  if (timeValue) {\n    let theNewDate\n    if (typeDate(timeValue)) {\n      theNewDate = timeValue\n    } else {\n      let theTime = timeValue\n      if (typeString(theTime)) {\n        theTime = formatAllNumber(String(theTime))\n          ? theTime\n          : String(theTime).replace(/[.|-]/gm, '/')\n      }\n      if (typeNumber(theTime) && String(theTime).length === 10) {\n        theTime *= 1000\n      }\n      theNewDate = typeNumber(theTime) ? new Date(+theTime) : new Date(String(theTime))\n    }\n    return typeDate(theNewDate) ? theNewDate : null\n  } else {\n    return new Date()\n  }\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间对象\n * @param {*} [timeValue]\n * @returns {{s: Number, d: Number, w: Number, h: Number, y: Number, i: Number, m: Number}|Null}\n */\nexport const timeObject = (\n  timeValue: any = new Date()\n): Record<string | number | symbol, any> | null => {\n  const theNewDate = timeNewDate(timeValue)\n  return theNewDate !== null\n    ? {\n      y: theNewDate.getFullYear(),\n      m: theNewDate.getMonth() + 1,\n      d: theNewDate.getDate(),\n      h: theNewDate.getHours(),\n      i: theNewDate.getMinutes(),\n      s: theNewDate.getSeconds(),\n      w: theNewDate.getDay()\n    }\n    : null\n}\n","import {H_DATETIME} from './timeText'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 时间格式化\n * @param {*} [timeValue]\n * @param {String} [format] 格式\n * @param {Boolean} [zero] 是否加零，默认加零\n * @returns {Null|String}\n */\nexport const timeFormat = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    return format.replace(/{([ymdhisw])+}/g, (result, key) => {\n      const timeValue = theObject[key]\n      return key === 'w'\n        ? ['日', '一', '二', '三', '四', '五', '六'][timeValue]\n        : zero\n          ? String(timeValue).padStart(2, '0')\n          : String(timeValue)\n    })\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间戳\n * @param {*} [timeValue]\n * @returns {Number|Null}\n */\nexport const timestamp = (timeValue: any = new Date()) => {\n  const theNewDate = timeValue ? timeNewDate(timeValue) : new Date()\n  return theNewDate ? ~~(theNewDate.getTime() / 1000).toFixed(0) : null\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 两个时间的时间差\n * @param {*} timeOne\n * @param {*} timeTwo\n * @param {Boolean} [abs] 绝对值\n * @returns {Number|Null}\n */\nexport const timeDifference = (\n  timeOne: any,\n  timeTwo: any,\n  abs: boolean = false\n): number | null => {\n  const oneNewDate = timeNewDate(timeOne)\n  const twoNewDate = timeNewDate(timeTwo)\n  if (oneNewDate !== null && twoNewDate !== null) {\n    const result = ~~((oneNewDate.getTime() - twoNewDate.getTime()) / 1000)\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import { timeNewDate } from './timeNewDate'\n\n/**\n * @param {*} theTime 传入的时间\n * @param {*} [nowTime] 当前时间时间\n * @returns {Boolean|Null} 传入的时间是否早于当前时间\n */\nexport const timeIsEarly = (theTime: any, nowTime: any): boolean | null => {\n  const theNewDate = timeNewDate(theTime)\n  const nowNewDate = timeNewDate(nowTime) || new Date()\n  if (theNewDate !== null && nowNewDate !== null) {\n    const theTimeStamp = theNewDate.getTime()\n    const nowTimeStamp = nowNewDate.getTime()\n    return theTimeStamp < nowTimeStamp\n  } else {\n    return null\n  }\n}\n","/**\n * @description 是否function类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFunction = (typeValue: unknown): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object function]'\n","/**\n * @description 是否regexp类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeRegexp = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object regexp]'\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否int类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeInt = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 === 0\n","/**\n * @description 获取页面所在路径\n * @returns {string}\n */\nexport const addressBarFilePath = (): string => location.pathname\n","/**\n * @description 获取页面的来源\n * @returns {string}\n */\nexport const addressBarFrom = (): string => document.referrer\n","/**\n * @description 获取网址#号后的参数\n * @returns {string}\n */\nexport const addressBarHash = (): string => location.hash.slice(1)\n","import { addressBarHttp } from './addressBarHttp'\nimport { addressBarHost } from './addressBarHost'\n/**\n * @description 获取http(s)://域名：端口\n * @returns {string}\n */\nexport const addressBarHead = (): string =>\n  `${addressBarHttp()} + ${addressBarHost()}`\n","/**\n * @description 获取域名\n * @returns {string}\n */\nexport const addressBarName = (): string => location.hostname\n","/**\n * @description 获取端口\n * @returns {string}\n */\nexport const addressBarPort = (): string => location.port\n","/**\n * @description 获取参数\n * @returns {string}\n */\nexport const addressBarQuery = (): string => location.search.substr(1)\n","/**\n * @description 是否 domain 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDomain = (string: string): boolean =>\n  /^[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+$/.test(String(string))\n","/**\n * @description 是否外链格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatExternal = (string: string): boolean =>\n  /^(https?:|mailto:|tel:)/.test(String(string))\n","/**\n * @description 是否 idCard 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatIdCard = (string: string): boolean =>\n  /^[1-9](\\d{14}|\\d{16}[0-9x])$/i.test(String(string))\n","/**\n * @description 是否 imageBase 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatImageBase = (string: string): boolean =>\n  /^data:image\\/(bmp|png|gif|jpg|jpeg);base64,/.test(String(string))\n","/**\n * @description 是否 ip 格式\n * @param {String} string\n * @returns {Boolean}\n */\n\nexport const formatIp = (string: string): boolean => {\n  if (/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/.test(String(string))) {\n    const [a, b, c, d] = string.split('.')\n    return +a < 256 && +b < 256 && +c < 256 && +d < 256\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 telephone 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatTelephone = (string: string): boolean =>\n  /^[0-9-()]{5,18}$/.test(String(string))\n","/**\n * @description 是否 url 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUrl = (string: string): boolean =>\n  /^((https?:)?\\/\\/)?[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+/.test(String(string))\n","/**\n * @description 是否 zip 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatZip = (string: string): boolean =>\n  /^\\d{6}$/.test(String(string))\n","import { formatHexColor } from '../format/formatHexColor'\n\n/**\n * @description 十六进制颜色转RGB颜色\n * @param {string} hex\n * @param {number} [opacity]\n * @return {string}\n */\nexport const someColorHexToRGB = (hex: string, opacity = 1): string => {\n  let sHex = hex.toLowerCase()\n  if (formatHexColor(hex)) {\n    if (sHex.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1))\n      }\n      sHex = sColorNew\n    }\n    const sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)))\n    }\n    return opacity\n      ? 'RGBA(' + sColorChange.join(',') + ',' + String(opacity) + ')'\n      : 'RGB(' + sColorChange.join(',') + ')'\n  }\n  return sHex\n}\n","/**\n * @description RGB颜色转十六进制颜色\n * @param {number} r\n * @param {number} g\n * @param {number} b\n * @return {string}\n */\nexport const someColorRGBToHex = (r: number, g: number, b: number): string => {\n  const hex = ((r << 16) | (g << 8) | b).toString(16)\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex\n}\n","/**\n * @description 最高的 z-index 值\n * @returns {Number}\n */\nexport const someMaxZIndex = (): number =>\n  ~~(new Date().getTime() / 1000).toFixed(0)\n","/**\n * @description 取随机颜色\n * @returns {String}\n */\nexport const someRandomColor = (): string => {\n  const array = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F'\n  ]\n  let string = ''\n  for (let i = 0; i < 6; i++) {\n    const id = Math.ceil(Math.random() * 15)\n    string += array[id]\n  }\n  return '#' + string\n}\n","import {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（中文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoCn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? '刚刚'\n      : diff < 3600\n        ? ~~(diff / 60) + '分钟前'\n        : diff < 86400\n          ? ~~(diff / 3600) + '小时前'\n          : diff < 691200\n            ? ~~(diff / 86400) + '天前'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {somePluralize} from '../some/somePluralize'\nimport {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（英文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoEn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? 'now'\n      : diff < 3600\n        ? somePluralize(~~(diff / 60), ' minute') + 'ago'\n        : diff < 86400\n          ? somePluralize(~~(diff / 3600), ' hour') + 'ago'\n          : diff < 691200\n            ? somePluralize(~~(diff / 86400), ' day') + 'ago'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的日份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetDay = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new Date()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.d).padStart(2, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的月份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetMonth = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.m).padStart(2, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的周几\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetWeek = (timeValue: any = new Date()): number | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? theObject?.w : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetYear = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.y).padStart(4, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @param {boolean} isArray\n * @returns {string|null|string[]}\n */\nexport const timeGetYearMonth = (timeValue: any = new Date(), isArray: boolean = false): null | any[] | string => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject == null ?\n    null : isArray ?\n      [theObject.y, theObject.m] : `${String(theObject.y).padStart(4, '0')}-${String(theObject.m).padStart(2, '0')}`\n}\n","import { H_DATETIME, H_M_D_H_I } from './timeText'\nimport { timeFormat } from './timeFormat'\nimport { timeIsEarly } from './timeIsEarly'\nimport { timestamp } from './timestamp'\n\n/**\n * @param {*} timeValue 时间\n * @returns {String} 相对时间字符串\n */\nexport const timeRelativeTime = (timeValue: any = new Date()): string | null => {\n  const theTimeStamp = timestamp(timeValue)\n  if (theTimeStamp) {\n    const nowTimeStamp = Math.floor(Date.now() / 1000) // 获取当前时间时间戳\n    const isEarly = timeIsEarly(theTimeStamp, nowTimeStamp) // 判断传入时间戳是否早于当前时间戳\n    let diff = nowTimeStamp - theTimeStamp // 获取两个时间戳差值\n    if (!isEarly) {\n      // 如果isEarly为false则差值取反\n      diff = -diff\n    }\n    const dirStr = isEarly ? '前' : '后'\n    let resStr\n    if (diff <= 59) {\n      // 少于等于59秒\n      resStr = diff + '秒' + dirStr\n    } else if (diff > 59 && diff <= 3599) {\n      // 多于59秒，少于等于59分钟59秒\n      resStr = Math.floor(diff / 60) + '分钟' + dirStr\n    } else if (diff > 3599 && diff <= 86399) {\n      // 多于59分钟59秒，少于等于23小时59分钟59秒\n      resStr = Math.floor(diff / 3600) + '小时' + dirStr\n    } else if (diff > 86399 && diff <= 2623859) {\n      // 多于23小时59分钟59秒，少于等于29天59分钟59秒\n      resStr = Math.floor(diff / 86400) + '天' + dirStr\n    } else if (diff > 2623859 && diff <= 31567859 && isEarly) {\n      // 多于29天59分钟59秒，少于364天23小时59分钟59秒，且传入的时间戳早于当前\n      resStr = timeFormat(theTimeStamp, H_M_D_H_I, true)\n    } else {\n      resStr = timeFormat(theTimeStamp, H_DATETIME, true)\n    }\n    return resStr\n  } else {\n    return null\n  }\n}\n","/**\n * @description 秒牌\n * @param {number} seconds 秒数\n * @returns {string}\n */\nexport const timeSecondBar = (seconds: number) => {\n  let showMinutes = 0\n  let showHours = 0\n  let showDays = 0\n  const showSeconds = ~~(+seconds % 60)\n  if (seconds > 59) {\n    showMinutes = ~~(+seconds / 60)\n  }\n  if (showMinutes > 59) {\n    showHours = ~~(showMinutes / 60)\n  }\n  showMinutes = ~~(showMinutes % 60)\n  if (showHours > 59) {\n    showDays = ~~(showHours / 24)\n  }\n  showHours = ~~(showHours % 24)\n  const showHoursStr = String(showHours).padStart(2, '0')\n  const showMinutesStr = String(showMinutes).padStart(2, '0')\n  const showSecondsStr = String(showSeconds).padStart(2, '0')\n  const last = `${showHoursStr}:${showMinutesStr}:${showSecondsStr}`\n  return showDays === 0 ? last : `${showDays}.${last}`\n}\n","import {H_H_I, H_Y_M_D_H_I} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timeDifference} from './timeDifference'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 短时间\n * @param {*} timeValue\n * @returns {Null|String}\n */\nexport const timeShort = (timeValue: any = new Date()) => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    const nowObject = timeObject(new Date())\n    const dateOne = `${theObject?.y}-${theObject?.m}-${theObject?.d}`\n    const dateTwo = `${nowObject?.y}-${nowObject?.m}-${nowObject?.d}`\n    const diff = +(timeDifference(dateOne, dateTwo, false) as number)\n    const oneDaySeconds = 86400 // 一天秒数\n    return diff === oneDaySeconds * 2\n      ? '后天 ' + timeFormat(timeValue, H_H_I, true)\n      : diff === oneDaySeconds\n        ? '明天 ' + timeFormat(timeValue, H_H_I, true)\n        : diff === 0\n          ? timeFormat(timeValue, H_H_I, true)\n          : diff === -oneDaySeconds\n            ? '昨天 ' + timeFormat(timeValue, H_H_I, true)\n            : diff === -oneDaySeconds * 2\n              ? '前天 ' + timeFormat(timeValue, H_H_I, true)\n              : theObject.y === nowObject?.y\n                ? timeFormat(timeValue, H_H_I, true)\n                : timeFormat(timeValue, H_Y_M_D_H_I, true)\n  } else {\n    return null\n  }\n}\n","/**\n * @description 判断时间戳格式是否是毫秒\n * @param {Number} timestamp\n * @returns {Boolean}\n */\nexport const timeStampIsMillisecond = (timestamp: number) => String(timestamp).length > 10\n","/**\n * @description 是否array类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeArray = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object array]'\n","/**\n * @description 是否boolean类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeBoolean = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object boolean]'\n","import { typeFunction } from './typeFunction'\nimport { typeRegexp } from './typeRegexp'\n/**\n * @description 是否empty类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeEmpty = (typeValue: any): boolean =>\n  !typeFunction(typeValue) &&\n  !typeRegexp(typeValue) &&\n  (typeValue == null ||\n    typeValue === 'undefined' ||\n    typeValue.length === 0 ||\n    JSON.stringify(typeValue) === '{}')\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否float类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFloat = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 !== 0\n","/**\n * @description 是否HTMLElement类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeHTMLElement = (typeValue: any): boolean => {\n  const d = document.createElement('div')\n  try {\n    d.appendChild(typeValue.cloneNode(true))\n    return typeValue.nodeType === 1\n  } catch (e) {\n    return typeValue === window || typeValue === document\n  }\n}\n","import { typeInt } from './typeInt'\n/**\n * @description 是否intMinus类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntMinus = (typeValue: any): boolean => typeInt(typeValue) && typeValue < 0\n","import { typeInt } from './typeInt'\n/**\n * @description  是否intPositive类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntPositive = (typeValue: any): boolean =>\n  typeInt(typeValue) && typeValue > 0\n","/**\n * @description 是否object类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeObject = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object object]'\n","/**\n * @description 是否symbol类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeSymbol = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object symbol]'\n","/**\n * @description uniCode解码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeDecode = (string: string): string =>\n  decodeURI(string.replace(/\\\\/g, '%'))\n","/**\n * @description uniCode编码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeEncode = (string: string): string => {\n  const array = []\n  for (let i = 0; i < string.length; i++) {\n    array[i] = ('00' + string.charCodeAt(i).toString(16)).slice(-4)\n  }\n  return '\\\\u' + array.join('\\\\u')\n}\n","import { formatAllCn } from '../format/formatAllCn'\n\n/**\n * @desc 验证是否全中文\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateAllCn = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  min = 2,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatAllCn(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}必须是全中文`))\n    }\n  }\n}\n","import { formatAllNumber } from '../format/formatAllNumber'\n\n/**\n * @desc 验证是否数字格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateAllNumber = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatAllNumber(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDate } from '../format/formatDate'\n/**\n * @desc 验证是否date格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDate = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDate(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDatetime } from '../format/formatDatetime'\n\n/**\n * @desc 验证是否dateTime格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDatetime = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDatetime(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatEmail } from '../format/formatEmail'\n\n/**\n * @desc 验证是否电子邮箱格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateEmail = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 30\n) => {\n  const field = '电子邮箱'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatEmail(validateValue)) {\n      if (validateValue.length <= min || validateValue.length >= max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请填写正确的${field}`))\n    }\n  }\n}\n","/**\n * @desc 验证后的错误信息\n * @param {*} fields\n */\nexport const validateErrMsg = (fields: Record<string | number | symbol, any>) =>\n  fields[Object.keys(fields)[0]][0].message\n","import { formatMobile } from '../format/formatMobile'\n/**\n * @desc 验证是否手机号码格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} action\n */\nexport const validateMobile = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  action = '填写'\n) => {\n  const field = '手机号码'\n  const number = 11\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatMobile(validateValue)) {\n      if (validateValue.length !== number) {\n        callback(new Error(`${field}为${number}个字符`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请${action}正确的${field}`))\n    }\n  }\n}\n","import { formatPrice } from '../format/formatPrice'\n\n/**\n * @desc 验证是否价格格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validatePrice = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '价格',\n  action = '填写',\n  min = 1,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatPrice(validateValue)) {\n      if (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max)) {\n        callback(\n          new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n        )\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}只能是数字（最多2位小数）`))\n    }\n  }\n}\n","/**\n * @desc 验证是否已填\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateRequire = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field: string,\n  action = '填写',\n  min: number,\n  max: number\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (\n      min &&\n      max &&\n      (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max))\n    ) {\n      callback(\n        new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n      )\n    } else {\n      callback()\n    }\n  }\n}\n","import { formatUsername } from '../format/formatUsername'\n\n/**\n * @desc 验证是否用户名格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateUsername = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 20\n) => {\n  const field = '用户名'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatUsername(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(\n        new Error(\n          `${field}必须是以字母为开头，由字母、数字、减号、点、下划线组成`\n        )\n      )\n    }\n  }\n}\n"],"names":["addressBarHttp","document","location","protocol","addressBarHost","host","formatAllCn","string","test","String","formatAllNumber","someWhetherLeapYear","year","someFebruaryDays","someYearMonthDays","month","formatDate","y","m","d","split","formatDatetime","date","time","h","s","formatEmail","formatHexColor","formatMobile","formatPrice","formatUsername","somePluralize","number","unit","H_DATETIME","H_H_I","typeDate","typeValue","Date","isNaN","getTime","typeNumber","typeString","Object","prototype","toString","call","toLowerCase","timeNewDate","timeValue","theNewDate","theTime","replace","length","timeObject","getFullYear","getMonth","getDate","getHours","i","getMinutes","getSeconds","w","getDay","timeFormat","format","zero","theObject","result","key","padStart","timestamp","toFixed","timeDifference","timeOne","timeTwo","abs","oneNewDate","twoNewDate","Math","timeIsEarly","nowTime","nowNewDate","typeFunction","typeRegexp","typeInt","href","pathname","referrer","hash","slice","hostname","port","search","substr","a","b","c","hex","opacity","sHex","sColorNew","concat","sColorChange","push","parseInt","join","r","g","Array","array","ceil","random","theTimestamp","diff","now","isArray","theTimeStamp","nowTimeStamp","floor","isEarly","dirStr","resStr","seconds","showMinutes","showHours","showDays","showSeconds","last","nowObject","dateOne","dateTwo","oneDaySeconds","JSON","stringify","createElement","appendChild","cloneNode","nodeType","e","window","decodeURI","charCodeAt","rule","validateValue","callback","field","min","max","Error","action","fields","keys","message"],"mappings":"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"}