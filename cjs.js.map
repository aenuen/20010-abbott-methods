{"version":3,"file":"cjs.js","sources":["src/element/autoQuery.ts","src/addressBar/addressBarHttp.ts","src/addressBar/addressBarHost.ts","src/type/typeArray.ts","src/ao/aoCleanKeyOne.ts","src/type/typeObject.ts","src/ao/aoCleanKeyAll.ts","src/ao/aoWhetherIn.ts","src/ao/aoKeyName.ts","src/ao/aoReverse.ts","src/type/typeNumber.ts","src/browser/browserUserAgent.ts","src/browser/browserIsMobile.ts","src/class/classHas.ts","src/class/classAdd.ts","src/class/classRemove.ts","src/replace/replaceAll.ts","src/replace/replaceOne.ts","src/hold/holdFirst.ts","src/type/typeDate.ts","src/type/typeString.ts","src/format/formatAllNumber.ts","src/time/timeNewDate.ts","src/time/timeText.ts","src/time/timeObject.ts","src/time/timeFormat.ts","src/date/dateApart.ts","src/some/someWhetherLeapYear.ts","src/some/someFebruaryDays.ts","src/some/someYearMonthDays.ts","src/date/dateMonthFoot.ts","src/date/dateMonthHead.ts","src/time/timeGetYear.ts","src/time/timeGetMonth.ts","src/date/dateWeekSunday.ts","src/date/dateOneWeek.ts","src/ensure/ensureFootNone.ts","src/ensure/ensureHeadNone.ts","src/file/fileFullName.ts","src/file/fileSuffixName.ts","src/format/formatAllCn.ts","src/format/formatDate.ts","src/format/formatDatetime.ts","src/format/formatEmail.ts","src/format/formatHexColor.ts","src/format/formatMobile.ts","src/format/formatPrice.ts","src/format/formatUsername.ts","src/have/haveCn.ts","src/replace/replaceByObject.ts","src/some/somePluralize.ts","src/string/stringCut.ts","src/time/timestamp.ts","src/time/timeDifference.ts","src/time/timeGetWeek.ts","src/time/timeIsEarly.ts","src/type/typeFunction.ts","src/type/typeRegexp.ts","src/type/typeInt.ts","src/urlString/urlStringQueryObject.ts","src/week/weekAryCn.ts","src/week/weekAryEn.ts","src/addressBar/addressBarCurrent.ts","src/addressBar/addressBarFilePath.ts","src/addressBar/addressBarFrom.ts","src/addressBar/addressBarHash.ts","src/addressBar/addressBarHead.ts","src/addressBar/addressBarName.ts","src/addressBar/addressBarPort.ts","src/addressBar/addressBarQuery.ts","src/ao/aoChunk.ts","src/ao/aoDeleteEmpty.ts","src/ao/aoDeleteKey.ts","src/ao/aoDeleteValue.ts","src/ao/aoHoldKey.ts","src/ao/aoHoldValue.ts","src/ao/aoRandom.ts","src/ao/aoRepeat.ts","src/array/arrayDiKaErJi.ts","src/array/arrayFlatten.ts","src/array/arrayHasOne.ts","src/array/arrayIntersection.ts","src/array/arrayOrder.ts","src/array/arrayOrderByField.ts","src/array/arrayRatioReplace.ts","src/array/arrayToStringChar.ts","src/array/arrayUnion.ts","src/array/arrayWhetherIn.ts","src/browser/browserInfoObject.ts","src/browser/browserIsPc.ts","src/browser/browserName.ts","src/browser/browserWhetherInArray.ts","src/calc/calcSum.ts","src/case/caseAllBig.ts","src/case/caseAllSmall.ts","src/case/caseFirstBig.ts","src/case/caseWordFirstBig.ts","src/class/classToggle.ts","src/controlInput/controlInputNumberSpace.ts","src/controlInput/controlInputPrice.ts","src/date/dateApartMonth.ts","src/date/dateApartMonthList.ts","src/date/dateDifference.ts","src/date/dateMonthNext.ts","src/date/dateMonthPrev.ts","src/date/dateOneMonth.ts","src/ensure/ensureFootHave.ts","src/ensure/ensureHeadHave.ts","src/file/fileBaseName.ts","src/file/fileClassify.ts","src/file/fileUnit.ts","src/format/formatDomain.ts","src/format/formatExternal.ts","src/format/formatIdCard.ts","src/format/formatImageBase.ts","src/format/formatIp.ts","src/format/formatTelephone.ts","src/format/formatUrl.ts","src/format/formatZip.ts","src/have/haveAssign.ts","src/hold/holdCn.ts","src/hold/holdLetter.ts","src/hold/holdNumber.ts","src/element/keyLight.ts","src/local/localRead.ts","src/local/localSave.ts","src/month/monthDifference.ts","src/number/numberAddComma.ts","src/number/numberAddZero.ts","src/number/numberGet.ts","src/number/numberPriceBigWrite.ts","src/number/numberUnit.ts","src/object/objectDeleteElement.ts","src/object/objectHasChildren.ts","src/object/objectLength.ts","src/object/objectRenameKey.ts","src/some/someColorHexToRGB.ts","src/some/someColorRGBToHex.ts","src/some/someMaxZIndex.ts","src/some/someRandomColor.ts","src/string/stringCutCn.ts","src/string/stringLoop.ts","src/string/stringRandom.ts","src/string/stringReverse.ts","src/string/stringToArrayChar.ts","src/string/stringToArrayNumber.ts","src/time/timeAgoCn.ts","src/time/timeAgoEn.ts","src/time/timeGetDay.ts","src/time/timeGetYearMonth.ts","src/time/timeRelativeTime.ts","src/time/timeSecondBar.ts","src/time/timeShort.ts","src/time/timeStampIsMillisecond.ts","src/type/typeBoolean.ts","src/type/typeEmpty.ts","src/type/typeFloat.ts","src/type/typeHTMLElement.ts","src/type/typeIntMinus.ts","src/type/typeIntPositive.ts","src/type/typeSymbol.ts","src/uniCode/uniCodeDecode.ts","src/uniCode/uniCodeEncode.ts","src/urlCode/urlCodeDecode.ts","src/urlCode/urlCodeEncode.ts","src/urlString/urlStringQueryOne.ts","src/validate/validateAllCn.ts","src/validate/validateAllNumber.ts","src/validate/validateDate.ts","src/validate/validateDatetime.ts","src/validate/validateEmail.ts","src/validate/validateErrMsg.ts","src/validate/validateMobile.ts","src/validate/validatePrice.ts","src/validate/validateRequire.ts","src/validate/validateUsername.ts","src/week/weekGetCn.ts","src/week/weekGetEn.ts"],"sourcesContent":["/**\n * @example :fetch-suggestions=\"(q,c) => autoQuery(q,c,a)\"\n * @param queryString\n * @param queryCallback\n * @param queryArray\n */\nexport const autoQuery = (queryString: string, queryCallback: any, queryArray: any[]) => {\n  queryCallback(queryString ? queryArray.filter((state) => state.value.toUpperCase().match(queryString.toUpperCase())) : queryArray)\n}\n","/**\n * @description 获取http(s)\n * @returns {string}\n */\nexport const addressBarHttp = (): string =>\n  document.location.protocol === 'https:' ? 'https://' : 'http://'\n","/**\n * @description 获取域名:端口\n * @returns {string}\n */\nexport const addressBarHost = (): string => location.host\n","/**\n * @description 是否array类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeArray = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object array]'\n","/**\n * @description 清除键值-单层\n * @param {[]|{}} ao array或object\n * @returns {[]}\n */\nexport const aoCleanKeyOne = (ao: any[] | Record<string | number | symbol, any>): any[] => {\n  const result = []\n  for (const key in ao) {\n    result.push(ao[key])\n  }\n  return result\n}\n","/**\n * @description 是否object类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeObject = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object object]'\n","import {typeArray} from '../type/typeArray'\nimport {typeObject} from '../type/typeObject'\n\n/**\n * @desc 清除键值-全部\n * @param {[]|{}} ao array或object\n * @returns {[]}\n */\nexport const aoCleanKeyAll = (ao: any[] | Record<string | number | symbol, any>): any[] => {\n  const result = []\n  let count = 0\n  for (const key in ao) {\n    result[count] =\n      typeArray(ao[key]) || typeObject(ao[key])\n        ? aoCleanKeyAll(ao[key])\n        : ao[key]\n    count++\n  }\n  return result\n}\n","import {aoCleanKeyOne} from './aoCleanKeyOne'\n\n/**\n * @description 是否值在ao中\n * @param {[]|{}} ao array或object\n * @param {*} aoSearch 要搜索的值\n * @param  {boolean} [aoMatchCase] 是否匹配大小写，true为匹配，false为不匹配，默认为不匹配\n * @returns {boolean}\n */\nexport const aoWhetherIn = (ao: any[] | Record<string | number | symbol, any>, aoSearch: any, aoMatchCase: boolean = false): boolean => {\n  const newArray = aoCleanKeyOne(ao) // 函数 some 不能循环 json 类型，统一转成数组\n  return newArray.some((key) => {\n    let a = JSON.stringify(key)\n    let b = JSON.stringify(aoSearch)\n    if (!aoMatchCase) {\n      a = a.toLowerCase()\n      b = b.toLowerCase()\n    }\n    return a === b\n  })\n}\n","/**\n * @description 键名\n * @param {[]|{}} ao array或object\n * @returns {[]}\n */\nexport const aoKeyName = (ao: any[] | Record<string | number | symbol, any>): any[] => {\n  const result = []\n  for (const key in ao) {\n    result.push(key)\n  }\n  return result\n}\n","import { typeArray } from '../type/typeArray'\nimport { aoKeyName } from './aoKeyName'\n\n/**\n * @description 反序\n * @param {[]|{}} ao array或object\n * @returns {[]|{}}\n */\nexport const aoReverse = (ao: any[] | Record<string | number | symbol, any>) => {\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  const keyArray = aoKeyName(ao)\n  keyArray.reverse()\n  for (const key in keyArray) {\n    typeArray(ao)\n      ? result.push(ao[keyArray[key]])\n      : (result[keyArray[key]] = ao[keyArray[key]])\n  }\n  return result\n}\n","/**\n * @description 是否number类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeNumber = (typeValue: any): boolean =>\n  typeof typeValue === 'number' || (!isNaN(typeValue) && typeof typeValue === 'string')\n","/**\n * @description 浏览器代理信息\n * @returns {String}\n */\nexport const browserUserAgent = (): string => navigator.userAgent.toLowerCase()\n","import { browserUserAgent } from './browserUserAgent'\n/**\n * @description 浏览器是否手机浏览器\n * @returns {Boolean}\n */\nexport const browserIsMobile = (): boolean => /mobi/i.test(browserUserAgent())\n","/**\n * @description 是否有指定的class\n * @param {HTMLElement} HTMLElement\n * @param {String} className\n * @returns {Boolean}\n */\nexport const classHas = (HTMLElement: HTMLElement, className: string): boolean => {\n  return !!HTMLElement.className.match('(\\\\s|^)' + className + '(\\\\s|$)')\n}\n","import { classHas } from './classHas'\n\n/**\n * @description 添加class\n * @param {HTMLElement} HTMLElement\n * @param {String} className\n */\nexport const classAdd = (HTMLElement: HTMLElement, className: string): void => {\n  classHas(HTMLElement, className) ||\n    (function () {\n      const string = HTMLElement.className\n      const classNew = string + ' ' + className\n      HTMLElement.className = string.length > 0 ? classNew : className\n    })()\n}\n","import { classHas } from './classHas'\n\n/**\n * @description 移除class\n * @param {HTMLElement} HTMLElement\n * @param {String} className\n */\nexport const classRemove = (HTMLElement: HTMLElement, className: string): void => {\n  classHas(HTMLElement, className) &&\n    (function () {\n      const array = HTMLElement.className.split(' ')\n      const result: string[] = []\n      Object.keys(array).forEach((key) => {\n        array[+key] !== className && result.push(array[+key])\n      })\n      HTMLElement.className = result.join(' ')\n    })()\n}\n","/**\n * @description 替换全部\n * @param {Number|String} string\n * @param {Number|String} search\n * @param {Number|String} replace\n * @returns {String}\n */\nexport const replaceAll = (\n  string: string,\n  search: string,\n  replace: string\n): string => {\n  return String(string).split(String(search)).join(String(replace))\n}\n","/**\n * @description 只替换第一个\n * @param {Number|String} string\n * @param {Number|String} search\n * @param {Number|String} replace\n * @returns {String}\n */\nexport const replaceOne = (\n  string: string,\n  search: string,\n  replace: string\n): string => {\n  return String(string).replace(String(search), String(replace))\n}\n","import { replaceAll } from '../replace/replaceAll'\nimport { replaceOne } from '../replace/replaceOne'\n\n/**\n * @description 保留第一个指定的值\n * @param {string} string\n * @param {string} char\n * @returns {string}\n */\nexport const holdFirst = (\n  string: string,\n  char: string\n): string => {\n  const tempValue = '##@!@##@!@##'\n  const replaceFirstChar = replaceOne(String(string), String(char), tempValue)\n  const otherReplaceEmpty = replaceAll(replaceFirstChar, String(char), '')\n  return replaceOne(otherReplaceEmpty, tempValue, String(char))\n}\n","/**\n * @description 是否date类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeDate = (typeValue: any) => typeValue instanceof Date && !isNaN(typeValue.getTime())\n","import { typeNumber } from './typeNumber'\n\n/**\n * @description 是否string类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeString = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object string]' ||\n  typeNumber(typeValue)\n","/**\n * @description 是否全数字格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllNumber = (string: string): boolean =>\n  /^[0-9]+$/.test(String(string))\n","import {typeDate} from '../type/typeDate'\nimport {typeNumber} from '../type/typeNumber'\nimport {typeString} from '../type/typeString'\nimport {formatAllNumber} from '../format/formatAllNumber'\n\n/**\n * @description 获取时间对象\n * @param {*} timeValue\n * @returns {Date|Null}\n */\nexport const timeNewDate = (timeValue: any = new Date()): Date => {\n  if (timeValue) {\n    let theNewDate\n    if (typeDate(timeValue)) {\n      theNewDate = timeValue\n    } else {\n      let theTime = timeValue\n      if (typeString(theTime)) {\n        theTime = formatAllNumber(String(theTime))\n          ? theTime\n          : String(theTime).replace(/[.|-]/gm, '/')\n      }\n      if (typeNumber(theTime) && String(theTime).length === 10) {\n        theTime *= 1000\n      }\n      theNewDate = typeNumber(theTime) ? new Date(+theTime) : new Date(String(theTime))\n    }\n    return typeDate(theNewDate) ? theNewDate : null\n  } else {\n    return new Date()\n  }\n}\n","// noinspection SpellCheckingInspection\n\nexport const H_YM = '{y}-{m}'\nexport const H_YM_ABBR = '{y}{m}'\nexport const H_DATE = '{y}-{m}-{d}'\nexport const H_DATE_ABBR = '{y}{m}{d}'\nexport const H_MH = '{y}-{m}-01'\nexport const H_DATETIME = '{y}-{m}-{d} {h}:{i}:{s}'\nexport const H_DATETIME_ABBR = '{y}{m}{d}{h}{i}{s}'\nexport const H_H_I = '{h}:{i}'\nexport const H_M_D_H_I = '{m}-{d} {h}:{i}'\nexport const H_Y_M_D_H_I = '{y}-{m}-{d} {h}:{i}'\nexport const T_YM = 'YYYY-MM'\nexport const T_YM_ABBR = 'YYYYMM'\nexport const T_DATE = 'YYYY-MM-DD'\nexport const T_DATE_ABBR = 'YYYYMMDD'\nexport const T_MH = 'YYYY-MM-01'\nexport const T_DATETIME = 'YYYY-MM-DD HH:mm:ss'\nexport const T_DATETIME_ABBR = 'YYYYMMDDHHmmss'\nexport const T_H_I = 'HH:mm'\nexport const T_M_D_H_I = 'MM-DD HH:mm'\nexport const T_Y_M_D_H_I = 'YYYY-MM-DD HH:mm'\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间对象\n * @param {*} [timeValue]\n * @returns {{s: Number, d: Number, w: Number, h: Number, y: Number, i: Number, m: Number}|Null}\n */\nexport const timeObject = (\n  timeValue: any = new Date()\n): Record<string | number | symbol, any> | null => {\n  const theNewDate = timeNewDate(timeValue)\n  return theNewDate !== null\n    ? {\n      y: theNewDate.getFullYear(),\n      m: theNewDate.getMonth() + 1,\n      d: theNewDate.getDate(),\n      h: theNewDate.getHours(),\n      i: theNewDate.getMinutes(),\n      s: theNewDate.getSeconds(),\n      w: theNewDate.getDay()\n    }\n    : null\n}\n","import {H_DATETIME} from './timeText'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 时间格式化\n * @param {*} [timeValue]\n * @param {String} [format] 格式\n * @param {Boolean} [zero] 是否加零，默认加零\n * @returns {Null|String}\n */\nexport const timeFormat = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    return format.replace(/{([ymdhisw])+}/g, (result, key) => {\n      const timeValue = theObject[key]\n      return key === 'w'\n        ? ['日', '一', '二', '三', '四', '五', '六'][timeValue]\n        : zero\n          ? String(timeValue).padStart(2, '0')\n          : String(timeValue)\n    })\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeFormat} from '../time/timeFormat'\nimport {H_DATE} from '../time/timeText'\n\n/**\n * @description 计算日期number天后(前)的日期（正数为后，负数为前）\n * @param {*} dateValue 要计算的日期\n * @param {Number} number number天后(前)\n * @returns {String|Null}\n */\nexport const dateApart = (dateValue: any, number: number): string | null => {\n  const theNewDate = timeNewDate(dateValue)\n  return theNewDate\n    ? timeFormat(~~(+theNewDate / 1000) + number * 24 * 60 * 60, H_DATE, true)\n    : null\n}\n","/**\n * @description 是否闰年\n * @param {Number} year\n * @returns {Boolean}\n */\nexport const someWhetherLeapYear = (year: number | string) =>\n  (+year % 4 === 0 && +year % 100 !== 0) || +year % 400 === 0\n","import { someWhetherLeapYear } from './someWhetherLeapYear'\n\n/**\n * @description 二月的天数\n * @param {Number} year\n * @returns {Number}\n */\nexport const someFebruaryDays = (year: number | string) =>\n  someWhetherLeapYear(~~String(year)) ? 29 : 28\n","import { someFebruaryDays } from './someFebruaryDays'\n\n/**\n * @description 某年某月的月天数\n * @param {Number} year\n * @param {Number} month\n * @returns {Number}\n */\nexport const someYearMonthDays = (\n  year: number | string,\n  month: number | string\n) => {\n  const monthDays = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][\n    ~~String(month) - 1\n  ]\n  return monthDays || someFebruaryDays(~~String(year))\n}\n","import {timeObject} from '../time/timeObject'\n\n/**\n * @description 获取日期的月尾日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateMonthFoot = (dateValue: any = new Date()): string | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject !== null) {\n    const year = String(theObject.y).padStart(4, '0')\n    const month = String(theObject.m).padStart(2, '0')\n    const day = new Date(+year, +month, 0).getDate()\n    return `${year}-${month}-${day}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeFormat} from '../time/timeFormat'\nimport {H_MH} from '../time/timeText'\n\n/**\n * @description 获取日期的月头日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateMonthHead = (dateValue: any = new Date()): string | null => {\n  const theObject = timeNewDate(dateValue)\n  return theObject ? timeFormat(theObject, H_MH, true) : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetYear = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.y).padStart(4, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的月份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetMonth = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.m).padStart(2, '0') : null\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\n\n/**\n * @description 日期的周日日期\n * @param {*} [dateValue]\n * @returns {String|Null}\n */\nexport const dateWeekSunday = (dateValue: any = new Date()): string | null => {\n  const theNewDate = timeNewDate(dateValue)\n  if (theNewDate !== null) {\n    const week = theNewDate.getDay()\n    const ary = [0, -1, -2, -3, -4, -5, -6]\n    return dateApart(theNewDate, ary[week])\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\nimport {dateWeekSunday} from './dateWeekSunday'\n\n/**\n * @description 获取日期一周的日期\n * @param {*} [dateValue]\n * @returns {Array|Null}\n */\nexport const dateOneWeek = (dateValue: any = new Date()): string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject !== null) {\n    const array = []\n    const sunday = dateWeekSunday(dateValue)\n    for (let i = 0; i < 7; i++) {\n      const apart = dateApart(sunday, i) as string\n      array.push(apart)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","/**\n * @desc 保证字符串尾部没有指定字符\n * @param {number|string} ensureString\n * @param {number|string} ensureAssign\n * @returns {number|string}\n */\nexport const ensureFootNone = (ensureString: number | string, ensureAssign: number | string): string => {\n  const theString = String(ensureString)\n  const theAssign = String(ensureAssign)\n  const strLen = theString.length\n  const theLen = theAssign.length\n  return theString.substr(-theLen) === theAssign ? ensureFootNone(theString.substr(0, strLen - theLen), theAssign) : theString\n}\n","/**\n * @desc 保证字符串头部没有指定字符串\n * @param {number|string} ensureString\n * @param {number|string} ensureAssign\n * @returns {number|string}\n */\nexport const ensureHeadNone = (ensureString: number | string, ensureAssign: number | string): string => {\n  const theString = String(ensureString)\n  const theAssign = String(ensureAssign)\n  const length = theAssign.length\n  return theString.substr(0, length) === theAssign ? ensureHeadNone(theString.substr(length), theAssign) : theString\n}\n","/**\n * @description 从字符串中提取文件的文件全名\n * @param {String} string\n * @returns {String}\n */\nexport const fileFullName = (string: string): string => {\n  const a = document.createElement('a')\n  a.href = string\n  return (a.pathname.match(/\\/([^/?#]+)$/i) || ['', ''])[1]\n}\n","import { fileFullName } from './fileFullName'\n/**\n * @description 从字符串中提取文件的后缀名称\n * @param {String} string\n * @returns {String}\n */\nexport const fileSuffixName = (string: string): string =>\n  fileFullName(string).replace(/.+[.]([^.\\\\/]+)$/gi, '$1')\n","/**\n * @description 是否全中文格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatAllCn = (string: string): boolean =>\n  /^[\\u4e00-\\u9fa5]+$/i.test(String(string))\n","import { someYearMonthDays } from '../some/someYearMonthDays'\n\n/**\n * @description 是否 date 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDate = (string: string): boolean => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2})$/.test(String(string))) {\n    const [y, m, d] = string.split('-')\n    return +m > 0 && +m <= 12 && +d > 0 && +d <= someYearMonthDays(y, m)\n  } else {\n    return false\n  }\n}\n","import { formatDate } from './formatDate'\n\n/**\n * @description 是否 dateTime 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDatetime = (string: string) => {\n  if (/^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/.test(String(string))) {\n    const [date, time] = string.split(' ')\n    const [h, m, s] = time.split('-')\n    return formatDate(date) && +h < 24 && +m < 60 && +s < 60\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 email格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatEmail = (string: string): boolean =>\n  /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/i.test(String(string))\n","/**\n * @description 是否十六进制颜色的格式\n * @param {string} string\n * @returns {boolean}\n */\nexport const formatHexColor = (string: string) => {\n  const reg = /^#([0-9a-fA-F]{3}|[0-9a-fA-f]{6})$/\n  return reg.test(string)\n}\n","/**\n * @description 是否 mobile 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatMobile = (string: string): boolean =>\n  /^(13|14|15|16|17|18)[0-9]{9}$/.test(String(string))\n","/**\n * @description 是否 price 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatPrice = (string: string): boolean =>\n  /^\\d+\\.?\\d{0,2}$/.test(String(string))\n","/**\n * @description 是否 username 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUsername = (string: string): boolean =>\n  /^[a-z]+[a-z0-9]+[-_.]*[a-z0-9]+$/i.test(String(string))\n","/**\n * @description 字符串中是否含有中文\n * @param {String} string\n * @returns {Boolean}\n */\nexport const haveCn = (string: string): boolean => {\n  return /[\\u4e00-\\u9fa5]+/.test(String(string))\n}\n\n","import {replaceAll} from './replaceAll'\n\n/**\n * @description 根据对象替换\n * @param {Number|String} string\n * @param {Object} replaceObject\n * @returns {String}\n */\nexport const replaceByObject = (\n  string: string,\n  replaceObject: Record<string | number | symbol, any>\n): number | string => {\n  Object.keys(replaceObject).forEach((key) => {\n    string = replaceAll(string, key, replaceObject[key])\n  })\n  return string\n}\n","/**\n * @description 如果值复数，则显示复数标签\n * @param {Number} number\n * @param {String} unit\n * @returns {String}\n */\nexport const somePluralize = (number: number, unit: string) =>\n  number === 1 ? number + unit : number + unit + 's'\n","/**\n * @description 字符串截取\n * @param {Number|String} string 要截取的字符串\n * @param {number} number 截取数量\n * @returns {String}\n */\nexport const stringCut = (string: string, number: number): string => {\n  number = ~~Math.abs(number)\n  const have = String(string).substr(0, number - 1) + '…'\n  const none = String(string).substr(0, number)\n  return string.length > number ? have : none\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 获取时间戳\n * @param {*} [timeValue]\n * @returns {Number|Null}\n */\nexport const timestamp = (timeValue: any = new Date()) => {\n  const theNewDate = timeValue ? timeNewDate(timeValue) : new Date()\n  return theNewDate ? ~~(theNewDate.getTime() / 1000).toFixed(0) : null\n}\n","import {timeNewDate} from './timeNewDate'\n\n/**\n * @description 两个时间的时间差\n * @param {*} timeOne\n * @param {*} timeTwo\n * @param {Boolean} [abs] 绝对值\n * @returns {Number|Null}\n */\nexport const timeDifference = (\n  timeOne: any,\n  timeTwo: any,\n  abs: boolean = false\n): number | null => {\n  const oneNewDate = timeNewDate(timeOne)\n  const twoNewDate = timeNewDate(timeTwo)\n  if (oneNewDate !== null && twoNewDate !== null) {\n    const result = ~~((oneNewDate.getTime() - twoNewDate.getTime()) / 1000)\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的周几\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetWeek = (timeValue: any = new Date()): number | null => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? theObject?.w : null\n}\n","import { timeNewDate } from './timeNewDate'\n\n/**\n * @param {*} theTime 传入的时间\n * @param {*} [nowTime] 当前时间时间\n * @returns {Boolean|Null} 传入的时间是否早于当前时间\n */\nexport const timeIsEarly = (theTime: any, nowTime: any): boolean | null => {\n  const theNewDate = timeNewDate(theTime)\n  const nowNewDate = timeNewDate(nowTime) || new Date()\n  if (theNewDate !== null && nowNewDate !== null) {\n    const theTimeStamp = theNewDate.getTime()\n    const nowTimeStamp = nowNewDate.getTime()\n    return theTimeStamp < nowTimeStamp\n  } else {\n    return null\n  }\n}\n","/**\n * @description 是否function类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFunction = (typeValue: unknown): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object function]'\n","/**\n * @description 是否regexp类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeRegexp = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object regexp]'\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否int类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeInt = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 === 0\n","/**\n * @description 获取网址字符串中的参数，并组成参数对象\n * @param {String} urlString 网址字符串\n * @returns {Object} 参数对象\n */\nexport const urlStringQueryObject = (\n  urlString: string\n): Record<string | number | symbol, any> => {\n  const search = urlString.substring(urlString.lastIndexOf('?') + 1)\n  const json: Record<string | number | symbol, any> = {}\n  search.replace(/([^?&=]+)=([^?&=]*)/g, (result, $1, $2) => {\n    const name = decodeURIComponent($1)\n    let value = decodeURIComponent($2)\n    value = String(value)\n    json[name] = value\n    return result\n  })\n  return json\n}\n","/**\n * 周天至周六（中文）\n * @return {string[]}\n */\nexport const weekAryCn: string[] = ['日', '一', '二', '三', '四', '五', '六']\n","/**\n * 周天至周六（英文）\n * @return {string[]}\n */\nexport const weekAryEn: string[] = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n]\n","/**\n * @description 获取当前网址\n * @returns {string}\n */\nexport const addressBarCurrent = (): string => location.href\n","/**\n * @description 获取页面所在路径\n * @returns {string}\n */\nexport const addressBarFilePath = (): string => location.pathname\n","/**\n * @description 获取页面的来源\n * @returns {string}\n */\nexport const addressBarFrom = (): string => document.referrer\n","/**\n * @description 获取网址#号后的参数\n * @returns {string}\n */\nexport const addressBarHash = (): string => location.hash.slice(1)\n","import { addressBarHttp } from './addressBarHttp'\nimport { addressBarHost } from './addressBarHost'\n/**\n * @description 获取http(s)://域名：端口\n * @returns {string}\n */\nexport const addressBarHead = (): string =>\n  `${addressBarHttp()} + ${addressBarHost()}`\n","/**\n * @description 获取域名\n * @returns {string}\n */\nexport const addressBarName = (): string => location.hostname\n","/**\n * @description 获取端口\n * @returns {string}\n */\nexport const addressBarPort = (): string => location.port\n","/**\n * @description 获取参数\n * @returns {string}\n */\nexport const addressBarQuery = (): string => location.search.substr(1)\n","import {typeArray} from '../type/typeArray'\nimport {aoCleanKeyOne} from './aoCleanKeyOne'\n\n/**\n * @description 切片存储在一个新数组\n * @param {[]|{}} ao array或object\n * @param {number} size 每个切片的大小\n * @returns {[]}\n */\nexport const aoChunk = (ao: any[] | Record<string | number | symbol, any>, size: number): any[] => {\n  const array = typeArray(ao) ? ao : aoCleanKeyOne(ao)\n  const length = array.length\n  size = ~~Math.abs(+size)\n  if (length < 1 || size < 1) {\n    return []\n  } else {\n    let index = 0\n    let resIndex = 0\n    const result = new Array(Math.ceil(length / size))\n    while (index < length) {\n      result[resIndex++] = array.slice(index, (index += size))\n    }\n    return result\n  }\n}\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\n\n/**\n * @description 删除空值以及指定的值\n * @param {[]|{}} ao array或object\n * @param {[]|{}} aoAssign 现在仅设置为不等于空字符，其它条件可额外增加，如：[null,undefined]\n * @returns {[]|{}}\n */\nexport const aoDeleteEmpty = (ao: any[] | Record<string | number | symbol, any>, aoAssign: any[] | string) => {\n  const aoAssignAry = (typeArray(aoAssign) ? aoAssign : [aoAssign]) as any[]\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao)\n    ? []\n    : {}\n  for (const key in ao) {\n    if (!(ao[key] === '' || aoWhetherIn(aoAssignAry, ao[key], false))) {\n      typeArray(ao) ? result.push(ao[key]) : (result[key] = ao[key])\n    }\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\n\n/**\n * @description 删除键\n * @param {[]|{}} ao array或object\n * @param {[]|String} aoKey 要删除的键，可字符或数组\n * @returns {[]|{}}\n */\nexport const aoDeleteKey = (ao: any[] | Record<string | number | symbol, any>, aoKey: string | number) => {\n  const aoKeyAry = (typeArray(aoKey) ? aoKey : [aoKey]) as any[]\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  for (const i in ao) {\n    if (!aoWhetherIn(aoKeyAry, i, false)) {\n      typeArray(ao) ? result.push(ao[i]) : (result[i] = ao[i])\n    }\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\n\n/**\n * @description 删除值\n * @param {[]|{}} ao array或object\n * @param {*} aoValue 要删除的值\n * @returns {[]|{}}\n */\nexport const aoDeleteValue = (ao: any[] | Record<string | number | symbol, any>, aoValue: any) => {\n  const aoValueAry = (typeArray(aoValue) ? aoValue : [aoValue]) as any[]\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  for (const i in ao) {\n    if (!aoWhetherIn(aoValueAry, ao[i], true)) {\n      typeArray(ao) ? result.push(ao[i]) : (result[i] = ao[i])\n    }\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\nimport {aoKeyName} from './aoKeyName'\n\n/**\n * @description 保留键，其它删除\n * @param {[]|{}} ao array或object\n * @param {[]|string} aoHold 要保留的键，可字符或数组\n * @returns {[]|{}}\n */\nexport const aoHoldKey = (ao: any[] | Record<string | number | symbol, any>, aoHold: any[] | string | number) => {\n  const aoHoldAry = (typeArray(aoHold) ? aoHold : [aoHold]) as any[]\n  const keyArray = aoKeyName(ao)\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  for (const key in aoHoldAry) {\n    if (aoWhetherIn(keyArray, aoHoldAry[key], false)) {\n      typeArray(ao) ? result.push(ao[aoHoldAry[key]]) : (result[aoHoldAry[key]] = ao[aoHoldAry[key]])\n    }\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\n\n/**\n * @description 保留值，其它删除\n * @param {[]|{}} ao array或object\n * @param {*} aoValue 要保留的值，可字符或数组\n * @returns {[]|{}}\n */\nexport const aoHoldValue = (ao: any[] | Record<string | number | symbol, any>, aoValue: any): any[] | Record<string | number | symbol, any> => {\n  aoValue = typeArray(aoValue) ? aoValue : [aoValue]\n  const result: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  for (const k in aoValue) {\n    for (const e in ao) {\n      if (JSON.stringify(aoValue[k]) === JSON.stringify(ao[e])) {\n        typeArray(ao) ? result.push(ao[e]) : (result[e] = ao[e])\n      }\n    }\n  }\n  return result\n}\n","import {aoCleanKeyOne} from './aoCleanKeyOne'\n\n/**\n * @description 随机取ao中number个值\n * @param {[]|{}} ao array或object\n * @param {number} number 取几个\n * @returns {[]}\n */\nexport const aoRandom = (ao: any[] | Record<string | number | symbol, any>, number: number): any[] => {\n  number = ~~Math.abs(number)\n  const array = aoCleanKeyOne(ao)\n  const result = []\n  for (let i = 0; i < number && array.length > 0; i++) {\n    const r = Math.floor(Math.random() * array.length)\n    result[i] = array[r]\n    array.splice(r, 1)\n  }\n  return result\n}\n","import {typeArray} from '../type/typeArray'\nimport {aoWhetherIn} from './aoWhetherIn'\n\n/**\n * @description 重复值\n * @param {[]|{}} ao array或object\n * @param {number} number 选项：1:不重复值的ao,2:不重复的键值,3:重复的键值\n * @returns {[]|{}}\n */\nexport const aoRepeat = (ao: any[] | Record<string | number | symbol, any>, number: number): any[] | Record<string | number | symbol, any> => {\n  number = ~~Math.abs(number)\n  const a: any[] | Record<string | number | symbol, any> = typeArray(ao) ? [] : {}\n  const b = []\n  const c = []\n  for (const key in ao) {\n    if (aoWhetherIn(a, ao[key], false)) {\n      c.push(key)\n    } else {\n      b.push(key)\n      typeArray(ao) ? a.push(ao[key]) : (a[key] = ao[key])\n    }\n  }\n  return +number === 1 ? a : +number === 2 ? b : c\n}\n","/**\n * @description 迪卡尔积\n * @example arrayDiKaErJi([1,2,3],[1,2,3],[1,2,3])\n * @returns {Array}\n */\nexport const arrayDiKaErJi = (...arrayAny: any[]): any[] =>\n  arrayAny.reduce(\n    (total: any, current: any) => {\n      const ret = [] as any[]\n      total.forEach((a: any) => {\n        current.forEach((b: any) => {\n          ret.push(a.concat([b]))\n        })\n      })\n      return ret\n    },\n    [[]]\n  )\n","/**\n * 将多层级的数组扁平化\n * @param {Array} arrayAny\n * @returns {Array}\n */\nexport const arrayFlatten = (arrayAny: any[]): any[] => {\n  while (arrayAny.some((item) => Array.isArray(item))) {\n    arrayAny = [].concat(...arrayAny)\n  }\n  return arrayAny\n}\n","/**\n * @description 判断要查询的数组是否至少有一个元素包含在目标数组中\n * @param {Array} arrayAny 需要查询的数组\n * @param {Array} arrayTar 目标数组\n */\nexport const arrayHasOne = (arrayAny: any[], arrayTar: any[]) => {\n  return arrayTar.some((value) => arrayAny.indexOf(value) > -1)\n}\n","/**\n * @param {Array} arrayAny1\n * @param {Array} arrayAny2\n * @description 得到两个数组的交集, 两个数组的元素为数值或字符串\n */\nexport const arrayIntersection = (arrayAny1: any[], arrayAny2: any[]) => {\n  const len = Math.min(arrayAny1.length, arrayAny2.length)\n  let i = -1\n  const res = []\n  while (++i < len) {\n    const item = arrayAny2[i]\n    if (arrayAny1.indexOf(item) > -1) {\n      res.push(item)\n    }\n  }\n  return res\n}\n","import {typeNumber} from '../type/typeNumber'\n\n/**\n * @description 排序数组\n * @param {[]} arrayAny 要排序的数组\n * @param {Boolean} [arrayOrder] 排序方式：(true)从小到大，(false)从大到小\n * @returns {[]}\n */\nexport const arrayOrder = (arrayAny: any[], arrayOrder: boolean): any[] => {\n  const ary = [...arrayAny]\n  ary.sort(function (a, b) {\n    a = typeNumber(a) ? +a : a\n    b = typeNumber(b) ? +b : b\n    return a > b ? 1 : -1\n  })\n  return arrayOrder ? ary : ary.reverse()\n}\n","import {aoReverse} from '../ao/aoReverse'\n\n/**\n * @description 根据字段进行arrayAny的排序\n * @param {[]} arrayAny 必须是[[],[],...]或[{},{},...]的形式\n * @param {Number|String} arrayField 字段名字：如果是 arrayAny 时，请用 arrayAny 的下标\n * @param {Boolean} [arrayOrder] 排序顺序：(true)从小到大，(false)从大到小\n * @returns {[]}\n * @example arrayOrderByField([[1, \"a\", 9], [2, \"b\", 8], [3, \"c\", 7], [4, \"d\", 6]], 1, false)\n * @example arrayOrderByField([{\"a\": 3}, {\"a\": 2}, {\"a\": 1}], \"a\")\n */\nexport const arrayOrderByField = (arrayAny: any[], arrayField: string | number, arrayOrder: boolean): any[] => {\n  const result = arrayAny.sort(function (a, b) {\n    const x = a[arrayField]\n    const y = b[arrayField]\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n  return arrayOrder ? result : (aoReverse(result) as any[])\n}\n","/**\n * @description 获取arrayAny的xy等比对换\n * @param {[]} arrayAny [[],[],...]\n * @returns {[]}\n * @example arrayAnyRatioReplace([[1,'a'],[2,'b'],[3,'c'],[4,'d']])\n */\nexport const arrayRatioReplace = (arrayAny: any[]) => {\n  const result = []\n  let count = 0\n  for (let o = 0; o < length; o++) {\n    if (count < arrayAny[o].length) {\n      count = arrayAny[o].length\n    }\n  }\n  for (let t = 0; t < count; t++) {\n    const ary = []\n    for (let i = 0; i < length; i++) {\n      // eslint-disable-next-line no-void\n      arrayAny[i][t] === void 0 && (arrayAny[i][t] = '')\n      ary.push(arrayAny[i][t])\n    }\n    result.push(ary)\n  }\n  return result\n}\n","/**\n * @description 以assign分隔arrayAny组成新的string\n * @param {[]} arrayAny 要分隔的数组\n * @param {String} char\n * @returns {String}\n */\nexport const arrayToStringChar = (arrayAny: any[], char: string): string =>\n  arrayAny.join(String(char))\n","/**\n * @description 得到两个数组的并集\n * @param {Array} arrayAny1\n * @param {Array} arrayAny2\n */\nexport const arrayUnion = (arrayAny1: any[], arrayAny2: any[]) =>\n  Array.from(new Set([...arrayAny1, ...arrayAny2]))\n","/**\n * @description 值是否在数组中\n * @param {[]} arrayAny 用来验证的列表\n * @param {*} value 要验证的值\n * @return {Boolean}\n */\nexport const arrayWhetherIn = (arrayAny: any[], value: any) => {\n  for (let i = 0; i < arrayAny.length; i++) {\n    if (value === arrayAny[i]) {\n      return true\n    }\n  }\n  return false\n}\n","import { browserUserAgent } from './browserUserAgent'\n\n/**\n * @description 浏览器信息对象\n * @returns {{edge: Boolean, opera: Boolean, weiXin: Boolean, safari: Boolean, chrome: Boolean, android: Boolean, firefox: Boolean, ipad: Boolean, ie: Boolean, iphone: Boolean}}\n */\nexport const browserInfoObject = (): Record<string, boolean> => {\n  const userAgent = browserUserAgent()\n  return {\n    android: userAgent.indexOf('android'.toLowerCase()) >= 0,\n    iphone: userAgent.indexOf('iphone'.toLowerCase()) >= 0,\n    ipad: userAgent.indexOf('ipad'.toLowerCase()) >= 0,\n    ie: !!window.ActiveXObject || 'ActiveXObject' in window,\n    edge: userAgent.indexOf('edge'.toLowerCase()) >= 0,\n    safari: userAgent.indexOf('safari'.toLowerCase()) >= 0,\n    firefox: userAgent.indexOf('firefox'.toLowerCase()) >= 0,\n    chrome: userAgent.indexOf('chrome'.toLowerCase()) >= 0,\n    opera: userAgent.indexOf('opera'.toLowerCase()) >= 0,\n    weiXin: userAgent.indexOf('MicroMessenger'.toLowerCase()) >= 0\n  }\n}\n","import { browserIsMobile } from './browserIsMobile'\n/**\n * @description 浏览器是否电脑浏览器\n * @returns {Boolean}\n */\nexport const browserIsPc = (): boolean => !browserIsMobile()\n","/**\n * @returns {String} 当前浏览器名称\n */\nexport const browserName = (): string => {\n  const ua = window.navigator.userAgent\n  const isExplorer = (exp: string) => {\n    return ua.indexOf(exp) > -1\n  }\n  if (isExplorer('MSIE')) {\n    return 'IE'\n  } else if (isExplorer('Firefox')) {\n    return 'Firefox'\n  } else if (isExplorer('Chrome')) {\n    return 'Chrome'\n  } else if (isExplorer('Opera')) {\n    return 'Opera'\n  } else if (isExplorer('Safari')) {\n    return 'Safari'\n  } else {\n    return 'Unknown'\n  }\n}\n","import {browserUserAgent} from './browserUserAgent'\n\n/**\n * @description 浏览器是否在数组中\n * @param {Array} browserArray 要查询的数组\n * @returns {Boolean}\n */\nexport const browserWhetherInArray = (browserArray: string[]): boolean => {\n  return browserArray.some((value) => browserUserAgent().indexOf(value.toLowerCase()) > 0)\n}\n","/**\n * @description 相加\n * @param calcArray\n * @returns {*}\n */\nexport const calcSum = (calcArray: number[]) =>\n  calcArray.reduce((total, current) => {\n    const oneLen = (total.toString().split('.')[1] || '').length\n    const twoLen = (current.toString().split('.')[1] || '').length\n    const maxLen = oneLen > twoLen ? oneLen : twoLen\n    const number = +'1'.padStart(maxLen, '0')\n    return (+total * number + +current * number) / number\n  })\n","/**\n * @description 全大写\n * @param {string} string\n * @returns {string}\n */\nexport const caseAllBig = (string: string): string => {\n  return String(string).toUpperCase()\n}\n\n","/**\n * @description 全小写\n * @param {string} string\n * @returns {string}\n */\nexport const caseAllSmall = (string: string): string => {\n  return String(string).toLowerCase()\n}\n\n","/**\n * @description 首字母大写，其它小写\n * @param {string} string\n * @returns {string}\n */\nexport const caseFirstBig = (string: string): string => {\n  return String(string).charAt(0).toUpperCase() + String(string).slice(1).toLowerCase()\n}\n","/**\n * @description 单词首字母大写，其它小写\n * @param {string} string\n * @returns {string}\n */\nexport const caseWordFirstBig = (string: string): string => {\n  const ary = String(string).split(' ')\n  for (let i = 0; i < ary.length; i++) {\n    ary[i] = ary[i].slice(0, 1).toUpperCase() + ary[i].slice(1).toLowerCase()\n  }\n  return ary.join(' ')\n}\n","import {classAdd} from './classAdd'\nimport {classRemove} from './classRemove'\n\n/**\n * @description 切换增减class\n * @param {HTMLElement} HTMLElement\n * @param {String} className\n */\nexport const classToggle = (HTMLElement: HTMLElement, className: string): void => {\n  HTMLElement.className.indexOf(className) === -1 ? classAdd(HTMLElement, className) : classRemove(HTMLElement, className)\n}\n","/**\n * @description 控制输入：每个number个字符中间加空格\n * @param controlValue\n * @param number\n * @returns {string}\n */\nexport const controlInputNumberSpace = (controlValue: string | number, number: number): string => {\n  const theValue = String(controlValue).replace(/\\s/g, '')\n  const array = []\n  const length = Math.ceil(theValue.length / number)\n  for (let i = 0; i < length; i++) {\n    array.push(theValue.substr(i * number, parseInt(String(number))))\n  }\n  return array.join(' ')\n}\n","import {holdFirst} from '../hold/holdFirst'\nimport {typeNumber} from '../type/typeNumber'\n\n/**\n * @description 控制价格的输入\n * @param {number|string} controlPrice\n * @param {number} [number]\n * @returns {string}\n */\nexport const controlInputPrice = (controlPrice: string | number, number: number): string => {\n  let thePrice = holdFirst(holdFirst(String(controlPrice).replace(/[^\\d.-]/g, ''), '-'), '.')\n  if (thePrice.substr(0, 1) === '.') {\n    thePrice = '0.' + thePrice.substr(1)\n  }\n  if (thePrice.substr(0, 2) === '-.') {\n    thePrice = '-0.' + thePrice.substr(2)\n  }\n  number = typeNumber(number) ? ~~number : 2\n  const ary = thePrice.split('.')\n  const int = ary[0]\n  const float = ary[1] || null\n  return float && float.length > number ? int + '.' + float.substr(0, number) : thePrice\n}\n","import {timeObject} from '../time/timeObject'\nimport {someYearMonthDays} from '../some/someYearMonthDays'\n\n/**\n * @description 获取number个月后（前）的日期，number可为正可为负\n * @param {*} [dateValue] 时间\n * @param {Number} number 几个月后（前）\n * @returns {Null|String}\n */\nexport const dateApartMonth = (dateValue: any = new Date(), number: number): string | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    const totalMonths = +theObject.y * 12 + +theObject.m + +number\n    let day = theObject.d\n    let year = Math.floor(totalMonths / 12)\n    let month = totalMonths % 12\n    if (month === 0) {\n      year = year - 1\n      month = 12\n    }\n    const monthDays = someYearMonthDays(year, month)\n    day = day > monthDays ? monthDays : day\n    const Year = String(year).padStart(4, '0')\n    const Month = String(month).padStart(2, '0')\n    const Day = String(day).padStart(2, '0')\n    return `${Year}-${Month}-${Day}`\n  } else {\n    return null\n  }\n}\n","import { timeObject } from '../time/timeObject'\n\n/**\n * @description 获取一个时间至number个月前(后)的所有年月的数据列表\n * @param {*} [dateValue] 时间\n * @param {Number|String} number\n * @returns {Array|Null}\n */\nexport const dateApartMonthList = (\n  dateValue: any = new Date(),\n  number: number\n): string[] | null => {\n  const theObject = timeObject(dateValue)\n  if (theObject) {\n    let y = +String(theObject.y).padStart(4, '0')\n    let m = +String(theObject.m).padStart(2, '0')\n    const array = []\n    const big = number > 0\n    number = Math.abs(number)\n    array.push(`${y}-${m}`)\n    for (let i = 0; i < +number; i++) {\n      if (big) {\n        m++\n        if (m >= 13) {\n          y += 1\n          m = 1\n        }\n      } else {\n        m--\n        if (m <= 0) {\n          y -= 1\n          m = 12\n        }\n      }\n      const Y = `${y}`.padStart(4, '0')\n      const M = `${m}`.padStart(2, '0')\n      array.push(`${Y}-${M}`)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","import { timeNewDate } from '../time/timeNewDate'\n\n/**\n * @description 两个日期时间相差多少天\n * @param {*} dateOne 日期一\n * @param {*} dateTwo 日期二\n * @param {Boolean} abs 绝对值\n * @returns {Number|Null}\n */\nexport const dateDifference = (\n  dateOne: any,\n  dateTwo: any,\n  abs: boolean\n): number | null => {\n  const oneObject = timeNewDate(dateOne)\n  const twoObject = timeNewDate(dateTwo)\n  if (oneObject && twoObject) {\n    abs = abs || false\n    const result = ~~(\n      (oneObject.getTime() - twoObject.getTime()) /\n      (1000 * 24 * 60 * 60)\n    )\n    return abs ? Math.abs(result) : result\n  } else {\n    return null\n  }\n}\n","import { timeNewDate } from '../time/timeNewDate'\nimport { timeGetYear } from '../time/timeGetYear'\nimport { timeGetMonth } from '../time/timeGetMonth'\nimport { dateApart } from './dateApart'\nimport { dateMonthFoot } from './dateMonthFoot'\n\n/**\n * @description 获取日期下月的年月\n * @param {*} [dateValue]\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\n * @returns {String|Array|Null}\n */\nexport const dateMonthNext = (\n  dateValue: any = new Date(),\n  isResultArray: boolean\n): string | string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject !== null) {\n    const next = dateApart(dateMonthFoot(dateValue), 1)\n    const year = timeGetYear(next) as string\n    const month = timeGetMonth(next) as string\n    isResultArray = isResultArray || false\n    return isResultArray ? [year, month] : `${year}-${month}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {timeGetYear} from '../time/timeGetYear'\nimport {timeGetMonth} from '../time/timeGetMonth'\nimport {dateApart} from './dateApart'\nimport {dateMonthHead} from './dateMonthHead'\n\n/**\n * @description 获取日期上月的年月\n * @param {*} [dateValue]\n * @param {Boolean} [isResultArray] 是否返回数组形式，若false则返回字符串，默认为false\n * @returns {Array|String|Null}\n */\nexport const dateMonthPrev = (\n  dateValue: any = new Date(),\n  isResultArray: boolean\n): string | string[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject) {\n    const apart = dateApart(dateMonthHead(dateValue), -1)\n    const year = timeGetYear(apart) as string\n    const month = timeGetMonth(apart) as string\n    isResultArray = isResultArray || false\n    return isResultArray ? [year, month] : `${year}-${month}`\n  } else {\n    return null\n  }\n}\n","import {timeNewDate} from '../time/timeNewDate'\nimport {dateApart} from './dateApart'\nimport {dateMonthFoot} from './dateMonthFoot'\nimport {dateOneWeek} from './dateOneWeek'\n\n/**\n * @description 获取日期一月的日期\n * @param {*} [dateValue]\n * @returns {Array|Null}\n */\nexport const dateOneMonth = (dateValue: any = new Date()): any[] | null => {\n  const theObject = timeNewDate(dateValue)\n  if (theObject) {\n    const array = []\n    const monthFoot = dateMonthFoot(dateValue)\n    const oneWeek = dateOneWeek(monthFoot) as string[]\n    array.push(oneWeek)\n    for (let i = 0; i < 6; i++) {\n      const apart = dateApart(oneWeek[0], -(i * 7 + 1))\n      if (new Date(String(apart)).getMonth() + 1 !== theObject.getMonth() + 1) {\n        break\n      }\n      const theWeek = dateOneWeek(apart)\n      array.unshift(theWeek)\n    }\n    return array\n  } else {\n    return null\n  }\n}\n","/**\n * @desc 保证字符串尾部含有指定字符\n * @param {number|string} ensureString\n * @param {number|string} ensureAssign\n * @returns {number|string}\n */\nexport const ensureFootHave = (ensureString: number | string, ensureAssign: number | string): string => {\n  const theString = String(ensureString)\n  const theAssign = String(ensureAssign)\n  return theString.substr(-theString.length) === theAssign ? theString : theString + theAssign\n}\n","/**\n * @desc 保证字符串头部含有指定字符串\n * @param {number|string} ensureString\n * @param {number|string} ensureAssign\n * @returns {number|string}\n */\nexport const ensureHeadHave = (ensureString: number | string, ensureAssign: number | string): string => {\n  const theString = String(ensureString)\n  const theAssign = String(ensureAssign)\n  return theString.substr(0, theAssign.length) === theAssign ? theString : theAssign + theString\n}\n","import { fileFullName } from './fileFullName'\n\n/**\n * @description 从字符串中提取文件的文件名称\n * @param {String} string\n * @returns {String}\n */\nexport const fileBaseName = (string: string): string =>\n  fileFullName(string).replace(/\\.[^.]+$/i, '')\n","import { fileSuffixName } from './fileSuffixName'\n/**\n * @description 从字符串中提取文件的后缀名并进行分类\n * @param {String} string\n * @returns {String}\n */\nexport const fileClassify = (string: string): string => {\n  const suffixName = fileSuffixName(string)\n  const array = [\n    { n: 'doc', v: ['doc', 'docx', 'dot', 'docx'] },\n    { n: 'txt', v: ['txt'] },\n    { n: 'xls', v: ['xls', 'xlsx'] },\n    { n: 'ppt', v: ['ppt', 'pptx'] },\n    { n: 'pdf', v: ['pdf'] },\n    { n: 'htm', v: ['htm', 'html'] },\n    { n: 'pic', v: ['png', 'jpg', 'jpeg', 'bmp', 'gif'] },\n    {\n      n: 'vid',\n      v: [\n        'avi',\n        'rm',\n        'mpg',\n        'mpeg',\n        'mpe',\n        'wmv',\n        'mp4',\n        'mkv',\n        'vob',\n        '3gp',\n        'mov'\n      ]\n    },\n    { n: 'aud', v: ['wav', 'mp3', 'wma', 'aif', 'cda', 'mid', 'caf', 'amr'] },\n    { n: 'app', v: ['exe', 'app', 'ipa', 'apk'] },\n    { n: 'zip', v: ['zip', 'rar'] }\n  ]\n  let result = 'other'\n  for (let i = 0; i < array.length; i++) {\n    if (array[i].v.includes(suffixName)) {\n      result = array[i].n\n      break\n    }\n  }\n  return result\n}\n","/**\n * @description 文件大小的单位\n * @param {Number} fileSize 文件大小\n * @param {Number} fixed 保留浮点位数\n * @returns {String}\n */\nexport const fileUnit = (fileSize: number, fixed: number): string => {\n  const array = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n  const k = 1024\n  const i = Math.floor(Math.log(fileSize) / Math.log(k))\n  return (fileSize / Math.pow(k, i)).toFixed(fixed) + array[i]\n}\n","/**\n * @description 是否 domain 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatDomain = (string: string): boolean =>\n  /^[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+$/.test(String(string))\n","/**\n * @description 是否外链格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatExternal = (string: string): boolean =>\n  /^(https?:|mailto:|tel:)/.test(String(string))\n","/**\n * @description 是否 idCard 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatIdCard = (string: string): boolean =>\n  /^[1-9](\\d{14}|\\d{16}[0-9x])$/i.test(String(string))\n","/**\n * @description 是否 imageBase 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatImageBase = (string: string): boolean =>\n  /^data:image\\/(bmp|png|gif|jpg|jpeg);base64,/.test(String(string))\n","/**\n * @description 是否 ip 格式\n * @param {String} string\n * @returns {Boolean}\n */\n\nexport const formatIp = (string: string): boolean => {\n  if (/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/.test(String(string))) {\n    const [a, b, c, d] = string.split('.')\n    return +a < 256 && +b < 256 && +c < 256 && +d < 256\n  } else {\n    return false\n  }\n}\n","/**\n * @description 是否 telephone 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatTelephone = (string: string): boolean =>\n  /^[0-9-()]{5,18}$/.test(String(string))\n","/**\n * @description 是否 url 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatUrl = (string: string): boolean =>\n  /^((https?:)?\\/\\/)?[a-z0-9]+(([.-])[a-z0-9]+)*\\.[a-z0-9]+/.test(String(string))\n","/**\n * @description 是否 zip 格式\n * @param {String} string\n * @returns {Boolean}\n */\nexport const formatZip = (string: string): boolean =>\n  /^\\d{6}$/.test(String(string))\n","/**\n * @description 字符串中是否含有指定的字符（串）\n * @param {String} string\n * @param {String} haveAssign\n * @returns {Boolean}\n */\nexport const haveAssign = (string: string, haveAssign: string): boolean => {\n  return String(string).indexOf(String(haveAssign)) >= 0\n}\n\n","/**\n * @description 保留中文\n * @param {Number|String} string\n * @returns {String}\n */\nexport const holdCn = (string: string): string => {\n  return String(string).replace(/[^\\u4e00-\\u9fa5]/g, '')\n}\n\n","/**\n * @description 保留字母\n * @param {string} string\n * @returns {string}\n */\nexport const holdLetter = (string: string): string => {\n  return String(string).replace(/[^a-zA-Z]/g, '')\n}\n\n","/**\n * @description 保留数字\n * @param {string} string\n * @returns {string}\n */\nexport const holdNumber = (string: string): string => {\n  return String(string).replace(/[^0-9]/g, '')\n}\n\n","/**\n * @description 关键字高亮\n * @param {Object} lightObject 对象\n * @param {String} lightKey 键\n * @param {String} lightValue 值\n * @param {String} [lightColor] 颜色\n * @returns {String}\n */\nexport const keyLight = (\n  lightObject: Record<string | number | symbol, any>,\n  lightKey: string,\n  lightValue: string,\n  lightColor: string = '#1980ff'\n) => {\n  return lightValue\n    ? lightObject[lightKey]\n      ? lightValue.replace(\n        new RegExp(lightObject[lightKey], 'ig'),\n        (val) => `<span style='color:${lightColor}'>${val}</span>`\n      )\n      : lightValue\n    : '--'\n}\n","/**\n * @description 读取本地缓存\n * @param {string} localKey\n * @returns {*}\n */\nexport const localRead = (localKey: string): string => {\n  return localStorage.getItem(localKey) || ''\n}\n\n","/**\n * @description 存储数据\n * @param localKey\n * @param localValue\n */\nexport const localSave = (localKey: string, localValue: string): void => {\n  localStorage.setItem(localKey, localValue)\n}\n","import {timeObject} from '../time/timeObject'\n\n/**\n * @description 两个时间相差几个月\n * @param {*} timeOne 时间一\n * @param {*} timeTwo 时间二\n * @param {Boolean} [abs] 绝对值\n * @returns {Number}\n * **/\nexport const monthDifference = (timeOne: any, timeTwo: any, abs: boolean) => {\n  abs = abs || true\n  const oneObject = timeObject(timeOne)\n  const twoObject = timeObject(timeOne)\n  if (oneObject && twoObject) {\n    const oneCount = oneObject.y * 12 + oneObject.m\n    const twoCount = twoObject.y * 12 + twoObject.m\n    const result = oneCount - twoCount\n    return abs ? Math.abs(result) : result\n  } else {\n    return 0\n  }\n}\n","/**\n * @description 数字加逗号\n * @param {Number|String} number\n * @returns {String}\n */\nexport const numberAddComma = (number: number): string => {\n  return String(+number || 0).replace(/^-?\\d+/g, (m) => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n}\n\n","/**\n * @description 数字位数不足前补零\n * @param {Number|String} number\n * @param {Number|String} length\n * @returns {String}\n */\nexport const numberAddZero = (number: number, length: number): string =>\n  String(~~Math.abs(number)).padStart(~~Math.abs(length), '0')\n","import { replaceByObject } from '../replace/replaceByObject'\n\n/**\n * @description 去掉空格和逗号\n * @param {string} string\n * @returns {number}\n */\nexport const numberGet = (string: string): number =>\n  +replaceByObject(string, { ',': '', ' ': '' })\n","/**\n * @description 价格大写\n * @param {Number|String} number\n * @returns {String}\n */\nexport const numberPriceBigWrite = (number: number): string => {\n  const fraction = ['角', '分']\n  const digit = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']\n  const unit = [\n    ['元', '万', '亿'],\n    ['', '拾', '佰', '仟']\n  ]\n  const head = number < 0 ? '欠' : ''\n  number = Math.abs(+number)\n  let string = ''\n  for (let i = 0; i < fraction.length; i++) {\n    string += (\n      digit[Math.floor(number * 10 * Math.pow(10, i)) % 10] + fraction[i]\n    ).replace(/零./, '')\n  }\n  string = string || '整'\n  number = Math.floor(number)\n  for (let i = 0; i < unit[0].length && number > 0; i++) {\n    let dot = ''\n    for (let j = 0; j < unit[1].length && number > 0; j++) {\n      dot = digit[number % 10] + unit[1][j] + dot\n      number = Math.floor(number / 10)\n    }\n    string =\n      dot.replace(/(零.)*零$/, '').replace(/^$/, '零') + unit[0][i] + string\n  }\n  return (\n    head +\n    string\n      .replace(/(零.)*零元/, '元')\n      .replace(/(零.)+/g, '零')\n      .replace(/^整$/, '零元整')\n  )\n}\n","/**\n * @description 数字以单位表示\n * @param {Number} number\n * @param {Number} fixed 四舍五入\n * @returns {String}\n */\nexport const numberUnit = (number: number, fixed: number): string => {\n  const head = number < 0 ? '-' : ''\n  number = ~~Math.abs(number)\n  fixed = ~~Math.abs(fixed)\n  const result =\n    number < 1e3\n      ? number\n      : number >= 1e3 && number < 1e4\n        ? (number / 1e3).toFixed(fixed) + '千'\n        : number >= 1e4 && number < 1e8\n          ? (number / 1e4).toFixed(fixed) + '万'\n          : number >= 1e8\n            ? (number / 1e8).toFixed(fixed) + '亿'\n            : number\n  return head + result\n}\n","import { typeArray } from '../type/typeArray'\n\n/**\n * @description 删除object的元素\n * @param {Object} theObject\n * @param {Array|String} objectKey\n * @returns {Object}\n */\nexport const objectDeleteElement = (\n  theObject: Record<string | number | symbol, any>,\n  objectKey: string | string[]\n): Record<string | number | symbol, any> => {\n  const keyAry = (typeArray(objectKey) ? objectKey : [objectKey]) as string[]\n  keyAry.map((item) => delete theObject[item])\n  return theObject\n}\n","/**\n * @description 是否有字节点\n * @param {Object} theObject 要检查的对像\n * @param {String} [nodeName] 节点名称\n * @returns {Boolean}\n */\nexport const objectHasChildren = (\n  theObject: Record<string | number | symbol, any>,\n  nodeName: string\n): boolean => {\n  nodeName = nodeName || 'children'\n  return theObject[nodeName] && theObject[nodeName].length > 0\n}\n","/**\n * @description 获取object的长度\n * @param {Object} theObject\n * @returns {Number}\n */\nexport const objectLength = (\n  theObject: Record<string | number | symbol, any>\n): number => {\n  let len = 0\n  Object.keys(theObject).forEach(() => {\n    len++\n  })\n  return len\n}\n","/**\n * @description 重命名object的键名\n * @param {Object} theObject\n * @param {String} objectKey\n * @param {String} newKey\n * @returns {Object}\n */\nexport const objectRenameKey = (\n  theObject: Record<string | number | symbol, any>,\n  objectKey: string,\n  newKey: string\n): Record<string | number | symbol, any> => {\n  if (Object.keys(theObject).indexOf(objectKey) !== -1) {\n    theObject[newKey] = theObject[objectKey]\n    delete theObject[objectKey]\n  }\n  return theObject\n}\n","import { formatHexColor } from '../format/formatHexColor'\n\n/**\n * @description 十六进制颜色转RGB颜色\n * @param {string} hex\n * @param {number} [opacity]\n * @return {string}\n */\nexport const someColorHexToRGB = (hex: string, opacity = 1): string => {\n  let sHex = hex.toLowerCase()\n  if (formatHexColor(hex)) {\n    if (sHex.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1))\n      }\n      sHex = sColorNew\n    }\n    const sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)))\n    }\n    return opacity\n      ? 'RGBA(' + sColorChange.join(',') + ',' + String(opacity) + ')'\n      : 'RGB(' + sColorChange.join(',') + ')'\n  }\n  return sHex\n}\n","/**\n * @description RGB颜色转十六进制颜色\n * @param {number} r\n * @param {number} g\n * @param {number} b\n * @return {string}\n */\nexport const someColorRGBToHex = (r: number, g: number, b: number): string => {\n  const hex = ((r << 16) | (g << 8) | b).toString(16)\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex\n}\n","/**\n * @description 最高的 z-index 值\n * @returns {Number}\n */\nexport const someMaxZIndex = (): number =>\n  ~~(new Date().getTime() / 1000).toFixed(0)\n","/**\n * @description 取随机颜色\n * @returns {String}\n */\nexport const someRandomColor = (): string => {\n  const array = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F'\n  ]\n  let string = ''\n  for (let i = 0; i < 6; i++) {\n    const id = Math.ceil(Math.random() * 15)\n    string += array[id]\n  }\n  return '#' + string\n}\n","import {haveCn} from '../have/haveCn'\nimport {stringCut} from './stringCut'\n\n/**\n * @description 字符串截取（中英文分别设置）\n * @param {Number|String} string 要截取的字符串\n * @param {Number} cnNumber 有中文要截取的数量\n * @param {Number} enNumber 无中文要截取的数量\n * @returns {String}\n */\nexport const stringCutCn = (string: string, cnNumber: number, enNumber: number): string => {\n  const theCnNumber = ~~Math.abs(cnNumber)\n  const theEnNumber = ~~Math.abs(enNumber)\n  return haveCn(string) ? stringCut(string, theCnNumber) : stringCut(string, theEnNumber)\n}\n","/**\n * @description 字符串循环\n * @param {Number|String} string 要循环的字符串\n * @param {Number} number 要循环的次数\n * @returns {String}\n */\nexport const stringLoop = (string: string, number: number): string => {\n  const theNumber = ~~String(number)\n  let result = ''\n  for (let i = 0; i < theNumber; i++) {\n    result += String(string)\n  }\n  return result\n}\n","/**\n * @description 随机 number 个字符\n * @param {Number} number 需要几个字符\n * @returns {String}\n */\nexport const stringRandom = (number: number): string => {\n  const theNumber = ~~Math.abs(number)\n  let string = ''\n  for (let i = 0; i < theNumber; i++) {\n    string += Math.random().toString(36).substr(2)\n  }\n  return string.substr(0, theNumber)\n}\n","/**\n * @description 字符串反序\n * @param {Number|String} string\n * @returns {String}\n */\nexport const stringReverse = (string: string): string => {\n  return String(string).split('').reverse().join('')\n}\n\n","/**\n * @description 以指定字符分隔字符串组成新的数组\n * @param {Number|String} string 要分隔的字符串\n * @param {Number|String} char 指定字符\n * @returns {Array}\n */\nexport const stringToArrayChar = (string: string, char: string): string[] => {\n  return String(string).split(String(char))\n}\n\n","/**\n * @description 以个数分隔字符串组成新的数组\n * @param {Number|String} string 要分隔的字符串\n * @param {Number|String} number 多少数量\n * @returns {Array}\n */\nexport const stringToArrayNumber = (string: string, number: number): string[] => {\n  const theString = String(string)\n  const theNumber = ~~Math.abs(number)\n  const array = []\n  const length = Math.ceil(theString.length / theNumber)\n  for (let i = 0; i < length; i++) {\n    array.push(theString.substr(i * theNumber, theNumber))\n  }\n  return array\n}\n","import {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（中文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoCn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? '刚刚'\n      : diff < 3600\n        ? ~~(diff / 60) + '分钟前'\n        : diff < 86400\n          ? ~~(diff / 3600) + '小时前'\n          : diff < 691200\n            ? ~~(diff / 86400) + '天前'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {somePluralize} from '../some/somePluralize'\nimport {H_DATETIME} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timestamp} from './timestamp'\n\n/**\n * @description 多少时间前（英文）\n * @param {*} timeValue\n * @param {string} [format]\n * @param {boolean} [zero] 是否加零，默认加零\n * @returns {null|string}\n */\nexport const timeAgoEn = (\n  timeValue: any = new Date(),\n  format: string = H_DATETIME,\n  zero: boolean = true\n): string | null => {\n  const theTimestamp = timestamp(timeValue) // 时间戳(10位)\n  if (theTimestamp !== null) {\n    const nowTimestamp = ~~(Date.now() / 1000) // 时间戳(10位)\n    const diff = nowTimestamp - theTimestamp\n    return diff < 60\n      ? 'now'\n      : diff < 3600\n        ? somePluralize(~~(diff / 60), ' minute') + 'ago'\n        : diff < 86400\n          ? somePluralize(~~(diff / 3600), ' hour') + 'ago'\n          : diff < 691200\n            ? somePluralize(~~(diff / 86400), ' day') + 'ago'\n            : timeFormat(timeValue, format, zero)\n  } else {\n    return null\n  }\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的日份\n * @param {*} [timeValue]\n * @returns {String|Null}\n */\nexport const timeGetDay = (timeValue: any = new Date()): string | null => {\n  const theTime = timeValue || new Date()\n  const theObject = timeObject(theTime)\n  return theObject !== null ? String(theObject.d).padStart(2, '0') : null\n}\n","import {timeObject} from './timeObject'\n\n/**\n * @description 时间的年份\n * @param {*} [timeValue]\n * @param {boolean} isArray\n * @returns {string|null|string[]}\n */\nexport const timeGetYearMonth = (timeValue: any = new Date(), isArray: boolean = false): null | any[] | string => {\n  const theTime = timeValue || new timeValue()\n  const theObject = timeObject(theTime)\n  return theObject == null ?\n    null : isArray ?\n      [theObject.y, theObject.m] : `${String(theObject.y).padStart(4, '0')}-${String(theObject.m).padStart(2, '0')}`\n}\n","import { H_DATETIME, H_M_D_H_I } from './timeText'\nimport { timeFormat } from './timeFormat'\nimport { timeIsEarly } from './timeIsEarly'\nimport { timestamp } from './timestamp'\n\n/**\n * @param {*} timeValue 时间\n * @returns {String} 相对时间字符串\n */\nexport const timeRelativeTime = (timeValue: any = new Date()): string | null => {\n  const theTimeStamp = timestamp(timeValue)\n  if (theTimeStamp) {\n    const nowTimeStamp = Math.floor(Date.now() / 1000) // 获取当前时间时间戳\n    const isEarly = timeIsEarly(theTimeStamp, nowTimeStamp) // 判断传入时间戳是否早于当前时间戳\n    let diff = nowTimeStamp - theTimeStamp // 获取两个时间戳差值\n    if (!isEarly) {\n      // 如果isEarly为false则差值取反\n      diff = -diff\n    }\n    const dirStr = isEarly ? '前' : '后'\n    let resStr\n    if (diff <= 59) {\n      // 少于等于59秒\n      resStr = diff + '秒' + dirStr\n    } else if (diff > 59 && diff <= 3599) {\n      // 多于59秒，少于等于59分钟59秒\n      resStr = Math.floor(diff / 60) + '分钟' + dirStr\n    } else if (diff > 3599 && diff <= 86399) {\n      // 多于59分钟59秒，少于等于23小时59分钟59秒\n      resStr = Math.floor(diff / 3600) + '小时' + dirStr\n    } else if (diff > 86399 && diff <= 2623859) {\n      // 多于23小时59分钟59秒，少于等于29天59分钟59秒\n      resStr = Math.floor(diff / 86400) + '天' + dirStr\n    } else if (diff > 2623859 && diff <= 31567859 && isEarly) {\n      // 多于29天59分钟59秒，少于364天23小时59分钟59秒，且传入的时间戳早于当前\n      resStr = timeFormat(theTimeStamp, H_M_D_H_I, true)\n    } else {\n      resStr = timeFormat(theTimeStamp, H_DATETIME, true)\n    }\n    return resStr\n  } else {\n    return null\n  }\n}\n","/**\n * @description 秒牌\n * @param {number} seconds 秒数\n * @returns {string}\n */\nexport const timeSecondBar = (seconds: number) => {\n  let showMinutes = 0\n  let showHours = 0\n  let showDays = 0\n  const showSeconds = ~~(+seconds % 60)\n  if (seconds > 59) {\n    showMinutes = ~~(+seconds / 60)\n  }\n  if (showMinutes > 59) {\n    showHours = ~~(showMinutes / 60)\n  }\n  showMinutes = ~~(showMinutes % 60)\n  if (showHours > 59) {\n    showDays = ~~(showHours / 24)\n  }\n  showHours = ~~(showHours % 24)\n  const showHoursStr = String(showHours).padStart(2, '0')\n  const showMinutesStr = String(showMinutes).padStart(2, '0')\n  const showSecondsStr = String(showSeconds).padStart(2, '0')\n  const last = `${showHoursStr}:${showMinutesStr}:${showSecondsStr}`\n  return showDays === 0 ? last : `${showDays}.${last}`\n}\n","import {H_H_I, H_Y_M_D_H_I} from './timeText'\nimport {timeFormat} from './timeFormat'\nimport {timeDifference} from './timeDifference'\nimport {timeObject} from './timeObject'\n\n/**\n * @description 短时间\n * @param {*} timeValue\n * @returns {Null|String}\n */\nexport const timeShort = (timeValue: any = new Date()) => {\n  const theObject = timeValue ? timeObject(timeValue) : timeObject(new Date())\n  if (theObject !== null) {\n    const nowObject = timeObject(new Date())\n    const dateOne = `${theObject?.y}-${theObject?.m}-${theObject?.d}`\n    const dateTwo = `${nowObject?.y}-${nowObject?.m}-${nowObject?.d}`\n    const diff = +(timeDifference(dateOne, dateTwo, false) as number)\n    const oneDaySeconds = 86400 // 一天秒数\n    return diff === oneDaySeconds * 2\n      ? '后天 ' + timeFormat(timeValue, H_H_I, true)\n      : diff === oneDaySeconds\n        ? '明天 ' + timeFormat(timeValue, H_H_I, true)\n        : diff === 0\n          ? timeFormat(timeValue, H_H_I, true)\n          : diff === -oneDaySeconds\n            ? '昨天 ' + timeFormat(timeValue, H_H_I, true)\n            : diff === -oneDaySeconds * 2\n              ? '前天 ' + timeFormat(timeValue, H_H_I, true)\n              : theObject.y === nowObject?.y\n                ? timeFormat(timeValue, H_H_I, true)\n                : timeFormat(timeValue, H_Y_M_D_H_I, true)\n  } else {\n    return null\n  }\n}\n","/**\n * @description 判断时间戳格式是否是毫秒\n * @param {Number} timestamp\n * @returns {Boolean}\n */\nexport const timeStampIsMillisecond = (timestamp: number) => String(timestamp).length > 10\n","/**\n * @description 是否boolean类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeBoolean = (typeValue: any) =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object boolean]'\n","import { typeFunction } from './typeFunction'\nimport { typeRegexp } from './typeRegexp'\n/**\n * @description 是否empty类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeEmpty = (typeValue: any): boolean =>\n  !typeFunction(typeValue) &&\n  !typeRegexp(typeValue) &&\n  (typeValue == null ||\n    typeValue === 'undefined' ||\n    typeValue.length === 0 ||\n    JSON.stringify(typeValue) === '{}')\n","import { typeNumber } from './typeNumber'\n/**\n * @description 是否float类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeFloat = (typeValue: any): boolean =>\n  typeNumber(typeValue) && typeValue % 1 !== 0\n","/**\n * @description 是否HTMLElement类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeHTMLElement = (typeValue: any): boolean => {\n  const d = document.createElement('div')\n  try {\n    d.appendChild(typeValue.cloneNode(true))\n    return typeValue.nodeType === 1\n  } catch (e) {\n    return typeValue === window || typeValue === document\n  }\n}\n","import { typeInt } from './typeInt'\n/**\n * @description 是否intMinus类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntMinus = (typeValue: any): boolean => typeInt(typeValue) && typeValue < 0\n","import { typeInt } from './typeInt'\n/**\n * @description  是否intPositive类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeIntPositive = (typeValue: any): boolean =>\n  typeInt(typeValue) && typeValue > 0\n","/**\n * @description 是否symbol类型\n * @param {*} typeValue\n * @returns {Boolean}\n */\nexport const typeSymbol = (typeValue: any): boolean =>\n  Object.prototype.toString.call(typeValue).toLowerCase() === '[object symbol]'\n","/**\n * @description uniCode解码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeDecode = (string: string): string =>\n  decodeURI(string.replace(/\\\\/g, '%'))\n","/**\n * @description uniCode编码\n * @param {String} string\n * @returns {String}\n */\nexport const uniCodeEncode = (string: string): string => {\n  const array = []\n  for (let i = 0; i < string.length; i++) {\n    array[i] = ('00' + string.charCodeAt(i).toString(16)).slice(-4)\n  }\n  return '\\\\u' + array.join('\\\\u')\n}\n","/**\n * @description urlCode解码\n * @param {String} string\n * @returns {String}\n */\nexport const urlCodeDecode = (string: string): string =>\n  decodeURIComponent(string)\n","/**\n * @description urlCode编码\n * @param {String} string\n * @returns {String}\n */\nexport const urlCodeEncode = (string: string): string =>\n  encodeURIComponent(string)\n","import { urlStringQueryObject } from './urlStringQueryObject'\n\n/**\n * @description 获取网址字符串中的一个参数\n * @param {String} urlString 网址字符串\n * @param {String} name 参数名称\n * @returns {*|null}\n */\nexport const urlStringQueryOne = (\n  urlString: string,\n  name: string\n): string | null => {\n  const object = urlStringQueryObject(urlString)\n  return name && typeof object[name] !== 'undefined' ? object[name] : null\n}\n","import { formatAllCn } from '../format/formatAllCn'\n\n/**\n * @desc 验证是否全中文\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateAllCn = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  min = 2,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatAllCn(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}必须是全中文`))\n    }\n  }\n}\n","import { formatAllNumber } from '../format/formatAllNumber'\n\n/**\n * @desc 验证是否数字格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateAllNumber = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatAllNumber(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDate } from '../format/formatDate'\n/**\n * @desc 验证是否date格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDate = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDate(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatDatetime } from '../format/formatDatetime'\n\n/**\n * @desc 验证是否dateTime格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n */\nexport const validateDatetime = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '未知',\n  action = '填写'\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatDatetime(validateValue)) {\n      callback()\n    } else {\n      callback(new Error(`${field}格式不正确`))\n    }\n  }\n}\n","import { formatEmail } from '../format/formatEmail'\n\n/**\n * @desc 验证是否电子邮箱格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateEmail = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 30\n) => {\n  const field = '电子邮箱'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatEmail(validateValue)) {\n      if (validateValue.length <= min || validateValue.length >= max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请填写正确的${field}`))\n    }\n  }\n}\n","/**\n * @desc 验证后的错误信息\n * @param {*} fields\n */\nexport const validateErrMsg = (fields: Record<string | number | symbol, any>) =>\n  fields[Object.keys(fields)[0]][0].message\n","import { formatMobile } from '../format/formatMobile'\n/**\n * @desc 验证是否手机号码格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} action\n */\nexport const validateMobile = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  action = '填写'\n) => {\n  const field = '手机号码'\n  const number = 11\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatMobile(validateValue)) {\n      if (validateValue.length !== number) {\n        callback(new Error(`${field}为${number}个字符`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`请${action}正确的${field}`))\n    }\n  }\n}\n","import { formatPrice } from '../format/formatPrice'\n\n/**\n * @desc 验证是否价格格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validatePrice = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field = '价格',\n  action = '填写',\n  min = 1,\n  max = 10\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (formatPrice(validateValue)) {\n      if (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max)) {\n        callback(\n          new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n        )\n      } else {\n        callback()\n      }\n    } else {\n      callback(new Error(`${field}只能是数字（最多2位小数）`))\n    }\n  }\n}\n","/**\n * @desc 验证是否已填\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {String} field\n * @param {String} [action]\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateRequire = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  field: string,\n  action = '填写',\n  min: number,\n  max: number\n) => {\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须${action}`))\n  } else {\n    if (\n      min &&\n      max &&\n      (validateValue.length < ~~Math.abs(min) || validateValue.length > ~~Math.abs(max))\n    ) {\n      callback(\n        new Error(`${field}在${~~Math.abs(min)}-${~~Math.abs(max)}个字符之间`)\n      )\n    } else {\n      callback()\n    }\n  }\n}\n","import { formatUsername } from '../format/formatUsername'\n\n/**\n * @desc 验证是否用户名格式\n * @param {*} rule\n * @param {String} validateValue\n * @param {*} callback\n * @param {Number} [min]\n * @param {Number} [max]\n */\nexport const validateUsername = (\n  rule: any,\n  validateValue: string,\n  callback: any,\n  min = 5,\n  max = 20\n) => {\n  const field = '用户名'\n  if (!validateValue || validateValue.length === 0) {\n    callback(new Error(`${field}必须填写`))\n  } else {\n    if (formatUsername(validateValue)) {\n      if (validateValue.length < min || validateValue.length > max) {\n        callback(new Error(`${field}在${min}-${max}个字符之间`))\n      } else {\n        callback()\n      }\n    } else {\n      callback(\n        new Error(\n          `${field}必须是以字母为开头，由字母、数字、减号、点、下划线组成`\n        )\n      )\n    }\n  }\n}\n","import {timeObject} from '../time/timeObject'\nimport {timeGetWeek} from '../time/timeGetWeek'\nimport {weekAryCn} from './weekAryCn'\n\n/**\n * @description 根据时间计算周几的中文\n * @param {*} timeValue 时间\n * @param {boolean} [isWeek] 是否使用周\n * @returns {Null|String}\n */\nexport const weekGetCn = (timeValue: any = new Date(), isWeek = false) => {\n  const theObject = timeObject(timeValue)\n  if (theObject !== null) {\n    const number = timeGetWeek(timeValue)\n    if (number !== null && number < weekAryCn.length && number >= 0) {\n      const week = isWeek ? '周' : '星期'\n      return `${week}${weekAryCn[number]}`\n    } else {\n      return null\n    }\n  } else {\n    return null\n  }\n}\n","import {timeObject} from '../time/timeObject'\nimport {timeGetWeek} from '../time/timeGetWeek'\nimport {weekAryEn} from './weekAryEn'\n\n/**\n * @description 根据时间计算周几的英文\n * @param {*} timeValue 时间\n * @returns {Null|String}\n */\nexport const weekGetEn = (timeValue: any = new Date()) => {\n  const theObject = timeObject(timeValue)\n  if (theObject !== null) {\n    const number = timeGetWeek(timeValue)\n    if (number !== null && number < weekAryEn.length && number >= 0) {\n      return weekAryEn[number]\n    } else {\n      return null\n    }\n  } else {\n    return null\n  }\n}\n"],"names":["addressBarHttp","document","location","protocol","addressBarHost","host","typeArray","typeValue","Object","prototype","toString","call","toLowerCase","aoCleanKeyOne","ao","result","key","push","typeObject","aoCleanKeyAll","count","aoWhetherIn","aoSearch","aoMatchCase","some","a","JSON","stringify","b","aoKeyName","aoReverse","keyArray","reverse","typeNumber","isNaN","browserUserAgent","navigator","userAgent","browserIsMobile","test","classHas","HTMLElement","className","match","classAdd","string","classNew","length","classRemove","array","split","keys","forEach","join","replaceAll","search","replace","String","replaceOne","holdFirst","char","tempValue","replaceFirstChar","otherReplaceEmpty","typeDate","Date","getTime","typeString","formatAllNumber","timeNewDate","timeValue","theNewDate","theTime","H_DATETIME","H_H_I","timeObject","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","w","getDay","timeFormat","format","zero","theObject","padStart","dateApart","dateValue","number","someWhetherLeapYear","year","someFebruaryDays","someYearMonthDays","month","dateMonthFoot","dateMonthHead","timeGetYear","timeGetMonth","dateWeekSunday","week","dateOneWeek","sunday","apart","ensureFootNone","ensureString","ensureAssign","theString","theAssign","strLen","theLen","substr","ensureHeadNone","fileFullName","createElement","href","pathname","fileSuffixName","formatAllCn","formatDate","formatDatetime","date","time","formatEmail","formatHexColor","formatMobile","formatPrice","formatUsername","haveCn","replaceByObject","replaceObject","somePluralize","unit","stringCut","Math","abs","have","none","timestamp","toFixed","timeDifference","timeOne","timeTwo","oneNewDate","twoNewDate","timeGetWeek","timeIsEarly","nowTime","nowNewDate","typeFunction","typeRegexp","typeInt","urlStringQueryObject","urlString","substring","lastIndexOf","json","$1","$2","name","decodeURIComponent","value","weekAryCn","weekAryEn","referrer","hash","slice","hostname","port","size","index","resIndex","Array","ceil","aoAssign","aoAssignAry","aoKey","aoKeyAry","aoValue","aoValueAry","aoHold","aoHoldAry","k","e","r","floor","random","splice","c","arrayAny","reduce","total","current","ret","concat","item","isArray","arrayTar","indexOf","arrayAny1","arrayAny2","len","min","res","arrayOrder","ary","sort","arrayField","x","o","t","from","Set","queryString","queryCallback","queryArray","filter","state","toUpperCase","android","iphone","ipad","ie","window","ActiveXObject","edge","safari","firefox","chrome","opera","weiXin","ua","isExplorer","exp","browserArray","calcArray","oneLen","twoLen","charAt","controlValue","theValue","parseInt","controlPrice","thePrice","int","float","totalMonths","day","monthDays","big","Y","M","dateOne","dateTwo","oneObject","twoObject","isResultArray","next","monthFoot","oneWeek","theWeek","unshift","suffixName","n","v","includes","fileSize","fixed","log","pow","haveAssign","lightObject","lightKey","lightValue","lightColor","RegExp","val","localKey","localStorage","getItem","localValue","setItem","fraction","digit","head","dot","j","objectKey","map","nodeName","newKey","hex","opacity","sHex","sColorNew","sColorChange","g","cnNumber","enNumber","theCnNumber","theEnNumber","theNumber","theTimestamp","diff","now","theTimeStamp","nowTimeStamp","isEarly","dirStr","resStr","seconds","showMinutes","showHours","showDays","showSeconds","last","nowObject","oneDaySeconds","appendChild","cloneNode","nodeType","decodeURI","charCodeAt","encodeURIComponent","object","rule","validateValue","callback","field","max","Error","action","fields","message","isWeek"],"mappings":"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"}